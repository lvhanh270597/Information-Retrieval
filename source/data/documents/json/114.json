{"content": "Tác_giả : Lê_Hùng_Sơn - Đại_học FPT_Table of_Contents Giới_thiệu Ví_dụ 1 : Dãy_số (C11SEQ) Đề_bài Hướng giải_quyết : Ví_dụ 2 : Phân_đoạn (VOI 2005 - Bảng_A)_Hướng giải_quyết Giới_thiệu Rời_rạc_hóa là một lĩnh_vực lớn có đối_tượng nghiên_cứu là các tập_hợp rời_rạc trong khoa_học máy_tính .\nỨng_dụng của của phương_pháp rất lớn và thường được sử_dụng trong rất nhiều kỳ thi lớn .\nTrong phạm_vi chuyên_đề ta chỉ xét một_số ví_dụ để hiểu rõ thêm phương_pháp này .\nKhi giải_thuật lập_trình ta hay quen gọi phương_pháp rời_rạc_hóa là nén số .\nThật_vậy , đúng như tên_gọi , bản_chất của phương_pháp ta hiểu nôm_na là đưa các vùng dữ_liệu lớn về vùng dữ_liệu nhỏ để dễ xử_lý , sao_cho vẫn thỏa_mãn yêu_cầu của bài_toán đặt ra .\nKỹ_thuật bổ_trợ trong phương_pháp này là đánh lại số thứ_tự hay còn được gọi_là nén số , được thực_hiện như_sau : Giả_sử_ta nén số_một mảng A_i có n phần_tử có_giá trị thuộc khoảng -109 , 109 về mảng nhỏ hơn có_giá trị thuộc khoảng 1 , n mà vẫn đảm bao được quan_hệ lớn bé .\nVí_dụ : a = 100 , 100 , 2000 , 1500 , 900000 → b = 1 , 1 , 3 , 2 , 4 B1 : Dùng 2 mảng song_song vali = ai , posi = i ( pos để lưu vị_trí đi_kèm giá_trị ai ) B2 : Sắp_xếp lại theo tăng dần của val chú_ý khi swap(vali , valj) nhớ swap(posi , posj) .\nB3 : Tạo một biến dem = 0 , last = max , duyệt các giá_trị vali nếu last khác vali thì : dem++ , last = vali; ở mỗi bước_ta cập_nhật bposi = dem .\nKết_thúc quá_trình trên , ta nhận được mảng b là nén từ mảng a với độ phức_tạp thao_tác nén này là O(nlog(n)) .\nVí_dụ 1 : Dãy_số (C11SEQ) Đề_bài Cho n số_nguyên (n \\le 105) số_nguyên a_1 , a_2 , \\dots , a_n với (a_i \\le 109) và 2 số L , R (L \\le R) .\nHãy đếm xem có bao_nhiêu cặp (i , j) thỏa L \\le a_i + a_i+1 + . . .\n+ a_j \\le R .\nInput : Dòng đầu chứa 3 số n , L , R .\nDòng 2 chứa n số_nguyên a_1 , a_2 , \\dots , a_n .\nOutput : In ra kết_quả cần tìm .\nExample : C11SEQ . INP 4 2 4 1 2 3 4 C11SEQ . OUT 4 Hướng giải_quyết : Hướng đơn_giản nhất_là duyệt mọi cặp đoạn (i , j) và kiểm_tra xem tổng nó có thỏa không và ta tăng biến đếm lên .\nTuy_nhiên cách này mất_chi phí thời_gian O(n2) với n \\le 105 thì không được khả_thi .\nBây_giờ ta thử gọi như_sau : S_i = a_1 + a_2 + \\dots + a_i .\nĐoạn con (i , j) \\ , (i \\ge j) thỏa_mãn điều_kiện nếu L \\le S_i - S_j-1 \\le R .\nBiến_đổi tiếp ta được 2 điều_kiện để thỏa là : S_i - L \\ge S_j-1 và S_i - R \\le S_j-1 .\nTiếp_theo , ta có : Nhận_xét 1 : S_i - L , \\ , S_i - R là 2 số cố_định .\nNhận_xét 2 : Quan_hệ lt;= hay gt;= cho ta thấy : không cần quan_tâm giá_trị của các số mà chỉ_cần đảm_bảo quan_hệ lt;= hay gt;= là được .\nVí_dụ : 1 lt; 5 ta có_thể nén thành 1 lt; 2 chả ảnh_hưởng kết_quả bài_toán .\nNhận_xét 3 : Quá_lắm_chỉ có 3n phần_tử cho tất_cả các giá_trị : S_i - L , S_i - R , S_j-1 , với n \\le 105 thì đây là con_số nhỏ .\nTừ 3 nhận_xét trên ta sẽ tìm cách đưa S_i - L , S_i - R , S_j-1 về các mảng nhỏ không quá 3n phần_tử để dễ_dàng quản_lý : Ta lập một mảng mới có 3n phần_tử : n phần_tử dạng S_i , n dạng S_i - L , n dạng S_i - R , nhớ lưu vị_trí đi_kèm .\nBây_giờ tiến_hành sort mảng đó lại , và ta tiến_hành đánh_số lai mảng đó , gọi các mảng p1_i , p2_i , p3_i là các giá_trị sau khi đánh_số lại của S_i , S_i - L , S_i - R .\nTa tiến_hành duyệt các_vị trí i , dùng 1 cây Segment_Tree hoặc Binary_Indexed_Tree để quản_lý và đếm : B1 : cập nhất kết_quả : tăng res thêm số_lượng phần_tử đoạn p3_i , p2_i đã xuất_hiện .\nB2 : thêm số_lượng 1 phần_tử p1_i vào cây .\nĐộ phức_tạp : O(3 n log(3 n)) .\nNgoài cách này ra , ta còn 1 cách dùng Phương_pháp chia_để_trị , sẽ có trong các tài_liệu sắp tới .\nCode tham_khảo (pascal) : // Code phần nén số : // ở đây thay_vì dùng 3 mảng p1i , p2i , p3i mình tận_dụng luôn mảng a : // ai = p1i , an + i = p2i , a2n + i = p3i procedure unzip ; var i , j , del : longint ; begin sort ( 1 , 3 n ); A 3 n + 1 .\nval : = high ( longint ); i : = 1 ; del : = 0 ; repeat inc ( del ); j : = i ; while A i .\nval = A j .\nval do begin B_A j .\npos : = del ; inc ( j ); end ; i : = j ; until i = 3 n + 1 ; end ; // Phần tính_toán kết_quả bằng Binary_Indexed_Tree for i : = n downto 2 do begin update ( B i ); res : = res + get ( B i - 1 + 2 n )- get ( B i - 1 + n ); end ; Ví_dụ 2 : Phân_đoạn (VOI 2005 - Bảng_A)_Cho dãy n số_nguyên a_1 , a_2 , \\dots , a_n và số k \\ , (1 \\le n , k \\le 15000) \\ , (a_i \\le 30000) hãy tìm số m nhỏ nhất sao_cho có_thể chia dãy đã cho thành k phần , mỗi phần là 1 đoạn các phân_tử liên_tiếp , và phải đảm_bảo tổng_mỗi phần không quá m .\nInput : Dòng đầu chứa số_nguyên n và k .\nDòng thứ 2 chứa n số_nguyên a_1 , a_2 , \\dots , a_n .\nOutput : In ra số_nguyên m .\nExample : QBSEGPAR . INP 9 4 1 1 1 3 2 2 1 3 1 QBSEGPAR . OUT 5 Hướng giải_quyết Nhận_xét 1 : Bài_toán yêu_cầu tìm m nhỏ nhất , theo kinh_nghiệm thì khi bài_toán bảo tìm giá_trị nhỏ nhất hay lớn nhất nhưng không xác_định được từ dữ_liệu bài thì ta nên nghĩ đến chặt nhị_phân .\nVùng giá_trị chặt có_thể chọn từ -109 , 109 là vừa hợp , cái này là tùy_chọn , còn tối_ưu nhất chỉ_cần chặt trong_khoảng -max(a_i) n , max(a_i)n .\nTuy_nhiên , ta chỉ dự_đoán là chặt nhị_phân nhưng chưa khẳng_định là có đúng không , ta có nhận_xét sau : _với m càng lớn thì việc chia thành k đoạn càng dễ _ → dùng chặt nhị_phân là chính_xác .\nNhận_xét 2 : Nếu ta có 1 giá_trị m xác_định , ta chia được ít_nhất_là a đoạn , chia nhiều nhất_là b đoạn , nếu tồn_tại k mà a \\le k \\le b thì luôn có cách chia k đoạn thỏa_mãn .\nĐể xác_định được a và b ta dùng phương_pháp Quy_hoạch_động .\nChặt nhị_phân không khó , ở đây khó là phương_pháp _quy hoạch động _cho thỏa_mãn thời_gian .\nCông_thức sơ_khai như_sau : S_i = a_1 + a_2 + \\dots + a_i .\nfmax_i = số đoạn chia được nhiều nhất trong dãy a_1 , a_2 , \\dots , a_i .\nfmin_i = số đoạn chia được ít_nhất trong dãy a_1 , a_2 , \\dots , a_i .\nKhởi tạo : fmax0 = 0 , fmin0 = 0 , fmaxi = -max (i ! = 0) , fmini = INF (i ! = 0) .\nCông_thức : fmaxi = max(fmaxi , fmaxj + 1) với j lt; i và Si - Sj lt;= m .\nfmini = min(fmini , fminj + 1) với j lt; i và Si - Sj lt;= m .\nNhận_thấy độ phức_tạp đây là O(n2 log(2 109)) không_thể đáp_ứng được thời_gian yêu_cầu là 1s nhưng ở trường_hợp quá bí ý_tưởng đây không_phải giải_pháp tồi giúp lấy_được một_ít điểm lẻ .\nĐể nhanh được chỉ_có cách là cải_tiến sao_cho tính mảng Quy_hoạch_động được nhanh , ở đây ta để_ý quan_hệ S_i - S_j \\le m chỉ_cần biến_đổi thành S_i - m \\le S_j → giải_pháp đã phần_nào sáng_sủa hơn và nếu tinh_ý thì đây chỉ là bài_toán 1 chiều , \"một nửa\" của ví_dụ 1 ở trên thôi → Bây_giờ ta chỉ_cần rời_rạc_hóa nó đi thay_vì 3 n , ta có mảng 2 n lưu các giá_trị S_i và S_i - m , ta sẽ tính dựa vào 1 cây Binary_Indexed_Tree cho_đơn giản thay_vì đếm như bài trên , vấn_đề ở đây chỉ là tìm max min , và update max , min .\nĐộ phức_tạp : O(n log(n) log(2 109)) .\n\n", "tagged": "Tác_giả/N :/CH Lê_Hùng_Sơn/Np -/CH Đại_học/N FPT_Table/Np of_Contents/Np Giới_thiệu/V Ví_dụ/C 1/M :/CH Dãy_số/Np (C11SEQ)/Np Đề_bài/Np Hướng/N giải_quyết/V :/CH Ví_dụ/C 2/M :/CH Phân_đoạn/Np (VOI/Np 2005/M -/CH Bảng_A)_Hướng/Np giải_quyết/V Giới_thiệu/V Rời_rạc_hóa/Np là/V một/M lĩnh_vực/N lớn/A có/V đối_tượng/N nghiên_cứu/V là/V các/L tập_hợp/N rời_rạc/A trong/E khoa_học/N máy_tính/N ./CH\nỨng_dụng/V của/E của/E phương_pháp/N rất/R lớn/A và/Cc thường/R được/V sử_dụng/V trong/E rất/R nhiều/A kỳ/N thi/V lớn/A ./CH\nTrong/E phạm_vi/N chuyên_đề/N ta/P chỉ/R xét/V một_số/L ví_dụ/C để/E hiểu/V rõ/A thêm/V phương_pháp/N này/P ./CH\nKhi/N giải_thuật/Np lập_trình/V ta/P hay/Cc quen/V gọi/V phương_pháp/N rời_rạc_hóa/Np là/V nén/V số/N ./CH\nThật_vậy/Np ,/CH đúng/A như/C tên_gọi/Np ,/CH bản_chất/N của/E phương_pháp/N ta/P hiểu/V nôm_na/Np là/V đưa/V các/L vùng/N dữ_liệu/N lớn/A về/E vùng/N dữ_liệu/N nhỏ/A để/E dễ/A xử_lý/V ,/CH sao_cho/Np vẫn/R thỏa_mãn/V yêu_cầu/V của/E bài_toán/N đặt/V ra/V ./CH\nKỹ_thuật/N bổ_trợ/V trong/E phương_pháp/N này/P là/V đánh/V lại/R số/N thứ_tự/N hay/Cc còn/R được/V gọi_là/V nén/V số/N ,/CH được/V thực_hiện/V như_sau/Np :/CH Giả_sử_ta/Np nén/V số_một/N mảng/N A_i/Np có/V n/Ny phần_tử/N có_giá/Np trị/V thuộc/V khoảng/N -109/Np ,/CH 109/M về/E mảng/N nhỏ/A hơn/A có_giá/Np trị/V thuộc/V khoảng/N 1/M ,/CH n/Ny mà/C vẫn/R đảm/Np bao/N được/V quan_hệ/N lớn/A bé/N ./CH\nVí_dụ/C :/CH a/Ni =/CH 100/M ,/CH 100/M ,/CH 2000/M ,/CH 1500/M ,/CH 900000/Np →/Np b/Ni =/CH 1/M ,/CH 1/M ,/CH 3/M ,/CH 2/M ,/CH 4/M B1/Ni :/CH Dùng/V 2/M mảng/N song_song/A vali/Np =/CH ai/P ,/CH posi/Np =/CH i/M (/CH pos/Np để/E lưu/V vị_trí/N đi_kèm/Np giá_trị/N ai/P )/CH B2/Ni :/CH Sắp_xếp/V lại/R theo/V tăng/V dần/R của/E val/Np chú_ý/V khi/N swap(vali/Np ,/CH valj)/Np nhớ/V swap(posi/Np ,/CH posj)/Np ./CH\nB3/N :/CH Tạo/V một/M biến/V dem/Np =/CH 0/M ,/CH last/Np =/CH max/Np ,/CH duyệt/V các/L giá_trị/N vali/Np nếu/C last/Np khác/A vali/Np thì/C :/CH dem++/Np ,/CH last/Np =/CH vali;/Np ở/E mỗi/L bước_ta/Np cập_nhật/V bposi/Np =/CH dem/Np ./CH\nKết_thúc/V quá_trình/N trên/E ,/CH ta/P nhận/V được/V mảng/N b/Ni là/V nén/V từ/E mảng/N a/Ni với/E độ/N phức_tạp/A thao_tác/V nén/V này/P là/V O(nlog(n))/Np ./CH\nVí_dụ/C 1/M :/CH Dãy_số/Np (C11SEQ)/Np Đề_bài/Np Cho/E n/Ny số_nguyên/Np (n/Np \\le/Np 105)/Np số_nguyên/Np a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_n/Np với/E (a_i/Np \\le/Np 109)/Np và/Cc 2/M số/N L/Ny ,/CH R/Np (L/Np \\le/Np R)/Np ./CH\nHãy/R đếm/V xem/V có/V bao_nhiêu/P cặp/N (i/Np ,/CH j)/Np thỏa/V L/Ny \\le/Np a_i/Np +/CH a_i+1/Np +/CH ./CH ./CH ./CH\n+/CH a_j/Np \\le/Np R/Np ./CH\nInput/Np :/CH Dòng/N đầu/N chứa/V 3/M số/N n/Ny ,/CH L/Ny ,/CH R/Np ./CH\nDòng/N 2/M chứa/V n/Ny số_nguyên/Np a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_n/Np ./CH\nOutput/Np :/CH In/V ra/V kết_quả/N cần/V tìm/V ./CH\nExample/Np :/CH C11SEQ/Np ./CH INP/Np 4/M 2/M 4/M 1/M 2/M 3/M 4/M C11SEQ/Np ./CH OUT/Np 4/M Hướng/N giải_quyết/V :/CH Hướng/N đơn_giản/A nhất_là/X duyệt/V mọi/L cặp/N đoạn/Nc (i/Np ,/CH j)/Np và/Cc kiểm_tra/V xem/V tổng/N nó/P có/V thỏa/V không/R và/Cc ta/P tăng/V biến/V đếm/V lên/V ./CH\nTuy_nhiên/C cách/N này/P mất_chi/Np phí/N thời_gian/N O(n2)/Np với/E n/Ny \\le/Np 105/Np thì/C không/R được/V khả_thi/A ./CH\nBây_giờ/P ta/P thử/V gọi/V như_sau/Np :/CH S_i/Np =/CH a_1/Np +/CH a_2/Np +/CH \\dots/Np +/CH a_i/Np ./CH\nĐoạn/Nc con/Nc (i/Np ,/CH j)/Np \\/Np ,/CH (i/Np \\ge/Np j)/Np thỏa_mãn/V điều_kiện/N nếu/C L/Ny \\le/Np S_i/Np -/CH S_j-1/Np \\le/Np R/Np ./CH\nBiến_đổi/V tiếp/V ta/P được/V 2/M điều_kiện/N để/E thỏa/V là/V :/CH S_i/Np -/CH L/Ny \\ge/Np S_j-1/Np và/Cc S_i/Np -/CH R/Np \\le/Np S_j-1/Np ./CH\nTiếp_theo/V ,/CH ta/P có/V :/CH Nhận_xét/N 1/M :/CH S_i/Np -/CH L/Ny ,/CH \\/Np ,/CH S_i/Np -/CH R/Np là/V 2/M số/N cố_định/A ./CH\nNhận_xét/N 2/M :/CH Quan_hệ/N lt;=/Np hay/Cc gt;=/Np cho/E ta/P thấy/V :/CH không/R cần/V quan_tâm/V giá_trị/N của/E các/L số/N mà/C chỉ_cần/Np đảm_bảo/V quan_hệ/N lt;=/Np hay/Cc gt;=/Np là/V được/V ./CH\nVí_dụ/C :/CH 1/M lt;/Np 5/M ta/P có_thể/R nén/V thành/V 1/M lt;/Np 2/M chả/R ảnh_hưởng/V kết_quả/N bài_toán/N ./CH\nNhận_xét/N 3/M :/CH Quá_lắm_chỉ/Np có/V 3n/Np phần_tử/N cho/E tất_cả/P các/L giá_trị/N :/CH S_i/Np -/CH L/Ny ,/CH S_i/Np -/CH R/Np ,/CH S_j-1/Np ,/CH với/E n/Ny \\le/Np 105/Np thì/C đây/P là/V con_số/N nhỏ/A ./CH\nTừ/E 3/M nhận_xét/N trên/E ta/P sẽ/R tìm/V cách/N đưa/V S_i/Np -/CH L/Ny ,/CH S_i/Np -/CH R/Np ,/CH S_j-1/Np về/E các/L mảng/N nhỏ/A không/R quá/R 3n/Np phần_tử/N để/E dễ_dàng/A quản_lý/V :/CH Ta/P lập/V một/M mảng/N mới/R có/V 3n/Np phần_tử/N :/CH n/Ny phần_tử/N dạng/N S_i/Np ,/CH n/Ny dạng/N S_i/Np -/CH L/Ny ,/CH n/Ny dạng/N S_i/Np -/CH R/Np ,/CH nhớ/V lưu/V vị_trí/N đi_kèm/Np ./CH\nBây_giờ/P tiến_hành/V sort/Np mảng/N đó/P lại/R ,/CH và/Cc ta/P tiến_hành/V đánh_số/Np lai/A mảng/N đó/P ,/CH gọi/V các/L mảng/N p1_i/Np ,/CH p2_i/Np ,/CH p3_i/Np là/V các/L giá_trị/N sau/E khi/N đánh_số/Np lại/R của/E S_i/Np ,/CH S_i/Np -/CH L/Ny ,/CH S_i/Np -/CH R/Np ./CH\nTa/P tiến_hành/V duyệt/V các_vị/Np trí/Np i/M ,/CH dùng/V 1/M cây/N Segment_Tree/Np hoặc/Cc Binary_Indexed_Tree/Np để/E quản_lý/V và/Cc đếm/V :/CH B1/Ni :/CH cập/V nhất/A kết_quả/N :/CH tăng/V res/Np thêm/V số_lượng/N phần_tử/N đoạn/Nc p3_i/Np ,/CH p2_i/Np đã/R xuất_hiện/V ./CH\nB2/Ni :/CH thêm/V số_lượng/N 1/M phần_tử/N p1_i/Np vào/E cây/N ./CH\nĐộ/N phức_tạp/A :/CH O(3/Np n/Ny log(3/Np n))/Np ./CH\nNgoài/E cách/N này/P ra/V ,/CH ta/P còn/R 1/M cách/N dùng/V Phương_pháp/N chia_để_trị/Np ,/CH sẽ/R có/V trong/E các/L tài_liệu/N sắp/R tới/E ./CH\nCode/Np tham_khảo/V (pascal)/Np :/CH //CH Code/Np phần/N nén/V số/N :/CH //CH ở/E đây/P thay_vì/X dùng/V 3/M mảng/N p1i/Np ,/CH p2i/Np ,/CH p3i/Np mình/P tận_dụng/V luôn/R mảng/N a/Ni :/CH //CH ai/P =/CH p1i/Np ,/CH an/A +/CH i/M =/CH p2i/Np ,/CH a2n/Np +/CH i/M =/CH p3i/Np procedure/Np unzip/Np ;/CH var/Np i/M ,/CH j/Np ,/CH del/Np :/CH longint/Np ;/CH begin/Np sort/Np (/CH 1/M ,/CH 3/M n/Ny );/CH A/Ni 3/M n/Ny +/CH 1/M ./CH\nval/Np :/CH =/CH high/Np (/CH longint/Np );/CH i/M :/CH =/CH 1/M ;/CH del/Np :/CH =/CH 0/M ;/CH repeat/Np inc/Np (/CH del/Np );/CH j/Np :/CH =/CH i/M ;/CH while/Np A/Ni i/M ./CH\nval/Np =/CH A/Ni j/Np ./CH\nval/Np do/E begin/Np B_A/Np j/Np ./CH\npos/Np :/CH =/CH del/Np ;/CH inc/Np (/CH j/Np );/CH end/Np ;/CH i/M :/CH =/CH j/Np ;/CH until/Np i/M =/CH 3/M n/Ny +/CH 1/M ;/CH end/Np ;/CH //CH Phần/N tính_toán/V kết_quả/N bằng/E Binary_Indexed_Tree/Np for/Np i/M :/CH =/CH n/Ny downto/Np 2/M do/E begin/Np update/Np (/CH B/Ni i/M );/CH res/Np :/CH =/CH res/Np +/CH get/Np (/CH B/Ni i/M -/CH 1/M +/CH 2/M n/Ny )-/Np get/Np (/CH B/Ni i/M -/CH 1/M +/CH n/Ny );/CH end/Np ;/CH Ví_dụ/C 2/M :/CH Phân_đoạn/Np (VOI/Np 2005/M -/CH Bảng_A)_Cho/Np dãy/Nc n/Ny số_nguyên/Np a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_n/Np và/Cc số/N k/N \\/Np ,/CH (1/Np \\le/Np n/Ny ,/CH k/N \\le/Np 15000)/Np \\/Np ,/CH (a_i/Np \\le/Np 30000)/Np hãy/R tìm/V số/N m/Nu nhỏ/A nhất/A sao_cho/Np có_thể/R chia/V dãy/Nc đã/R cho/E thành/V k/N phần/N ,/CH mỗi/L phần/N là/V 1/M đoạn/Nc các/L phân_tử/N liên_tiếp/A ,/CH và/Cc phải/V đảm_bảo/V tổng_mỗi/Np phần/N không/R quá/R m/Nu ./CH\nInput/Np :/CH Dòng/N đầu/N chứa/V số_nguyên/Np n/Ny và/Cc k/N ./CH\nDòng/N thứ/N 2/M chứa/V n/Ny số_nguyên/Np a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_n/Np ./CH\nOutput/Np :/CH In/V ra/V số_nguyên/Np m/Nu ./CH\nExample/Np :/CH QBSEGPAR/Np ./CH INP/Np 9/M 4/M 1/M 1/M 1/M 3/M 2/M 2/M 1/M 3/M 1/M QBSEGPAR/Np ./CH OUT/Np 5/M Hướng/N giải_quyết/V Nhận_xét/N 1/M :/CH Bài_toán/N yêu_cầu/V tìm/V m/Nu nhỏ/A nhất/A ,/CH theo/V kinh_nghiệm/N thì/C khi/N bài_toán/N bảo/V tìm/V giá_trị/N nhỏ/A nhất/A hay/Cc lớn/A nhất/A nhưng/C không/R xác_định/V được/V từ/E dữ_liệu/N bài/N thì/C ta/P nên/C nghĩ/V đến/E chặt/A nhị_phân/Np ./CH\nVùng/N giá_trị/N chặt/A có_thể/R chọn/V từ/E -109/Np ,/CH 109/M là/V vừa/R hợp/V ,/CH cái/Nc này/P là/V tùy_chọn/Np ,/CH còn/R tối_ưu/A nhất/A chỉ_cần/Np chặt/A trong_khoảng/Np -max(a_i)/Np n/Ny ,/CH max(a_i)n/Np ./CH\nTuy_nhiên/C ,/CH ta/P chỉ/R dự_đoán/V là/V chặt/A nhị_phân/Np nhưng/C chưa/R khẳng_định/V là/V có/V đúng/A không/R ,/CH ta/P có/V nhận_xét/N sau/E :/CH _với/Np m/Nu càng/R lớn/A thì/C việc/N chia/V thành/V k/N đoạn/Nc càng/R dễ/A _/Np →/Np dùng/V chặt/A nhị_phân/Np là/V chính_xác/A ./CH\nNhận_xét/N 2/M :/CH Nếu/C ta/P có/V 1/M giá_trị/N m/Nu xác_định/V ,/CH ta/P chia/V được/V ít_nhất_là/Np a/Ni đoạn/Nc ,/CH chia/V nhiều/A nhất_là/X b/Ni đoạn/Nc ,/CH nếu/C tồn_tại/V k/N mà/C a/Ni \\le/Np k/N \\le/Np b/Ni thì/C luôn/R có/V cách/N chia/V k/N đoạn/Nc thỏa_mãn/V ./CH\nĐể/E xác_định/V được/V a/Ni và/Cc b/Ni ta/P dùng/V phương_pháp/N Quy_hoạch_động/Np ./CH\nChặt/A nhị_phân/Np không/R khó/A ,/CH ở/E đây/P khó/A là/V phương_pháp/N _quy/Np hoạch/Np động/N _cho/Np thỏa_mãn/V thời_gian/N ./CH\nCông_thức/N sơ_khai/A như_sau/Np :/CH S_i/Np =/CH a_1/Np +/CH a_2/Np +/CH \\dots/Np +/CH a_i/Np ./CH\nfmax_i/Np =/CH số/N đoạn/Nc chia/V được/V nhiều/A nhất/A trong/E dãy/Nc a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_i/Np ./CH\nfmin_i/Np =/CH số/N đoạn/Nc chia/V được/V ít_nhất/A trong/E dãy/Nc a_1/Np ,/CH a_2/Np ,/CH \\dots/Np ,/CH a_i/Np ./CH\nKhởi/V tạo/V :/CH fmax0/Np =/CH 0/M ,/CH fmin0/Np =/CH 0/M ,/CH fmaxi/Np =/CH -max/Np (i/Np !/CH =/CH 0)/Np ,/CH fmini/Np =/CH INF/Np (i/Np !/CH =/CH 0)/Np ./CH\nCông_thức/N :/CH fmaxi/Np =/CH max(fmaxi/Np ,/CH fmaxj/Np +/CH 1)/Np với/E j/Np lt;/Np i/M và/Cc Si/Ny -/CH Sj/Np lt;=/Np m/Nu ./CH\nfmini/Np =/CH min(fmini/Np ,/CH fminj/Np +/CH 1)/Np với/E j/Np lt;/Np i/M và/Cc Si/Ny -/CH Sj/Np lt;=/Np m/Nu ./CH\nNhận_thấy/Np độ/N phức_tạp/A đây/P là/V O(n2/Np log(2/Np 109))/Np không_thể/R đáp_ứng/V được/V thời_gian/N yêu_cầu/V là/V 1s/Np nhưng/C ở/E trường_hợp/N quá/R bí/A ý_tưởng/N đây/P không_phải/Np giải_pháp/N tồi/A giúp/V lấy_được/X một_ít/L điểm/N lẻ/A ./CH\nĐể/E nhanh/A được/V chỉ_có/Np cách/N là/V cải_tiến/V sao_cho/Np tính/V mảng/N Quy_hoạch_động/Np được/V nhanh/A ,/CH ở/E đây/P ta/P để_ý/V quan_hệ/N S_i/Np -/CH S_j/Np \\le/Np m/Nu chỉ_cần/Np biến_đổi/V thành/V S_i/Np -/CH m/Nu \\le/Np S_j/Np →/Np giải_pháp/N đã/R phần_nào/L sáng_sủa/N hơn/A và/Cc nếu/C tinh_ý/Np thì/C đây/P chỉ/R là/V bài_toán/N 1/M chiều/N ,/CH \"một/Np nửa\"/Np của/E ví_dụ/C 1/M ở/E trên/E thôi/T →/Np Bây_giờ/P ta/P chỉ_cần/Np rời_rạc_hóa/Np nó/P đi/V thay_vì/X 3/M n/Ny ,/CH ta/P có/V mảng/N 2/M n/Ny lưu/V các/L giá_trị/N S_i/Np và/Cc S_i/Np -/CH m/Nu ,/CH ta/P sẽ/R tính/V dựa/V vào/E 1/M cây/N Binary_Indexed_Tree/Np cho_đơn/Np giản/Np thay_vì/X đếm/V như/C bài/N trên/E ,/CH vấn_đề/N ở/E đây/P chỉ/R là/V tìm/V max/Np min/Np ,/CH và/Cc update/Np max/Np ,/CH min/Np ./CH\nĐộ/N phức_tạp/A :/CH O(n/Np log(n)/Np log(2/Np 109))/Np ./CH\n\n", "title": "Rời rạc hoá và ứng dụng\n", "link": "http://vnoi.info/wiki/algo/trick/Roi-rac-hoa-va-ung-dung\n"}