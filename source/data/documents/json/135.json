{"content": "Tác_giả : Vũ_chipchip Phúc_Hoàng_Table of_Contents Bài_toán Ưu_điểm Nhược_điểm Ý_tưởng Query_Update Mở_rộng Ứng_dụng Một_số câu_hỏi : Bài_tập áp_dụng Một_số bài_tập \"quy hoạch động bao lồi\" truyền_thống USACO - Fencing the_Herd VOJ - VOMARIO_Bài khác Bài_toán Cho một_tập hợp chứa các đường_thẳng có dạng ax + b , mỗi đường_thẳng được biểu_diễn bằng một cặp số (a , b) .\nCần thực_hiện hai loại thao_tác : Thêm một đường_thẳng vào tập_hợp .\nTrả_lời xem tại hoành_độ q , điểm nào thuộc ít_nhất một đường_thẳng trong tập có tung_độ lớn nhất .\nNói_cách_khác , đường_thẳng (a , b) nào có aq + b lớn nhất .\nĐể giải bài_toán này , hai cách phổ_biến là ứng_dụng bao lồi và sử_dụng cây Interval_Tree lưu đoạn_thẳng .\nSau_đây là những ưu_điểm và nhược_điểm của IT đoạn_thẳng so_với bao lồi .\nƯu_điểm Ứng_dụng được với đoạn_thẳng chứ không chỉ đường_thẳng .\nĐây là ưu_điểm lớn nhất của IT đoạn_thẳng so_với bao lồi , khi tập_hợp cần xử_lí là tập đoạn_thẳng chứ không_phải đường_thẳng (tức là đường_thẳng ax + b chỉ tồn_tại khi x thuộc một khoảng (l , h) nhất định) , bao lồi sẽ không_thể làm được .\nThực_hiện thao_tác thêm đường_thẳng (đoạn thẳng) một_cách dễ_dàng .\nBao lồi gặp nhược_điểm lớn khi thêm đường_thẳng mà hệ_số góc a không tăng dần hoặc giảm_dần .\nMặc_dù không_phải là không_thể làm được , nhưng bao lồi khi đó phải biểu_diễn bằng cấu_trúc khác không_phải stack , gây khó_khăn lớn khi code .\nDễ code .\nChính vì hai ưu_điểm ở trên , IT đoạn_thẳng rất tổng_quát và không cần phải xét trường_hợp phụ_thuộc vào bài_toán như_bao lồi .\nĐa_số các bài_toán , phần Update và Query của IT đoạn_thẳng gần_như giống_hệt nhau .\nPhần thân chương_trình cũng rất ngắn_gọn .\nNhược_điểm Phụ_thuộc vào kích_thước hoành_độ x .\nVì_IT đoạn_thẳng xử_lí trên khoảng của hoành_độ , với bài_toán mà query x lớn hoặc x không_phải số_nguyên không_thể biểu_diễn bằng IT bình_thường .\nCó_thể thay_thế bằng rời_rạc_hóa các tọa_độ hoặc IT động , nhưng so_với bao lồi_đây là một nhược_điểm đáng_kể khi bao lồi hoàn_toàn không phụ_thuộc vào x .\nBộ_nhớ và thời_gian lớn .\nLưu một cây IT chứa hai số_nguyên a , b tốn bộ_nhớ hơn nhiều so_với stack bao lồi .\nXử_lí trên cây IT cũng chậm hơn chặt nhị_phân trên bao lồi .\nVề độ phức_tạp , có_thể so_sánh qua bảng sau Lưu_ý : Ở đây ta giả_sử các đường_thẳng thêm vào có hệ_số a tăng dần hoặc giảm_dần , bao lồi được biểu_diễn bằng stack .\nTóm_lại , so_với cách ứng_dụng bao lồi , sử_dụng IT đoạn_thẳng là một phương_pháp tổng_quát hơn nhưng chậm và tốn nhiều bộ_nhớ hơn .\nSau_đây là những phân_tích cơ_bản về thuật_toán .\nÝ_tưởng Xây_dựng một cây Interval_Tree để quản_lí tập các đoạn_thẳng , mỗi nút của cây quản_lí một khoảng trên trục_hoành .\nThông_tin lưu ở mỗi nút trên cây sẽ là đoạn_thẳng đặc_trưng cho khoảng nó quản_lí .\nĐoạn_thẳng này phải phủ kín khoảng , tức_là đoạn ax + b có khoảng x bao lấy khoảng do nút quản_lí (nếu là đường_thẳng thì luôn phủ kín khoảng do nút quản lí) .\nĐoạn_thẳng được lưu trong nút phải cao hơn tất_cả các đoạn khác tại một vị_trí nào_đó thuộc khoảng (nếu không thì không cần quan_tâm đến đoạn đó) .\nÝ_nghĩa của việc lưu này là với một query q bất_kì , đoạn aq + b cao nhất sẽ được lưu trong một nút nào_đó của cây IT quản_lí khoảng chứa q .\nCách lưu đoạn_thẳng này khá trừu trượng , nếu bạn_đọc phần này chưa hiểu , nên bỏ_qua để xem cách Query và Update trên cây rồi đọc lại phần này sau .\nNhư_vậy , thông_tin lưu trên cây IT sẽ được biểu_diễn bằng một mảng line , line là một cặp số (a , b) biểu_diễn đường_thẳng .\nline itMAXX 4; // MAXX là giới_hạn trục_hoành Ngoài_ra , có_thể thêm một_vài mảng phụ cần_thiết cho IT như low , high , leaf , . . .\nTa định_nghĩa hàm Get(line d , int x) cho_biết tung_độ của điểm thuộc đường_thẳng d tại hoành_độ x .\nint Get ( line d , int x ) return d .\na x + d .\nb ; Query_Ta sẽ trả_lời cho query q , xem tại hoành_độ x = q , tìm tung_độ cao nhất của một điểm thuộc một đoạn trong tập .\nNhư đã nói ở trên , IT lưu các đoạn_thẳng đảm_bảo trong các nút cây quản_lí khoảng chứa q có_một nút lưu đoạn_thẳng đạt tung_độ cao nhất (làm thế_nào để được như_vậy thì xem phần Update) .\nVậy ở đây , muốn trả_lời cho query q , ta đi từ gốc xuống nút lá quản_lí điểm q , trên đường_đi update đáp_số bằng tung_độ cao nhất tại điểm q của đoạn_thẳng do nút đó quản_lí .\nint Query ( int node , int pos ) if ( low node gt; pos high node lt; pos ) return - oo ; res = Get ( it node , pos ); if ( low node == high node ) return res ; res = max ( res , Query ( node 2 , pos )); res = max ( res , Query ( node 2 + 1 , pos )); return res ; Độ phức_tạp : O(log(MAXX))_Update_Thêm một đoạn_thẳng vào tập_hợp , ta phải thay_đổi những nút trên cây IT quản_lí khoảng ứng với đoạn_thẳng đó .\nViệc đầu_tiên , giống_như Update trên cây IT cơ_bản , ta phải chia đoạn cần Update ra thành những khoảng IT .\nvoid Update ( int node , int l , int h , line val ) if ( low node gt; h high node lt; l ) return ; if ( low node gt;= l amp;amp; high node lt;= h ) // Do something return ; Update ( node 2 , l , h , val ); Update ( node 2 + 1 , l , h , val ); Độ phức_tạp của phần chia khoảng này là : O(log(MAXX)) , giống_như IT cơ_bản .\nNếu đoạn cần Update là đường_thẳng (l = low1 , h = high1) thì không mất thời_gian chia khoảng , độ phức_tạp chỉ là O(1) .\nBây_giờ việc phải làm là điền vào chỗ // Do_Something .\nTa có_một đường_thẳng val và đường_thẳng itnode , cả hai đều chỉ được xét trong_khoảng từ lownode đến highnode .\nLấy mid là điểm giữa của khoảng (mid = (lownode + highnode) / 2) .\nTa sẽ thay_đổi nút itnode và cả các con của nó .\nCó 6 trường_hợp có_thể xảy_ra : itnode hoàn_toàn nằm trên val .\nTrường_hợp này ta chỉ bỏ_qua mà không làm_gì , vì val chắc_chắn không bao_giờ đạt max trong_khoảng lownode đến highnode .\nif ( Get ( it node , low node ) gt;= Get ( val , low node ) amp;amp; Get ( it node , high node ) gt;= Get ( val , high node )) return ; itnode hoàn_toàn nằm dưới val .\nTrường_hợp này ta gán itnode bằng val , itnode cũ không còn giá_trị khi tìm max .\nif ( Get ( it node , low node ) lt;= Get ( val , low node ) amp;amp; Get ( it node , high node ) lt;= Get ( val , high node )) it node = val ; return ; Nửa bên trái của itnode hoàn_toàn nằm trên nửa bên trái của val .\nVậy val chắc_chắn không bao_giờ đạt max tại nửa trái của khoảng node , ta giữ_lại itnode tại node và down val xuống con phải (node 2 + 1) .\nif ( Get ( it node , low node ) gt;= Get ( val , low node ) amp;amp; Get ( it node , mid ) gt;= Get ( val , mid )) Update ( node 2 + 1 , l , h , val ); return ; Nửa bên trái của itnode hoàn_toàn nằm dưới nửa bên trái của val .\nTương_tự như_trên , ta down itnode xuống con phải của node và update itnode bằng val .\nif ( Get ( it node , low node ) lt;= Get ( val , low node ) amp;amp; Get ( it node , mid ) lt;= Get ( val , mid )) Update ( node 2 + 1 , l , h , it node ); it node = val ; return ; Nửa bên phải của itnode hoàn_toàn nằm trên nửa bên phải của val .\nif ( Get ( it node , mid + 1 ) gt;= Get ( val , mid + 1 ) amp;amp; Get ( it node , high node ) gt;= Get ( val , high node )) Update ( node 2 , l , h , val ); return ; Nửa bên phải của itnode hoàn_toàn nằm dưới nửa bên phải của val .\nif ( Get ( it node , mid + 1 ) lt;= Get ( val , mid + 1 ) amp;amp; Get ( it node , high node ) lt;= Get ( val , high node )) Update ( node 2 , l , h , it node ); it node = val ; return ; Sau khi xét xong 6 trường_hợp ở trên , ta đã xử_lí xong việc Update đoạn val trong một khoảng lownode , highnode .\nĐộ phức_tạp của thao_tác này là O(log(MAXX)) , vì có_thể phải đi từ node cho_đến lá .\nCó_thể thấy , cây IT có đầy_đủ thông_tin về đoạn thằng đạt max tại một hoành_độ nhất_định , vì ta chỉ loại những đoạn_thẳng mà hoàn_toàn không còn giá_trị (trường hợp 1 và trường_hợp 2) , còn những đoạn_thẳng vẫn có_thể đạt max tại một vị_trí nào đấy luôn được bảo_tồn .\nĐộ phức_tạp : O(log2(MAXX)) .\nO(log(MAXX)) khi chia khoảng , O(log(MAXX)) khi update trên một khoảng .\nNếu update đường_thẳng thì không mất thời_gian chia khoảng , độ phức_tạp tổng_cộng là O(log(MAXX)) .\nMở_rộng Query và Update ở trên là những thao_tác cơ_bản nhất của IT đoạn_thẳng .\nNgoài_ra , có_thể có thêm nhiều thông_tin phụ_đính kèm với đoạn_thẳng , tùy thuộc vào_đề bài_toán .\nCó nhiều cách để biểu_diễn đoạn_thẳng trong cây IT ngoài ax + b .\nVí_dụ , có_thể biểu_diễn đoạn_thẳng bằng cách lưu_tọa_độ 2 điểm đầu_mút của đoạn .\nTùy vào_đề bài_toán mà có cách biểu_diễn hợp_lí nhất .\nỨng_dụng Bài_toán tìm max , min của ax + b thường đi_kèm với thuật_toán quy_hoạch_động , chẳng_hạn như bài_toán quy_hoạch_động có_công thức fi = max(aj xi + bj + c) , ta cần tìm j lt; i sao_cho hàm đó đạt max .\nBao lồi cũng là phương_pháp thường được sử_dụng trong bài_toán này .\nHạn_chế của bao lồi là aj phải tăng dần hoặc giảm_dần (nếu không sẽ phải sử_dụng cấu_trúc khác stack để biểu_diễn_bao lồi , code rất khó khăn) .\nHạn_chế của IT đoạn_thẳng là xi phải nguyên và nhỏ để có_thể biểu_diễn trên IT (nếu không sẽ phải sử_dụng IT động hoặc rời_rạc hóa) .\nNgoài_ra , có_một số bài_toán yêu_cầu tìm max , min trên tập đoạn_thẳng .\nĐây là những bài_toán IT đoạn_thẳng gần_như là cách làm duy_nhất .\nMột_số câu_hỏi : Để hiểu rõ về IT đoạn_thẳng , bạn hãy tự trả_lời một_số câu_hỏi sau : Trong trường_hợp nào thì một nút không có thông_tin gì cả ?\nTrong các trường_hợp 4 và 6 của phần Update , tại_sao phải gán lại val cho itnode ?\nGiả_sử thay_vì truy_vấn theo điểm , ta truy_vấn theo khoảng , tức_là trả_lời xem tại tất_cả các điểm trong một khoảng nào_đó , đoạn_thẳng nào đạt chiều_cao lớn nhất / nhỏ nhất .\nGiả_sử khoảng này nằm hoàn_toàn trong phạm_vi quản_lí của một nút nào_đó , liệu ta có_thể trả luôn kết_quả là đoạn_thẳng lưu trong nút đó không ?\nVì_sao ?\nBài_tập áp_dụng Một_số bài_tập \"quy hoạch động bao lồi\" truyền_thống VOJ - VMPIZZA_CF 189 - Div 1 - C_SPOJ - ACQUIRE_SPOJ - APIO10A_Để làm những bài_tập này , đầu_tiên_ta sẽ giải bằng cách quy_hoạch_động với độ phức_tạp O(N2) .\nCông_thức quy_hoạnh động sẽ có dạng là fi = max/min(aj xi + bj + c) , với mọi j từ 1 đến i - 1 .\nĐể giảm độ phức_tạp xuống O(N \\logN) , ta sẽ sử_dụng bao lồi hoặc IT đoạn_thẳng .\nLưu_ý là với cách bao lồi , stack bao lồi phải đảm_bảo aj tăng dần hoặc giảm_dần , nếu_không phải lọc ra_sao cho tính_chất này thỏa_mãn .\nLưu_ý rằng bao lồi chỉ_có thể làm được khi hệ_số góc tăng dần hoặc giảm_dần .\nUSACO - Fencing the_Herd Bài này yêu_cầu tìm (Ax + By) max và min khi cho_điểm (x , y) bất_kì , hay_là (Ax/y + B) max và min .\nĐây chính là dạng chuẩn của bài_toán bao lồi và IT đoạn_thẳng .\nTuy_nhiên làm bao lồi trong trường_hợp này cực_kì khó_khăn , vì hệ_số góc A không đảm_bảo tăng dần hoặc giảm_dần .\nĐể có_thể làm bao lồi với bài này , ta phải sử_dụng cấu_trúc dữ_liệu lưu_bao lồi sao_cho hệ_số góc A vẫn tăng hoặc giảm , cách đơn_giản nhất_là trong quá_trình thêm (A , B) ta sử_dụng một buffer có sức_chứa là \\sqrtQ , khi_nào buffer đầy thì gộp vào bao lồi .\nLúc query thì tìm max , min trên cả bao lồi và buffer .\nSolution bao lồi chi_tiết xem ở đây .\nCòn với IT đoạn_thẳng , ta cũng gặp khó_khăn vì query không_phải là số_nguyên , và x/y cũng rất lớn .\nTuy_nhiên ta có_thể xử_lí offline đơn_giản bằng cách đọc hết tất_cả các query , lưu lại các điểm (x/y) , rời_rạc_hóa lại , và xây_dựng cây IT đoạn_thẳng trên tập điểm đã rời_rạc_hóa đấy .\nTrong bài này , cách IT đoạn_thẳng đơn_giản hơn nhiều so_với cách bao lồi .\nVOJ - VOMARIO_Bài \"độc quyền\" của IT đoạn_thẳng .\nTrong bài này , ta cũng tìm công_thức quy_hoạch_động O(N2)% : fi = max(aj xi + bj + c) .\nTuy_nhiên , đáng lưu_ý là mỗi cặp (aj , bj) chỉ được tính trong một khoảng xi nào_đó , còn xi nằm ngoài khoảng đó thì cặp (aj , bj) này không được phép chọn để lấy max .\nĐây chính là tính_chất \"đoạn thẳng\" thay_vì \"đường thẳng\" .\nBài này không_thể sử_dụng bao lồi để giải được .\nBài khác VOJ - JEWELNB_SPOJ - PTIT133B\n", "tagged": "Tác_giả/N :/CH Vũ_chipchip/Np Phúc_Hoàng_Table/Np of_Contents/Np Bài_toán/N Ưu_điểm/N Nhược_điểm/N Ý_tưởng/N Query_Update/Np Mở_rộng/V Ứng_dụng/V Một_số/L câu_hỏi/N :/CH Bài_tập/Np áp_dụng/V Một_số/L bài_tập/Np \"quy/Np hoạch/Np động/N bao/N lồi\"/Np truyền_thống/N USACO/Np -/CH Fencing/Np the_Herd/Np VOJ/Np -/CH VOMARIO_Bài/Np khác/A Bài_toán/N Cho/E một_tập/Np hợp/V chứa/V các/L đường_thẳng/N có/V dạng/N ax/Ny +/CH b/Ni ,/CH mỗi/L đường_thẳng/N được/V biểu_diễn/V bằng/E một/M cặp/N số/N (a/Np ,/CH b)/Np ./CH\nCần/V thực_hiện/V hai/M loại/N thao_tác/V :/CH Thêm/V một/M đường_thẳng/N vào/E tập_hợp/N ./CH\nTrả_lời/V xem/V tại/E hoành_độ/Np q/Ny ,/CH điểm/N nào/P thuộc/V ít_nhất/A một/M đường_thẳng/N trong/E tập/V có/V tung_độ/Np lớn/A nhất/A ./CH\nNói_cách_khác/Np ,/CH đường_thẳng/N (a/Np ,/CH b)/Np nào/P có/V aq/Np +/CH b/Ni lớn/A nhất/A ./CH\nĐể/E giải/N bài_toán/N này/P ,/CH hai/M cách/N phổ_biến/V là/V ứng_dụng/V bao/N lồi/Np và/Cc sử_dụng/V cây/N Interval_Tree/Np lưu/V đoạn_thẳng/Np ./CH\nSau_đây/Np là/V những/L ưu_điểm/N và/Cc nhược_điểm/N của/E IT/Np đoạn_thẳng/Np so_với/Np bao/N lồi/Np ./CH\nƯu_điểm/N Ứng_dụng/V được/V với/E đoạn_thẳng/Np chứ/C không/R chỉ/R đường_thẳng/N ./CH\nĐây/P là/V ưu_điểm/N lớn/A nhất/A của/E IT/Np đoạn_thẳng/Np so_với/Np bao/N lồi/Np ,/CH khi/N tập_hợp/N cần/V xử_lí/V là/V tập/V đoạn_thẳng/Np chứ/C không_phải/Np đường_thẳng/N (tức/Np là/V đường_thẳng/N ax/Ny +/CH b/Ni chỉ/R tồn_tại/V khi/N x/CH thuộc/V một/M khoảng/N (l/Np ,/CH h)/Np nhất/A định)/Np ,/CH bao/N lồi/Np sẽ/R không_thể/R làm/V được/V ./CH\nThực_hiện/V thao_tác/V thêm/V đường_thẳng/N (đoạn/Np thẳng)/Np một_cách/N dễ_dàng/A ./CH\nBao/N lồi/Np gặp/V nhược_điểm/N lớn/A khi/N thêm/V đường_thẳng/N mà/C hệ_số/N góc/N a/Ni không/R tăng/V dần/R hoặc/Cc giảm_dần/Np ./CH\nMặc_dù/C không_phải/Np là/V không_thể/R làm/V được/V ,/CH nhưng/C bao/N lồi/Np khi/N đó/P phải/V biểu_diễn/V bằng/E cấu_trúc/N khác/A không_phải/Np stack/Np ,/CH gây/V khó_khăn/A lớn/A khi/N code/Np ./CH\nDễ/A code/Np ./CH\nChính/T vì/E hai/M ưu_điểm/N ở/E trên/E ,/CH IT/Np đoạn_thẳng/Np rất/R tổng_quát/Np và/Cc không/R cần/V phải/V xét/V trường_hợp/N phụ_thuộc/V vào/E bài_toán/N như_bao/Np lồi/Np ./CH\nĐa_số/N các/L bài_toán/N ,/CH phần/N Update/Np và/Cc Query/Np của/E IT/Np đoạn_thẳng/Np gần_như/R giống_hệt/A nhau/N ./CH\nPhần/N thân/N chương_trình/N cũng/R rất/R ngắn_gọn/A ./CH\nNhược_điểm/N Phụ_thuộc/V vào/E kích_thước/N hoành_độ/Np x/CH ./CH\nVì_IT/Np đoạn_thẳng/Np xử_lí/V trên/E khoảng/N của/E hoành_độ/Np ,/CH với/E bài_toán/N mà/C query/Np x/CH lớn/A hoặc/Cc x/CH không_phải/Np số_nguyên/Np không_thể/R biểu_diễn/V bằng/E IT/Np bình_thường/A ./CH\nCó_thể/R thay_thế/V bằng/E rời_rạc_hóa/Np các/L tọa_độ/Np hoặc/Cc IT/Np động/N ,/CH nhưng/C so_với/Np bao/N lồi_đây/Np là/V một/M nhược_điểm/N đáng_kể/A khi/N bao/N lồi/Np hoàn_toàn/A không/R phụ_thuộc/V vào/E x/CH ./CH\nBộ_nhớ/Np và/Cc thời_gian/N lớn/A ./CH\nLưu/V một/M cây/N IT/Np chứa/V hai/M số_nguyên/Np a/Ni ,/CH b/Ni tốn/V bộ_nhớ/Np hơn/A nhiều/A so_với/Np stack/Np bao/N lồi/Np ./CH\nXử_lí/V trên/E cây/N IT/Np cũng/R chậm/A hơn/A chặt/A nhị_phân/Np trên/E bao/N lồi/Np ./CH\nVề/E độ/N phức_tạp/A ,/CH có_thể/R so_sánh/V qua/V bảng/N sau/E Lưu_ý/V :/CH Ở/E đây/P ta/P giả_sử/Np các/L đường_thẳng/N thêm/V vào/E có/V hệ_số/N a/Ni tăng/V dần/R hoặc/Cc giảm_dần/Np ,/CH bao/N lồi/Np được/V biểu_diễn/V bằng/E stack/Np ./CH\nTóm_lại/Np ,/CH so_với/Np cách/N ứng_dụng/V bao/N lồi/Np ,/CH sử_dụng/V IT/Np đoạn_thẳng/Np là/V một/M phương_pháp/N tổng_quát/Np hơn/A nhưng/C chậm/A và/Cc tốn/V nhiều/A bộ_nhớ/Np hơn/A ./CH\nSau_đây/Np là/V những/L phân_tích/V cơ_bản/A về/E thuật_toán/N ./CH\nÝ_tưởng/N Xây_dựng/V một/M cây/N Interval_Tree/Np để/E quản_lí/V tập/V các/L đoạn_thẳng/Np ,/CH mỗi/L nút/N của/E cây/N quản_lí/V một/M khoảng/N trên/E trục_hoành/Np ./CH\nThông_tin/N lưu/V ở/E mỗi/L nút/N trên/E cây/N sẽ/R là/V đoạn_thẳng/Np đặc_trưng/A cho/E khoảng/N nó/P quản_lí/V ./CH\nĐoạn_thẳng/Np này/P phải/V phủ/V kín/A khoảng/N ,/CH tức_là/V đoạn/Nc ax/Ny +/CH b/Ni có/V khoảng/N x/CH bao/N lấy/V khoảng/N do/E nút/N quản_lí/V (nếu/Np là/V đường_thẳng/N thì/C luôn/R phủ/V kín/A khoảng/N do/E nút/N quản/Np lí)/Np ./CH\nĐoạn_thẳng/Np được/V lưu/V trong/E nút/N phải/V cao/A hơn/A tất_cả/P các/L đoạn/Nc khác/A tại/E một/M vị_trí/N nào_đó/P thuộc/V khoảng/N (nếu/Np không/R thì/C không/R cần/V quan_tâm/V đến/E đoạn/Nc đó)/Np ./CH\nÝ_nghĩa/N của/E việc/N lưu/V này/P là/V với/E một/M query/Np q/Ny bất_kì/R ,/CH đoạn/Nc aq/Np +/CH b/Ni cao/A nhất/A sẽ/R được/V lưu/V trong/E một/M nút/N nào_đó/P của/E cây/N IT/Np quản_lí/V khoảng/N chứa/V q/Ny ./CH\nCách/N lưu/V đoạn_thẳng/Np này/P khá/R trừu/Np trượng/Np ,/CH nếu/C bạn_đọc/N phần/N này/P chưa/R hiểu/V ,/CH nên/C bỏ_qua/V để/E xem/V cách/N Query/Np và/Cc Update/Np trên/E cây/N rồi/C đọc/V lại/R phần/N này/P sau/E ./CH\nNhư_vậy/X ,/CH thông_tin/N lưu/V trên/E cây/N IT/Np sẽ/R được/V biểu_diễn/V bằng/E một/M mảng/N line/N ,/CH line/N là/V một/M cặp/N số/N (a/Np ,/CH b)/Np biểu_diễn/V đường_thẳng/N ./CH\nline/N itMAXX/Np 4;/Np //CH MAXX/Np là/V giới_hạn/V trục_hoành/Np Ngoài_ra/X ,/CH có_thể/R thêm/V một_vài/L mảng/N phụ/V cần_thiết/A cho/E IT/Np như/C low/Np ,/CH high/Np ,/CH leaf/Np ,/CH ./CH ./CH ./CH\nTa/P định_nghĩa/N hàm/Np Get(line/Np d/Ny ,/CH int/Np x)/Np cho_biết/V tung_độ/Np của/E điểm/N thuộc/V đường_thẳng/N d/Ny tại/E hoành_độ/Np x/CH ./CH\nint/Np Get/Np (/CH line/N d/Ny ,/CH int/Np x/CH )/CH return/Np d/Ny ./CH\na/Ni x/CH +/CH d/Ny ./CH\nb/Ni ;/CH Query_Ta/Np sẽ/R trả_lời/V cho/E query/Np q/Ny ,/CH xem/V tại/E hoành_độ/Np x/CH =/CH q/Ny ,/CH tìm/V tung_độ/Np cao/A nhất/A của/E một/M điểm/N thuộc/V một/M đoạn/Nc trong/E tập/V ./CH\nNhư/C đã/R nói/V ở/E trên/E ,/CH IT/Np lưu/V các/L đoạn_thẳng/Np đảm_bảo/V trong/E các/L nút/N cây/N quản_lí/V khoảng/N chứa/V q/Ny có_một/Np nút/N lưu/V đoạn_thẳng/Np đạt/V tung_độ/Np cao/A nhất/A (làm/Np thế_nào/P để/E được/V như_vậy/X thì/C xem/V phần/N Update)/Np ./CH\nVậy/P ở/E đây/P ,/CH muốn/V trả_lời/V cho/E query/Np q/Ny ,/CH ta/P đi/V từ/E gốc/N xuống/V nút/N lá/N quản_lí/V điểm/N q/Ny ,/CH trên/E đường_đi/Np update/Np đáp_số/Np bằng/E tung_độ/Np cao/A nhất/A tại/E điểm/N q/Ny của/E đoạn_thẳng/Np do/E nút/N đó/P quản_lí/V ./CH\nint/Np Query/Np (/CH int/Np node/Np ,/CH int/Np pos/Np )/CH if/Np (/CH low/Np node/Np gt;/Np pos/Np high/Np node/Np lt;/Np pos/Np )/CH return/Np -/CH oo/Np ;/CH res/Np =/CH Get/Np (/CH it/Np node/Np ,/CH pos/Np );/CH if/Np (/CH low/Np node/Np ==/Np high/Np node/Np )/CH return/Np res/Np ;/CH res/Np =/CH max/Np (/CH res/Np ,/CH Query/Np (/CH node/Np 2/M ,/CH pos/Np ));/Np res/Np =/CH max/Np (/CH res/Np ,/CH Query/Np (/CH node/Np 2/M +/CH 1/M ,/CH pos/Np ));/Np return/Np res/Np ;/CH Độ/N phức_tạp/A :/CH O(log(MAXX))_Update_Thêm/Np một/M đoạn_thẳng/Np vào/E tập_hợp/N ,/CH ta/P phải/V thay_đổi/V những/L nút/N trên/E cây/N IT/Np quản_lí/V khoảng/N ứng/V với/E đoạn_thẳng/Np đó/P ./CH\nViệc/N đầu_tiên/A ,/CH giống_như/Np Update/Np trên/E cây/N IT/Np cơ_bản/A ,/CH ta/P phải/V chia/V đoạn/Nc cần/V Update/Np ra/V thành/V những/L khoảng/N IT/Np ./CH\nvoid/Np Update/Np (/CH int/Np node/Np ,/CH int/Np l/Ny ,/CH int/Np h/Ny ,/CH line/N val/Np )/CH if/Np (/CH low/Np node/Np gt;/Np h/Ny high/Np node/Np lt;/Np l/Ny )/CH return/Np ;/CH if/Np (/CH low/Np node/Np gt;=/Np l/Ny amp;amp;/Np high/Np node/Np lt;=/Np h/Ny )/CH //CH Do/E something/Np return/Np ;/CH Update/Np (/CH node/Np 2/M ,/CH l/Ny ,/CH h/Ny ,/CH val/Np );/CH Update/Np (/CH node/Np 2/M +/CH 1/M ,/CH l/Ny ,/CH h/Ny ,/CH val/Np );/CH Độ/N phức_tạp/A của/E phần/N chia/V khoảng/N này/P là/V :/CH O(log(MAXX))/Np ,/CH giống_như/Np IT/Np cơ_bản/A ./CH\nNếu/C đoạn/Nc cần/V Update/Np là/V đường_thẳng/N (l/Np =/CH low1/Np ,/CH h/Ny =/CH high1)/Np thì/C không/R mất/V thời_gian/N chia/V khoảng/N ,/CH độ/N phức_tạp/A chỉ/R là/V O(1)/Np ./CH\nBây_giờ/P việc/N phải/V làm/V là/V điền/V vào/E chỗ/N //CH Do_Something/Np ./CH\nTa/P có_một/Np đường_thẳng/N val/Np và/Cc đường_thẳng/N itnode/Np ,/CH cả/P hai/M đều/R chỉ/R được/V xét/V trong_khoảng/Np từ/E lownode/Np đến/E highnode/Np ./CH\nLấy/V mid/Np là/V điểm/N giữa/N của/E khoảng/N (mid/Np =/CH (lownode/Np +/CH highnode)/Np //CH 2)/Np ./CH\nTa/P sẽ/R thay_đổi/V nút/N itnode/Np và/Cc cả/P các/L con/Nc của/E nó/P ./CH\nCó/V 6/M trường_hợp/N có_thể/R xảy_ra/Np :/CH itnode/Np hoàn_toàn/A nằm/V trên/E val/Np ./CH\nTrường_hợp/N này/P ta/P chỉ/R bỏ_qua/V mà/C không/R làm_gì/X ,/CH vì/E val/Np chắc_chắn/A không/R bao_giờ/P đạt/V max/Np trong_khoảng/Np lownode/Np đến/E highnode/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH low/Np node/Np )/CH gt;=/Np Get/Np (/CH val/Np ,/CH low/Np node/Np )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH high/Np node/Np )/CH gt;=/Np Get/Np (/CH val/Np ,/CH high/Np node/Np ))/Np return/Np ;/CH itnode/Np hoàn_toàn/A nằm/V dưới/E val/Np ./CH\nTrường_hợp/N này/P ta/P gán/V itnode/Np bằng/E val/Np ,/CH itnode/Np cũ/A không/R còn/R giá_trị/N khi/N tìm/V max/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH low/Np node/Np )/CH lt;=/Np Get/Np (/CH val/Np ,/CH low/Np node/Np )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH high/Np node/Np )/CH lt;=/Np Get/Np (/CH val/Np ,/CH high/Np node/Np ))/Np it/Np node/Np =/CH val/Np ;/CH return/Np ;/CH Nửa/M bên/N trái/Nc của/E itnode/Np hoàn_toàn/A nằm/V trên/E nửa/M bên/N trái/Nc của/E val/Np ./CH\nVậy/P val/Np chắc_chắn/A không/R bao_giờ/P đạt/V max/Np tại/E nửa/M trái/Nc của/E khoảng/N node/Np ,/CH ta/P giữ_lại/Np itnode/Np tại/E node/Np và/Cc down/Np val/Np xuống/V con/Nc phải/V (node/Np 2/M +/CH 1)/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH low/Np node/Np )/CH gt;=/Np Get/Np (/CH val/Np ,/CH low/Np node/Np )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH mid/Np )/CH gt;=/Np Get/Np (/CH val/Np ,/CH mid/Np ))/Np Update/Np (/CH node/Np 2/M +/CH 1/M ,/CH l/Ny ,/CH h/Ny ,/CH val/Np );/CH return/Np ;/CH Nửa/M bên/N trái/Nc của/E itnode/Np hoàn_toàn/A nằm/V dưới/E nửa/M bên/N trái/Nc của/E val/Np ./CH\nTương_tự/A như_trên/Np ,/CH ta/P down/Np itnode/Np xuống/V con/Nc phải/V của/E node/Np và/Cc update/Np itnode/Np bằng/E val/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH low/Np node/Np )/CH lt;=/Np Get/Np (/CH val/Np ,/CH low/Np node/Np )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH mid/Np )/CH lt;=/Np Get/Np (/CH val/Np ,/CH mid/Np ))/Np Update/Np (/CH node/Np 2/M +/CH 1/M ,/CH l/Ny ,/CH h/Ny ,/CH it/Np node/Np );/CH it/Np node/Np =/CH val/Np ;/CH return/Np ;/CH Nửa/M bên/N phải/V của/E itnode/Np hoàn_toàn/A nằm/V trên/E nửa/M bên/N phải/V của/E val/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH mid/Np +/CH 1/M )/CH gt;=/Np Get/Np (/CH val/Np ,/CH mid/Np +/CH 1/M )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH high/Np node/Np )/CH gt;=/Np Get/Np (/CH val/Np ,/CH high/Np node/Np ))/Np Update/Np (/CH node/Np 2/M ,/CH l/Ny ,/CH h/Ny ,/CH val/Np );/CH return/Np ;/CH Nửa/M bên/N phải/V của/E itnode/Np hoàn_toàn/A nằm/V dưới/E nửa/M bên/N phải/V của/E val/Np ./CH\nif/Np (/CH Get/Np (/CH it/Np node/Np ,/CH mid/Np +/CH 1/M )/CH lt;=/Np Get/Np (/CH val/Np ,/CH mid/Np +/CH 1/M )/CH amp;amp;/Np Get/Np (/CH it/Np node/Np ,/CH high/Np node/Np )/CH lt;=/Np Get/Np (/CH val/Np ,/CH high/Np node/Np ))/Np Update/Np (/CH node/Np 2/M ,/CH l/Ny ,/CH h/Ny ,/CH it/Np node/Np );/CH it/Np node/Np =/CH val/Np ;/CH return/Np ;/CH Sau/E khi/N xét/V xong/V 6/M trường_hợp/N ở/E trên/E ,/CH ta/P đã/R xử_lí/V xong/V việc/N Update/Np đoạn/Nc val/Np trong/E một/M khoảng/N lownode/Np ,/CH highnode/Np ./CH\nĐộ/N phức_tạp/A của/E thao_tác/V này/P là/V O(log(MAXX))/Np ,/CH vì/E có_thể/R phải/V đi/V từ/E node/Np cho_đến/E lá/N ./CH\nCó_thể/R thấy/V ,/CH cây/N IT/Np có/V đầy_đủ/A thông_tin/N về/E đoạn/Nc thằng/Nc đạt/V max/Np tại/E một/M hoành_độ/Np nhất_định/R ,/CH vì/E ta/P chỉ/R loại/N những/L đoạn_thẳng/Np mà/C hoàn_toàn/A không/R còn/R giá_trị/N (trường/Np hợp/V 1/M và/Cc trường_hợp/N 2)/Np ,/CH còn/R những/L đoạn_thẳng/Np vẫn/R có_thể/R đạt/V max/Np tại/E một/M vị_trí/N nào/P đấy/P luôn/R được/V bảo_tồn/V ./CH\nĐộ/N phức_tạp/A :/CH O(log2(MAXX))/Np ./CH\nO(log(MAXX))/Np khi/N chia/V khoảng/N ,/CH O(log(MAXX))/Np khi/N update/Np trên/E một/M khoảng/N ./CH\nNếu/C update/Np đường_thẳng/N thì/C không/R mất/V thời_gian/N chia/V khoảng/N ,/CH độ/N phức_tạp/A tổng_cộng/V là/V O(log(MAXX))/Np ./CH\nMở_rộng/V Query/Np và/Cc Update/Np ở/E trên/E là/V những/L thao_tác/V cơ_bản/A nhất/A của/E IT/Np đoạn_thẳng/Np ./CH\nNgoài_ra/X ,/CH có_thể/R có/V thêm/V nhiều/A thông_tin/N phụ_đính/Np kèm/V với/E đoạn_thẳng/Np ,/CH tùy/V thuộc/V vào_đề/Np bài_toán/N ./CH\nCó/V nhiều/A cách/N để/E biểu_diễn/V đoạn_thẳng/Np trong/E cây/N IT/Np ngoài/E ax/Ny +/CH b/Ni ./CH\nVí_dụ/C ,/CH có_thể/R biểu_diễn/V đoạn_thẳng/Np bằng/E cách/N lưu_tọa_độ/Np 2/M điểm/N đầu_mút/Np của/E đoạn/Nc ./CH\nTùy/V vào_đề/Np bài_toán/N mà/C có/V cách/N biểu_diễn/V hợp_lí/A nhất/A ./CH\nỨng_dụng/V Bài_toán/N tìm/V max/Np ,/CH min/Np của/E ax/Ny +/CH b/Ni thường/R đi_kèm/Np với/E thuật_toán/N quy_hoạch_động/Np ,/CH chẳng_hạn/X như/C bài_toán/N quy_hoạch_động/Np có_công/Np thức/V fi/Np =/CH max(aj/Np xi/N +/CH bj/Np +/CH c)/Np ,/CH ta/P cần/V tìm/V j/Np lt;/Np i/M sao_cho/Np hàm/Np đó/P đạt/V max/Np ./CH\nBao/N lồi/Np cũng/R là/V phương_pháp/N thường/R được/V sử_dụng/V trong/E bài_toán/N này/P ./CH\nHạn_chế/V của/E bao/N lồi/Np là/V aj/Np phải/V tăng/V dần/R hoặc/Cc giảm_dần/Np (nếu/Np không/R sẽ/R phải/V sử_dụng/V cấu_trúc/N khác/A stack/Np để/E biểu_diễn_bao/Np lồi/Np ,/CH code/Np rất/R khó/A khăn)/Np ./CH\nHạn_chế/V của/E IT/Np đoạn_thẳng/Np là/V xi/N phải/V nguyên/A và/Cc nhỏ/A để/E có_thể/R biểu_diễn/V trên/E IT/Np (nếu/Np không/R sẽ/R phải/V sử_dụng/V IT/Np động/N hoặc/Cc rời_rạc/A hóa)/Np ./CH\nNgoài_ra/X ,/CH có_một/Np số/N bài_toán/N yêu_cầu/V tìm/V max/Np ,/CH min/Np trên/E tập/V đoạn_thẳng/Np ./CH\nĐây/P là/V những/L bài_toán/N IT/Np đoạn_thẳng/Np gần_như/R là/V cách/N làm/V duy_nhất/A ./CH\nMột_số/L câu_hỏi/N :/CH Để/E hiểu/V rõ/A về/E IT/Np đoạn_thẳng/Np ,/CH bạn/N hãy/R tự/P trả_lời/V một_số/L câu_hỏi/N sau/E :/CH Trong/E trường_hợp/N nào/P thì/C một/M nút/N không/R có/V thông_tin/N gì/P cả/P ?/CH\nTrong/E các/L trường_hợp/N 4/M và/Cc 6/M của/E phần/N Update/Np ,/CH tại_sao/X phải/V gán/V lại/R val/Np cho/E itnode/Np ?/CH\nGiả_sử/Np thay_vì/X truy_vấn/Np theo/V điểm/N ,/CH ta/P truy_vấn/Np theo/V khoảng/N ,/CH tức_là/V trả_lời/V xem/V tại/E tất_cả/P các/L điểm/N trong/E một/M khoảng/N nào_đó/P ,/CH đoạn_thẳng/Np nào/P đạt/V chiều_cao/N lớn/A nhất/A //CH nhỏ/A nhất/A ./CH\nGiả_sử/Np khoảng/N này/P nằm/V hoàn_toàn/A trong/E phạm_vi/N quản_lí/V của/E một/M nút/N nào_đó/P ,/CH liệu/V ta/P có_thể/R trả/V luôn/R kết_quả/N là/V đoạn_thẳng/Np lưu/V trong/E nút/N đó/P không/R ?/CH\nVì_sao/X ?/CH\nBài_tập/Np áp_dụng/V Một_số/L bài_tập/Np \"quy/Np hoạch/Np động/N bao/N lồi\"/Np truyền_thống/N VOJ/Np -/CH VMPIZZA_CF/Np 189/Np -/CH Div/Np 1/M -/CH C_SPOJ/Np -/CH ACQUIRE_SPOJ/Np -/CH APIO10A_Để/Np làm/V những/L bài_tập/Np này/P ,/CH đầu_tiên_ta/Np sẽ/R giải/N bằng/E cách/N quy_hoạch_động/Np với/E độ/N phức_tạp/A O(N2)/Np ./CH\nCông_thức/N quy_hoạnh/Np động/N sẽ/R có/V dạng/N là/V fi/Np =/CH max/Np xi/N +/CH bj/Np +/CH c)/Np ,/CH với/E mọi/L j/Np từ/E 1/M đến/E i/M -/CH 1/M ./CH\nĐể/E giảm/V độ/N phức_tạp/A xuống/V O(N/Np \\logN)/Np ,/CH ta/P sẽ/R sử_dụng/V bao/N lồi/Np hoặc/Cc IT/Np đoạn_thẳng/Np ./CH\nLưu_ý/V là/V với/E cách/N bao/N lồi/Np ,/CH stack/Np bao/N lồi/Np phải/V đảm_bảo/V aj/Np tăng/V dần/R hoặc/Cc giảm_dần/Np ,/CH nếu_không/Np phải/V lọc/V ra_sao/X cho/E tính_chất/N này/P thỏa_mãn/V ./CH\nLưu_ý/V rằng/C bao/N lồi/Np chỉ_có/Np thể/N làm/V được/V khi/N hệ_số/N góc/N tăng/V dần/R hoặc/Cc giảm_dần/Np ./CH\nUSACO/Np -/CH Fencing/Np the_Herd/Np Bài/N này/P yêu_cầu/V tìm/V (Ax/Np +/CH By)/Np max/Np và/Cc min/Np khi/N cho_điểm/Np (x/Np ,/CH y)/Np bất_kì/R ,/CH hay_là/Cc (Ax/Np +/CH B)/Np max/Np và/Cc min/Np ./CH\nĐây/P chính/T là/V dạng/N chuẩn/N của/E bài_toán/N bao/N lồi/Np và/Cc IT/Np đoạn_thẳng/Np ./CH\nTuy_nhiên/C làm/V bao/N lồi/Np trong/E trường_hợp/N này/P cực_kì/R khó_khăn/A ,/CH vì/E hệ_số/N góc/N A/Ni không/R đảm_bảo/V tăng/V dần/R hoặc/Cc giảm_dần/Np ./CH\nĐể/E có_thể/R làm/V bao/N lồi/Np với/E bài/N này/P ,/CH ta/P phải/V sử_dụng/V cấu_trúc/N dữ_liệu/N lưu_bao/Np lồi/Np sao_cho/Np hệ_số/N góc/N A/Ni vẫn/R tăng/V hoặc/Cc giảm/V ,/CH cách/N đơn_giản/A nhất_là/X trong/E quá_trình/N thêm/V (A/Np ,/CH B)/Np ta/P sử_dụng/V một/M buffer/Np có/V sức_chứa/Np là/V \\sqrtQ/Np ,/CH khi_nào/Np buffer/Np đầy/A thì/C gộp/V vào/E bao/N lồi/Np ./CH\nLúc/N query/Np thì/C tìm/V max/Np ,/CH min/Np trên/E cả/P bao/N lồi/Np và/Cc buffer/Np ./CH\nSolution/Np bao/N lồi/Np chi_tiết/N xem/V ở/E đây/P ./CH\nCòn/R với/E IT/Np đoạn_thẳng/Np ,/CH ta/P cũng/R gặp/V khó_khăn/A vì/E query/Np không_phải/Np là/V số_nguyên/Np ,/CH và/Cc x/CH cũng/R rất/R lớn/A ./CH\nTuy_nhiên/C ta/P có_thể/R xử_lí/V offline/Np đơn_giản/A bằng/E cách/N đọc/V hết/V tất_cả/P các/L query/Np ,/CH lưu/V lại/R các/L điểm/N (x/Np ,/CH rời_rạc_hóa/Np lại/R ,/CH và/Cc xây_dựng/V cây/N IT/Np đoạn_thẳng/Np trên/E tập/V điểm/N đã/R rời_rạc_hóa/Np đấy/P ./CH\nTrong/E bài/N này/P ,/CH cách/N IT/Np đoạn_thẳng/Np đơn_giản/A hơn/A nhiều/A so_với/Np cách/N bao/N lồi/Np ./CH\nVOJ/Np -/CH VOMARIO_Bài/Np \"độc/Np quyền\"/Np của/E IT/Np đoạn_thẳng/Np ./CH\nTrong/E bài/N này/P ,/CH ta/P cũng/R tìm/V công_thức/N quy_hoạch_động/Np O(N2)%/Np :/CH fi/Np =/CH max(aj/Np xi/N +/CH bj/Np +/CH c)/Np ./CH\nTuy_nhiên/C ,/CH đáng/V lưu_ý/V là/V mỗi/L cặp/N (aj/Np ,/CH bj)/Np chỉ/R được/V tính/V trong/E một/M khoảng/N xi/N nào_đó/P ,/CH còn/R xi/N nằm/V ngoài/E khoảng/N đó/P thì/C cặp/N (aj/Np ,/CH bj)/Np này/P không/R được/V phép/N chọn/V để/E lấy/V max/Np ./CH\nĐây/P chính/T là/V tính_chất/N \"đoạn/Np thẳng\"/Np thay_vì/X \"đường/Np thẳng\"/Np ./CH\nBài/N này/P không_thể/R sử_dụng/V bao/N lồi/Np để/E giải/N được/V ./CH\nBài/N khác/A VOJ/Np -/CH JEWELNB_SPOJ/Np -/CH PTIT133B/Np\n", "title": "Interval Tree trên tập đoạn thẳng\n", "link": "http://vnoi.info/wiki/algo/data-structures/interval-tree-tap-doan-thang\n"}