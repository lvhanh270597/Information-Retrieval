{"content": "Tác_giả : Lê_Anh_Đức - A2K42-PBC Quy_hoạch_động (QHĐ) là một lớp thuật_toán rất quan_trọng và có nhiều ứng_dụng trong ngành khoa_học máy_tính .\nTrong các cuộc_thi Olympic tin_học hiện_đại , QHĐ luôn là một trong những chủ_đề chính .\nTuy_vậy , theo tôi thấy , tài_liệu nâng_cao về QHĐ bằng tiếng Việt hiện còn cực_kỳ khan_hiếm , dẫn đến học sinh/sinh viên Việt_Nam bị hạn_chế khả_năng tiếp_cận với những kỹ_thuật hiện_đại .\nTrong bài viết này , tôi sẽ trình_bày một_vài kỹ_thuật để tối_ưu_hóa độ phức_tạp của một_số thuật_toán QHĐ .\nTable of_Contents 1 .\nĐổi biến Bài_tập ví_dụ : Longest_Common_Subsequence (LCS) Đề_bài Lời_giải Bài_tập ví_dụ : Computer (VNOI Marathon 2010) Đề_bài Lời_giải Đổi biến Bài luyện_tập 2 .\nChia_để_trị Hai nhà_máy CEOI 2004 Đề_bài Lời_giải Bài ví_dụ : SEQPART Lời_giải Điều_kiện để Chia_để_trị đúng Điều_kiện theo best Điều_kiện theo cost Bài luyện_tập 1 .\nĐổi biến Nhiều khi trong trạng_thái QHĐ có_một thành_phần_nào đấy với khoảng giá_trị quá lớn , trong_khi kết_quả của hàm lại có khoảng giá_trị nhỏ .\nTrong một_vài trường_hợp , ta có_thể đảo nhãn để giảm số trạng_thái .\nBài_tập ví_dụ : Longest_Common_Subsequence (LCS) Đề_bài Cho xâu A độ_dài m , xâu B độ_dài n .\nHãy tìm độ_dài xâu con chung dài nhất của hai xâu , chú_ý là xâu con chung có_thể không liên_tiếp .\nGiới_hạn m \\le 106 n \\le 5000 Các kí_tự trong cả hai xâu là các chữ_cái tiếng Anh in hoa A . . Z Ví_dụ A = ADBCC_B = ABCD_LCS = ABC Kết_quả = 3 Lời_giải Thuật_toán đơn_giản Gọi_F(i , j) là LCS của hai tiền_tố A_1 . . i và B_1 . . j .\nKhi đó ta có_thể maximize F(i , j) theo F(i-1 , j) và F(i , j-1) .\nNếu A_i = B_j thì ta có_thể cập_nhật F(i , j) theo F(i-1 , j-1) + 1 .\nKết_quả bài_toán là F(m , n) .\nĐộ phức_tạp của thuật_toán này là O(mn) , không khả_thi với giới_hạn của đề_bài .\nĐổi biến Đặt_L = min(m , n) Để_ý rằng trong hàm QHĐ trên , các giá_trị của F(i , j) sẽ không vượt_quá L , trong_khi đó chiều thứ_hai của trạng_thái có_thể khá lớn (lên tới MAXM = 106) .\nĐể tối_ưu_hóa , ta sẽ đổi biến .\nGọi dp(i , j) là vị_trí k nhỏ nhất sao_cho LCS(A_1 . . i , B_1 . . k) = j .\nĐể tính các giá_trị của dp , ta sẽ QHĐ theo kiểu cập_nhật đi , thay_vì đi tìm công_thức trực_tiếp cho các dp(i , j) .\nGọi nextPos(i , c) = j gt; i nhỏ nhất mà A_j = c (với c là một ký_tự từ A đến Z) .\nMảng nextPos có_thể tính trong T(M26) .\nNhư_vậy ta có_thể tính các giá_trị QHĐ như_sau : Ban_đầu khởi tạo các giá_trị dp(i , j) = \\infty , dp(0 , 0) = 0 .\nFor i và j tăng dần , với mỗi giá_trị dp(i , j) khác vô_cùng : Cập_nhật dp(i+1 , j) theo dp(i , j) .\nGọi k là vị_trí xuất_hiện tiếp_theo của B_i+1 trong xâu A bắt_đầu_từ vị_trí dp(i , j) , tức_là k = nextPos(dp(i , j) , B_i+1) .\nNếu tồn_tại k , cập_nhật dp(i+1 , j+1) theo k .\nĐể tính kết_quả , ta sẽ chỉ_cần tìm j lớn nhất mà tồn_tại dp(i , j) khác vô_cùng .\ninclude lt;bits/stdc++ . hgt; using namespace std ; const int M = 1e6 + 6 ; const int N = 5005 ; int dp N_N ; char a M , b N ; int nextPos M 26 ; int m , n ; void minimize ( int amp; a , int b ) if ( a == - 1 a gt; b ) a = b ; int main () cin gt;gt; a + 1 gt;gt; b + 1 ; m = strlen ( a + 1 ); n = strlen ( b + 1 ); for ( int c = 0 ; c lt; 26 ; ++ c ) for ( int i = m - 1 ; i gt;= 0 ; -- i ) nextPos i c = ( a i + 1 - A == c ) ?\ni + 1 : nextPos i + 1 c ; int maxLength = min ( m , n ); memset ( dp , - 1 , sizeof dp ); dp 0 0 = 0 ; for ( int i = 0 ; i lt; n ; ++ i ) for ( int j = 0 ; j lt;= i ; ++ j ) if ( dp i j gt;= 0 ) minimize ( dp i + 1 j , dp i j ); int new_value = nextPos dp i j b i + 1 - A ; if ( new_value gt; 0 ) minimize ( dp i + 1 j + 1 , new_value ); int ans = 0 ; for ( int j = maxLength ; j gt; 0 ; -- j ) for ( int i = j ; i lt;= n ; ++ i ) if ( dp i j gt;= 0 ) ans = j ; if ( ans ! = 0 ) break ; cout lt;lt; ans lt;lt; endl ; return 0 ; Bài_tập ví_dụ : Computer (VNOI Marathon 2010) Problem_Link : COMPUTER - VOJ .\nĐề_bài Công_ty phần_mềm XYZ mới mua x máy_tính để bàn và y máy_tính xách_tay .\nGiá một máy_tính để bàn_là a đồng còn giá một máy_tính xách_tay là b đồng .\nĐể tránh sự thắc_mắc giữa các phòng bàn , Tổng_giám_đốc đã đưa_ra cách phân_bố các máy_tính này về n phòng_ban như_sau : Sắp_xếp n phòng_ban theo thứ_tự về mức_độ quan_trọng của các phòng_ban .\nTiến_hành phân_bố các máy_tính cho các phòng_ban bảo_đảm nếu phòng_ban i có mức_độ quan_trọng nhỏ hơn mức_độ quan_trọng của phòng_ban j thì tổng_giá trị máy_tính được phân_bố cho phòng_ban i không được vượt_quá tổng_giá trị máy_tính được phân_bố cho phòng_ban j .\nPhòng_ban nhận được tổng_giá trị máy_tính nhỏ nhất_là lớn nhất .\nLà một lập_trình_viên giỏi nhưng lại thuộc phòng_ban có mức_độ quan_trọng nhỏ nhất , Thắng muốn chứng_tỏ tay_nghề của mình với đồng_nghiệp nên đã lập_trình tính ra ngay được tổng_giá trị máy trình mà phòng_ban mình nhận được rồi mời bạn tính lại thử xem ! Yêu_cầu Cho x , a , y , b , n .\nHãy tính tổng_giá trị máy_tính mà phòng Thắng nhận được .\nInput x , a , y , b , n không quá 1000 Ví_dụ Input 3 300 2 500 2 Output 900 Input 4 300 3 500 2 Output 1300 Lời_giải Trước_hết ta sẽ chặt nhị_phân kết_quả bài_toán .\nVới mỗi giá_trị chặt nhị_phân , ta cần kiểm_tra xem có tồn_tại phương_án thỏa_mãn hay_không .\nThuật_toán sơ_khai Đặt_giá trị cần kiểm_tra là v .\nXét các phòng_ban theo thứ_tự tăng dần về mức_độ quan_trọng , đánh_số từ 1 .\nSử_dụng một mảng đa_chiều để đánh_dấu các trạng_thái có_thể đạt tới .\nCác giá_trị cần quản_lí là : chỉ_số của phòng_ban , đã dùng số máy_tính để bàn x , đã dùng số máy_tính xách_tay y , tổng_giá trị máy_tính của phòng_ban trước đó .\nBắt_đầu_từ trạng_thái (0 , 0 , 0 , 0) , ta sử_dụng thuật_toán loang (BFS) .\nCuối_cùng nếu trạng_thái (n , 0 , 0 , . . . ) có_thể đến được , thì ta sẽ có cách phân_hoạch các máy_tính vào các phòng_ban ứng với giá_trị cận_dưới v .\nKhông cần tính_toán cụ_thể cũng có_thể thấy thuật_toán này không_thể đáp_ứng về_mặt thời_gian (và bộ nhớ) với giới_hạn của đề_bài .\nNâng_cấp bằng nhận_xét Nhận_xét rằng ta không cần quan_tâm tới thứ_tự về mức_độ quan_trọng của các phòng_ban .\nVới một_cách phân_hoạch các máy_tính sao_cho mỗi phòng nhận được tổng_giá trị không nhỏ hơn v , ta luôn có_thể sắp_xếp các bộ theo giá_trị không giảm ứng với các phòng_ban .\nTa có trạng_thái QHĐ là F(i , x , y , value) = true nếu có_thể phân_bổ máy_tính cho i phòng_ban , đã dùng x máy_tính để bàn và y máy_tính xách_tay , đã gom được tổng_giá trị v cho phòng thứ i+1 .\nCách làm này số trạng_thái vẫn như trước nhưng ta đã có_thể chuyển trạng_thái trong O(1) .\nCụ_thể từ F(i , x , y , value) ta chuyển đến F(i , x+1 , y , value+a) hoặc F(i , x , y+1 , value+b) , chú_ý là chỉ_có thể dùng thêm máy xách_tay nếu xlt;X và dùng thêm máy để bàn nếu ylt;Y , đồng_thời nếu giá_trị value đủ lớn hơn hoặc bằng v thì ta chuyển sang trạng_thái F(i+1 , x , y , 0) luôn .\nĐổi biến Ở bài này , ta có_thể dễ_dàng đổi biến value ra làm hàm_mục_tiêu .\nNhưng không chỉ_có vậy , ta có_thể đẩy cả i ra ngoài ! Cụ_thể , F(x , y) = một cặp số (i , value) lần_lượt là số phòng phân_bố được và số tiền gom được .\nHàm_mục_tiêu của F(x , y) là một cặp số hoàn_toàn có_thể so_sánh được , trong đó giá_trị đầu (i) được ưu_tiên so_sánh trước .\nCách cập_nhật các F(x , y) giống_như phần trước , độ phức_tạp vẫn là O(1) cho bước chuyển trạng_thái , trong_khi số trạng_thái lúc_này là đủ nhỏ đối_với giới_hạn của đề_bài .\ninclude lt;bits/stdc++ . hgt; using namespace std ; const int N = 1010 ; int x , y , a , b , n ; pair lt; int , int gt; F_N_N ; pair lt; int , int gt; newState ( pair lt; int , int gt; s , int a , int v ) s .\nsecond += a ; if ( s .\nsecond gt;= v ) ++ s .\nfirst ; s .\nsecond = 0 ; return s ; bool dp ( int value ) for ( int i = 0 ; i lt;= x ; ++ i ) for ( int j = 0 ; j lt;= y ; ++ j ) F i j = make_pair ( 0 , 0 ); for ( int i = 0 ; i lt;= x ; ++ i ) for ( int j = 0 ; j lt;= y ; ++ j ) if ( F i j .\nfirst == n ) return 1 ; if ( i lt; x ) F i + 1 j = max ( F i + 1 j , newState ( F i j , a , value )); if ( j lt; y ) F i j + 1 = max ( F i j + 1 , newState ( F i j , b , value )); return 0 ; int solve () int l = 0 , r = ( a x + b y ) / n ; int ans = 0 ; while ( l lt;= r ) int mid = l + r gt;gt; 1 ; if ( dp ( mid )) ans = mid ; l = mid + 1 ; else r = mid - 1 ; return ans ; int main () cin gt;gt; x gt;gt; a gt;gt; y gt;gt; b gt;gt; n ; cout lt;lt; solve () lt;lt; endl ; cin gt;gt; x gt;gt; a gt;gt; y gt;gt; b gt;gt; n ; cout lt;lt; solve () lt;lt; endl ; return 0 ; Bài luyện_tập VOJ - BINPACK 2 .\nChia_để_trị Đây là kỹ_thuật khá hiếm gặp , tuy_nhiên lại cực_kỳ mạnh .\nHai nhà_máy CEOI 2004 Đề_bài Có n cây_cổ_thụ được trồng trên một con_đường từ đỉnh đổi đến chân đồi .\nChính_phủ địa_phương quyết_định cắt_bỏ chúng .\nĐể tránh hoang_phí , mỗi cái cây cần được chuyển đến một nhà_máy cưa .\nCây chỉ_có thể được vận_chuyển theo một_chiều duy_nhất : hướng về chân đồi .\nCó_một nhà_máy cưa ở cuối con_đường .\nHai nhà_máy cưa có_thể được xây_dựng dọc theo con_đường .\nHãy xác_định vị_trí tối_ưu để xây_dựng chúng , để cực_tiểu_hóa chi_phí vận_chuyển .\nChi_phí vận_chuyển 1kg gỗ đi 1 mét là 1 cent .\nYêu_cầu Viết chương_trình : đọc dữ_liệu từ_đầu vào chuẩn số_lượng cây , khối_lượng và vị_trí của chúng , tính_toán chi_phí vận_chuyển tối_ưu nhất , xuất kết_quả ra đầu_ra chuẩn .\nInput_Dòng đầu_tiên chứa số n - số_lượng cây (2 \\le n \\le 20 , 000) .\nCác cây được đánh_số 1 , 2 , . . . , n , theo chiều từ đỉnh đồi đến chân đồi .\nn dòng tiếp_theo mỗi dòng chứa hai số_nguyên_dương cách nhau bởi dấu cách .\nDòng thứ i + 1 chứa w_i - khối_lượng tính theo kg của cái cây thử i và d_i - khoảng_cách tính theo mét giữa cây thứ i và cây i + 1 , 1 \\le w_i \\le 10000 , 0 \\le d_i \\le 10000 .\nSố cuối_cùng , d_n là khoảng_cách từ cây thứ n đến chân đồi .\nDữ_liệu vào đảm_bảo kết_quả của bài_toán không vượt_quá 2 109 cent .\nOutput_Một dòng duy_nhất chứa một_số là kết_quả bài_toán : chi_phí vận_chuyển nhỏ nhất .\nVí_dụ Input 9 1 2 2 1 3 3 1 1 3 2 1 6 2 1 1 2 1 1 Output 26 Hình_vẽ trên minh_họa cho test ví_dụ .\nCác hình_tròn được tô đen là các_vị trí có_nhà máy .\nKết_quả sẽ là : 1 (2+1) + 2 1 + 1 (1 + 2) + 3 2 + 2 (1 + 2 + 1) + 1 (2 + 1) + 1 1 = 26 .\nLời_giải Trước_hết ta sẽ giải_quyết vấn_đề tính chi_phí vận_chuyển nếu biết vị_trí của hai nhà_máy đặt thêm .\nNếu ta có_thể tính được chi_phí này trong O(1) , bài_toán sẽ có_thể giải được trong O(N2) - ta có_thể for hết các cặp vị_trí có_thể đặt nhà_máy .\nGọi : sumW_i là tổng của các w_j với i \\le j .\nsumD_i là tổng của các d_j với i \\le j .\nsumWS_i là tổng của các w_j sumD_j với i \\le j .\nKhi đó cost(L , R) là chi_phí vận_chuyển các cây có chỉ_số trong đoạn L , R đến nhà_máy đặt ở R là : sumWS_L - sumWS_R - sumD_R (sumW_L - sumW_R) .\nNhư_vậy ta có_thể xây_dựng hàm eval(i , j) = chi_phí nếu đặt thêm hai nhà_máy ở i và j = cost(1 , i) + cost(i + 1 , j) + cost(j + 1 , n + 1) .\nTuy_nhiên lời_giải O(N2) là chưa đủ tốt để có_thể giải_quyết trọn_vẹn bài_toán này .\nGọi best(i) là vị_trí j gt; i tốt nhất nếu ta đã đặt một nhà_máy ở i .\nNhư_vậy kết_quả của bài_toán sẽ là min(eval(i , best_i) với 1 \\le i lt; n .\nNhận_xét : best_i \\le best_i + 1 .\nCó_thể viết tường_minh công_thức để chứng_minh .\nTa có_thể tính các best_i theo thứ_tự bất_kỳ .\nVì các giá_trị best không liên_quan đến nhau nên VD ta có_thể tính best(3) rồi best(1) và best(2) .\nNhư_vậy ta có thuật_toán sử_dụng tư_tưởng chia_để_trị như_sau : Hàm solve(L , R , from , to) sẽ đi tính các best(L . . R) , biết rằng chúng nằm trong đoạn from . . to .\nvoid solve ( int L , int R , int from , int to ) if ( L gt; R ) return ; int mid = L + R gt;gt; 1 ; best mid = from ; for ( int i = from + 1 ; i lt;= to ; ++ i ) if ( eval ( mid + 1 , best mid ) gt; eval ( mid + 1 , i )) best mid = i ; solve ( L , mid - 1 , from , best mid ); solve ( mid + 1 , R , best mid , to ); Đánh_giá độ phức_tạp thuật_toán : vì mỗi lần gọi để quy khoảng L , R được chia đôi , nên sẽ có O(logN) tầng , mỗi tầng vòng for chỉ chạy qua O(N) phần_tử , vì_vậy độ phức_tạp của thuật_toán là O(NlogN) .\nBài ví_dụ : SEQPART_Link : Hackerrank_Cho dãy L số C1 . . L , cần chia dãy này thành G đoạn liên_tiếp .\nVới phần_tử thứ i , ta định_nghĩa chi_phí của nó là tích của Ci và số_lượng số nằm cùng đoạn liên_tiếp với nó .\nChi_phí của dãy_số ứng với một_cách phân_hoạch là tổng_các chi_phí của các phần_tử .\nHãy xác_định cách phân_hoạch dãy_số để chi_phí là nhỏ nhất .\nInput_Dòng đầu_tiên chứa 2 số L và G .\nL dòng tiếp_theo , chứa giá_trị của dãy C .\nOutput_Một dòng duy_nhất chứa chi_phí nhỏ nhất .\nGiới_hạn 1 \\le L \\le 8000 .\n1 \\le G \\le 800 .\n1 \\le C(i) \\le 109 .\nVí_dụ Input 6 3 11 11 11 24 26 100 Output 299 Giải_thích : cách tối_ưu là C = (11 , 11 , 11) , (24 , 26) , (100) .\nChi_phí là 11 3 + 11 3 + 11 3 + 24 2 + 26 2 + 100 1 = 299 .\nLời_giải Đây là dạng bài_toán phân_hoạch dãy_số có_thể dễ_dàng giải bài QHĐ .\nGọi_F(g , i) là chi_phí nhỏ nhất nếu ta phân_hoạch i phần_tử đầu_tiên thành g nhóm , khi đó kết_quả bài_toán sẽ là F(G , L) .\nĐể tìm công_thức truy_hồi cho hàm F(g , i) , ta sẽ quan_tâm đến nhóm cuối_cùng .\nCoi phần_tử 0 là phần_tử cầm_canh ở trước phần_tử thứ nhất , thì người cuối_cùng không thuộc nhóm cuối có chỉ_số trong đoạn 0 , i .\nGiả_sử đó là người với chỉ_số k , thì chi_phí của cách phân_hoạch sẽ là F(g-1 , k) + Cost(k+1 , i) , với Cost(i , j) là chi_phí nếu phân j-i+1 người có chỉ_số i , j vào một nhóm .\nNhư_vậy : F(g , i) = min(F(g-1 , k) + Cost(k+1 , l)) với 0 lt;= k lt;= i .\nChú_ý là công_thức này chỉ được áp_dụng với ggt;1 , nếu g=1 , F(1 , i) = Cost(1 , i) , đây là trường_hợp cơ_sở .\nViệc cài_đặt chỉ đơn_giản là dựng mảng 2 chiều F , code như_sau : include lt;iostreamgt; using namespace std ; const int MAXL = 8008 ; const int MAXG = 808 ; const long_long INF = ( long_long ) 1e18 ; long_long C_MAXL ; long_long sum MAXL ; long_long F_MAXG_MAXL ; long_long cost ( int i , int j ) return ( sum j - sum i - 1 ) ( j - i + 1 ); int main () int G , L ; cin gt;gt; L gt;gt; G ; for ( int i = 1 ; i lt;= L ; ++ i ) cin gt;gt; C i ; sum i = sum i - 1 + C i ; for ( int g = 1 ; g lt;= G ; ++ g ) for ( int i = 0 ; i lt;= L ; ++ i ) if ( g == 1 ) F g i = cost ( 1 , i ); else F g i = INF ; for ( int k = 0 ; k lt;= i ; ++ k ) long_long new_cost = F g - 1 k + cost ( k + 1 , i ); if ( F g i gt; new_cost ) F g i = new_cost ; cout lt;lt; F_G_L lt;lt; endl ; return 0 ; Chú_ý là ta sử_dụng mảng sum tiền xử_lí O(L) để có_thể truy_vấn tổng một đoạn (dùng ở hàm cost()) trong O(1) .\nNhư_vậy độ phức_tạp của thuật_toán này là O(G_L_L) .\nThuật_toán tối_ưu hơn Gọi_P(g , i) là k nhỏ nhất để cực_tiểu_hóa F(g , i) , nói_cách_khác , P(g , i) là k nhỏ nhất mà F(g , i) = F(g-1 , k) + Cost(k+1 , i) .\nTính_chất quan_trọng để có_thể tối_ưu thuật_toán trên là dựa vào tính đơn_điệu của P(g , i) , cụ_thể : P(g , 0) \\le P(g , 1) \\le P(g , 2) \\le \\cdots \\le P(g , L-1) \\le P(g , L)_Ta sẽ không chứng_minh điều này ở đây , độc_giả có_thể tự thuyết_phục rằng điều này là đúng .\nChia_để_trị Để_ý rằng để tính F(g , i) , ta chỉ_cần quan_tâm tới hàng trước F(g-1) của ma_trận : F(g-1 , 0) , F(g-1 , 1) , . . .\n, F(g-1 , L) .\nNhư_vậy , ta có_thể tính hàng F(g) theo thứ_tự bất_kỳ .\nÝ_tưởng là với hàng g , trước_hết ta tính F(g , mid) và P(g , mid) với mid=L/2 , sau_đó sử_dụng tính_chất nêu trên P(g , i) \\le P(g , mid) với i lt; mid và P(g , i) \\ge P(g , mid) với i gt; mid để đi gọi đệ_quy đi tính hai nửa còn_lại .\ninclude lt;iostreamgt; const int MAXL = 8008 ; const int MAXG = 808 ; const long_long INF = ( long_long ) 1e18 ; using namespace std ; long_long F_MAXG_MAXL , sum MAXL , C_MAXL ; int P_MAXG_MAXL ; long_long cost ( int i , int j ) if ( i gt; j ) return 0 ; return ( sum j - sum i - 1 ) ( j - i + 1 ); void solve ( int g , int L , int R , int optL , int optR ) if ( L gt; R ) return ; int mid = ( L + R ) / 2 ; F g mid = INF ; for ( int i = optL ; i lt;= optR ; ++ i ) long_long new_cost = F g - 1 i + cost ( i + 1 , mid ); if ( F g mid gt; new_cost ) F g mid = new_cost ; P g mid = i ; solve ( g , L , mid - 1 , optL , P g mid ); solve ( g , mid + 1 , R , P g mid , optR ); int main () int G , L ; cin gt;gt; L gt;gt; G ; for ( int i = 1 ; i lt;= L ; ++ i ) cin gt;gt; C i ; sum i = sum i - 1 + C i ; for ( int i = 1 ; i lt;= L ; ++ i ) F 1 i = cost ( 1 , i ); for ( int g = 2 ; g lt;= G ; ++ g ) solve ( g , 1 , L , 1 , L ); cout lt;lt; F_G_L lt;lt; endl ; return 0 ; Chú_ý rằng ta không_thể đảm_bảo rằng P(g , mid) chia đôi đoạn optL , optR , thực_tế một_vài hàm solve() sẽ chạy chậm hơn nhiều hàm solve() khác .\nTuy_nhiên ta có_thể chứng_minh được , xét về tổng_thế thuật_toán này chạy đủ nhanh .\nMỗi lần_ta chia đôi đoạn L , R , nên ta sẽ đảm_bảo có tối_đa O(log(L)) tầng đệ_quy , như_vậy với mỗi hàng g , ta chỉ mất O(L logL) để tính .\nToàn_bộ thuật_toán có độ phức_tạp là O(G_L logL) .\nĐiều_kiện để Chia_để_trị đúng Điều_kiện theo best Như ở bài Hai nhà_máy CEOI 2004 : Nếu best(i) \\le best(i+1) , ta có_thể sử_dụng chia_để_trị .\nĐiều_kiện theo cost Nếu hàm_cost thoả_mãn quadrangle inequalities : cost(a , d) + cost(b , c) \\ge cost(a , c) + cost(b , d) với mọi a lt; b lt; c lt; d , ta cũng có_thể sử_dụng QHĐ chia_để_trị .\nBài luyện_tập F - ACM_ICPC_Vietnam_Regional 2017 Hackerrank - Mining\n", "tagged": "Tác_giả/N :/CH Lê_Anh_Đức/Np -/CH A2K42-PBC/Np Quy_hoạch_động/Np (QHĐ)/Np là/V một/M lớp/N thuật_toán/N rất/R quan_trọng/A và/Cc có/V nhiều/A ứng_dụng/V trong/E ngành/N khoa_học/N máy_tính/N ./CH\nTrong/E các/L cuộc_thi/Np Olympic/N tin_học/N hiện_đại/A ,/CH QHĐ/Np luôn/R là/V một/M trong/E những/L chủ_đề/Np chính/T ./CH\nTuy_vậy/C ,/CH theo/V tôi/P thấy/V ,/CH tài_liệu/N nâng_cao/Np về/E QHĐ/Np bằng/E tiếng/N Việt/Np hiện/N còn/R cực_kỳ/R khan_hiếm/A ,/CH dẫn/V đến/E học/V sinh/V viên/Nc Việt_Nam/N bị/V hạn_chế/V khả_năng/N tiếp_cận/V với/E những/L kỹ_thuật/N hiện_đại/A ./CH\nTrong/E bài/N viết/V này/P ,/CH tôi/P sẽ/R trình_bày/V một_vài/L kỹ_thuật/N để/E tối_ưu_hóa/Np độ/N phức_tạp/A của/E một_số/L thuật_toán/N QHĐ/Np ./CH\nTable/Np of_Contents/Np 1/M ./CH\nĐổi/V biến/V Bài_tập/Np ví_dụ/C :/CH Longest_Common_Subsequence/Np (LCS)/Np Đề_bài/Np Lời_giải/Np Bài_tập/Np ví_dụ/C :/CH Computer/Np (VNOI/Np Marathon/Np 2010)/Np Đề_bài/Np Lời_giải/Np Đổi/V biến/V Bài/N luyện_tập/V 2/M ./CH\nChia_để_trị/Np Hai/M nhà_máy/N CEOI/Np 2004/M Đề_bài/Np Lời_giải/Np Bài/N ví_dụ/C :/CH SEQPART/Np Lời_giải/Np Điều_kiện/N để/E Chia_để_trị/Np đúng/A Điều_kiện/N theo/V best/Np Điều_kiện/N theo/V cost/Np Bài/N luyện_tập/V 1/M ./CH\nĐổi/V biến/V Nhiều/A khi/N trong/E trạng_thái/N QHĐ/Np có_một/Np thành_phần_nào/Np đấy/P với/E khoảng/N giá_trị/N quá/R lớn/A ,/CH trong_khi/Np kết_quả/N của/E hàm/Np lại/R có/V khoảng/N giá_trị/N nhỏ/A ./CH\nTrong/E một_vài/L trường_hợp/N ,/CH ta/P có_thể/R đảo/N nhãn/N để/E giảm/V số/N trạng_thái/N ./CH\nBài_tập/Np ví_dụ/C :/CH Longest_Common_Subsequence/Np (LCS)/Np Đề_bài/Np Cho/E xâu/Np A/Ni độ_dài/Np m/Nu ,/CH xâu/Np B/Ni độ_dài/Np n/Ny ./CH\nHãy/R tìm/V độ_dài/Np xâu/Np con/Nc chung/A dài/A nhất/A của/E hai/M xâu/Np ,/CH chú_ý/V là/V xâu/Np con/Nc chung/A có_thể/R không/R liên_tiếp/A ./CH\nGiới_hạn/V m/Nu \\le/Np 106/M n/Ny \\le/Np 5000/M Các/L kí_tự/Np trong/E cả/P hai/M xâu/Np là/V các/L chữ_cái/Np tiếng/N Anh/N in/V hoa/N A/Ni ./CH ./CH Z/Y Ví_dụ/C A/Ni =/CH ADBCC_B/Np =/CH ABCD_LCS/Np =/CH ABC/Ny Kết_quả/N =/CH 3/M Lời_giải/Np Thuật_toán/N đơn_giản/A Gọi_F(i/Np ,/CH j)/Np là/V LCS/Np của/E hai/M tiền_tố/Np A_1/Np ./CH ./CH i/M và/Cc B_1/Np ./CH ./CH j/Np ./CH\nKhi/N đó/P ta/P có_thể/R maximize/Np F(i/Np ,/CH j)/Np theo/V F(i-1/Np ,/CH j)/Np và/Cc F(i/Np ,/CH j-1)/Np ./CH\nNếu/C A_i/Np =/CH B_j/Np thì/C ta/P có_thể/R cập_nhật/V F(i/Np ,/CH j)/Np theo/V F(i-1/Np ,/CH j-1)/Np +/CH 1/M ./CH\nKết_quả/N bài_toán/N là/V F(m/Np ,/CH n)/Np ./CH\nĐộ/N phức_tạp/A của/E thuật_toán/N này/P là/V O(mn)/Np ,/CH không/R khả_thi/A với/E giới_hạn/V của/E đề_bài/Np ./CH\nĐổi/V biến/V Đặt_L/Np =/CH min(m/Np ,/CH n)/Np Để_ý/V rằng/C trong/E hàm/Np QHĐ/Np trên/E ,/CH các/L giá_trị/N của/E F(i/Np ,/CH j)/Np sẽ/R không/R vượt_quá/Np L/Ny ,/CH trong_khi/Np đó/P chiều/N thứ_hai/N của/E trạng_thái/N có_thể/R khá/R lớn/A (lên/Np tới/E MAXM/Np =/CH 106)/Np ./CH\nĐể/E tối_ưu_hóa/Np ,/CH ta/P sẽ/R đổi/V biến/V ./CH\nGọi/V dp(i/Np ,/CH j)/Np là/V vị_trí/N k/N nhỏ/A nhất/A sao_cho/Np LCS(A_1/Np ./CH ./CH i/M ,/CH B_1/Np ./CH ./CH k)/Np =/CH j/Np ./CH\nĐể/E tính/V các/L giá_trị/N của/E dp/Np ,/CH ta/P sẽ/R QHĐ/Np theo/V kiểu/N cập_nhật/V đi/V ,/CH thay_vì/X đi/V tìm/V công_thức/N trực_tiếp/A cho/E các/L dp(i/Np ,/CH j)/Np ./CH\nGọi/V nextPos(i/Np ,/CH c)/Np =/CH j/Np gt;/Np i/M nhỏ/A nhất/A mà/C A_j/Np =/CH c/Ni (với/Np c/Ni là/V một/M ký_tự/Np từ/E A/Ni đến/E Z)/Np ./CH\nMảng/N nextPos/Np có_thể/R tính/V trong/E T(M26)/Np ./CH\nNhư_vậy/X ta/P có_thể/R tính/V các/L giá_trị/N QHĐ/Np như_sau/Np :/CH Ban_đầu/N khởi/V tạo/V các/L giá_trị/N dp(i/Np ,/CH j)/Np =/CH \\infty/Np ,/CH dp(0/Np ,/CH 0)/Np =/CH 0/M ./CH\nFor/Np i/M và/Cc j/Np tăng/V dần/R ,/CH với/E mỗi/L giá_trị/N dp(i/Np ,/CH j)/Np khác/A vô_cùng/R :/CH Cập_nhật/V dp(i+1/Np ,/CH j)/Np theo/V dp(i/Np ,/CH j)/Np ./CH\nGọi/V k/N là/V vị_trí/N xuất_hiện/V tiếp_theo/V của/E B_i+1/Np trong/E xâu/Np A/Ni bắt_đầu_từ/Np vị_trí/N dp(i/Np ,/CH j)/Np ,/CH tức_là/V k/N =/CH nextPos(dp(i/Np ,/CH j)/Np ,/CH B_i+1)/Np ./CH\nNếu/C tồn_tại/V k/N ,/CH cập_nhật/V dp(i+1/Np ,/CH j+1)/Np theo/V k/N ./CH\nĐể/E tính/V kết_quả/N ,/CH ta/P sẽ/R chỉ_cần/Np tìm/V j/Np lớn/A nhất/A mà/C tồn_tại/V dp(i/Np ,/CH j)/Np khác/A vô_cùng/R ./CH\ninclude/Np lt;bits/Np ./CH hgt;/Np using/Np namespace/Np std/Np ;/CH const/Np int/Np M/Nu =/CH 1e6/Np +/CH 6/M ;/CH const/Np int/Np N/Ny =/CH 5005/Np ;/CH int/Np dp/Np N_N/Np ;/CH char/Np a/Ni M/Nu ,/CH b/Ni N/Ny ;/CH int/Np nextPos/Np M/Nu 26/M ;/CH int/Np m/Nu ,/CH n/Ny ;/CH void/Np minimize/Np (/CH int/Np amp;/Np a/Ni ,/CH int/Np b/Ni )/CH if/Np (/CH a/Ni ==/Np -/CH 1/M a/Ni gt;/Np b/Ni )/CH a/Ni =/CH b/Ni ;/CH int/Np main/Np ()/Np cin/Np gt;gt;/Np a/Ni +/CH 1/M gt;gt;/Np b/Ni +/CH 1/M ;/CH m/Nu =/CH strlen/Np (/CH a/Ni +/CH 1/M );/CH n/Ny =/CH strlen/Np (/CH b/Ni +/CH 1/M );/CH for/Np (/CH int/Np c/Ni =/CH 0/M ;/CH c/Ni lt;/Np 26/M ;/CH ++/Np c/Ni )/CH for/Np (/CH int/Np i/M =/CH m/Nu -/CH 1/M ;/CH i/M gt;=/Np 0/M ;/CH --/Np i/M )/CH nextPos/Np i/M c/Ni =/CH (/CH a/Ni i/M +/CH 1/M -/CH A/Ni ==/Np c/Ni )/CH ?/CH\ni/M +/CH 1/M :/CH nextPos/Np i/M +/CH 1/M c/Ni ;/CH int/Np maxLength/Np =/CH min/Np (/CH m/Nu ,/CH n/Ny );/CH memset/Np (/CH dp/Np ,/CH -/CH 1/M ,/CH sizeof/Np dp/Np );/CH dp/Np 0/M 0/M =/CH 0/M ;/CH for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;/Np n/Ny ;/CH ++/Np i/M )/CH for/Np (/CH int/Np j/Np =/CH 0/M ;/CH j/Np lt;=/Np i/M ;/CH ++/Np j/Np )/CH if/Np (/CH dp/Np i/M j/Np gt;=/Np 0/M )/CH minimize/Np (/CH dp/Np i/M +/CH 1/M j/Np ,/CH dp/Np i/M j/Np );/CH int/Np new_value/Np =/CH nextPos/Np dp/Np i/M j/Np b/Ni i/M +/CH 1/M -/CH A/Ni ;/CH if/Np (/CH new_value/Np gt;/Np 0/M )/CH minimize/Np (/CH dp/Np i/M +/CH 1/M j/Np +/CH 1/M ,/CH new_value/Np );/CH int/Np ans/Np =/CH 0/M ;/CH for/Np (/CH int/Np j/Np =/CH maxLength/Np ;/CH j/Np gt;/Np 0/M ;/CH --/Np j/Np )/CH for/Np (/CH int/Np i/M =/CH j/Np ;/CH i/M lt;=/Np n/Ny ;/CH ++/Np i/M )/CH if/Np (/CH dp/Np i/M j/Np gt;=/Np 0/M )/CH ans/Np =/CH j/Np ;/CH if/Np (/CH ans/Np !/CH =/CH 0/M )/CH break/Np ;/CH cout/Np lt;lt;/Np ans/Np lt;lt;/Np endl/Np ;/CH return/Np 0/M ;/CH Bài_tập/Np ví_dụ/C :/CH Computer/Np (VNOI/Np Marathon/Np 2010)/Np Problem_Link/Np :/CH COMPUTER/Np -/CH VOJ/Np ./CH\nĐề_bài/Np Công_ty/N phần_mềm/N XYZ/Np mới/R mua/V x/CH máy_tính/N để/E bàn/N và/Cc y/N máy_tính/N xách_tay/Np ./CH\nGiá/N một/M máy_tính/N để/E bàn_là/C a/Ni đồng/Nu còn/R giá/N một/M máy_tính/N xách_tay/Np là/V b/Ni đồng/Nu ./CH\nĐể/E tránh/V sự/N thắc_mắc/V giữa/N các/L phòng/N bàn/N ,/CH Tổng_giám_đốc/N đã/R đưa_ra/Np cách/N phân_bố/V các/L máy_tính/N này/P về/E n/Ny phòng_ban/N như_sau/Np :/CH Sắp_xếp/V n/Ny phòng_ban/N theo/V thứ_tự/N về/E mức_độ/N quan_trọng/A của/E các/L phòng_ban/N ./CH\nTiến_hành/V phân_bố/V các/L máy_tính/N cho/E các/L phòng_ban/N bảo_đảm/V nếu/C phòng_ban/N i/M có/V mức_độ/N quan_trọng/A nhỏ/A hơn/A mức_độ/N quan_trọng/A của/E phòng_ban/N j/Np thì/C tổng_giá/Np trị/V máy_tính/N được/V phân_bố/V cho/E phòng_ban/N i/M không/R được/V vượt_quá/Np tổng_giá/Np trị/V máy_tính/N được/V phân_bố/V cho/E phòng_ban/N j/Np ./CH\nPhòng_ban/N nhận/V được/V tổng_giá/Np trị/V máy_tính/N nhỏ/A nhất_là/X lớn/A nhất/A ./CH\nLà/V một/M lập_trình_viên/Np giỏi/A nhưng/C lại/R thuộc/V phòng_ban/N có/V mức_độ/N quan_trọng/A nhỏ/A nhất/A ,/CH Thắng/V muốn/V chứng_tỏ/V tay_nghề/N của/E mình/P với/E đồng_nghiệp/N nên/C đã/R lập_trình/V tính/V ra/V ngay/R được/V tổng_giá/Np trị/V máy/N trình/V mà/C phòng_ban/N mình/P nhận/V được/V rồi/C mời/V bạn/N tính/V lại/R thử/V xem/V !/CH Yêu_cầu/V Cho/E x/CH ,/CH a/Ni ,/CH y/N ,/CH b/Ni ,/CH n/Ny ./CH\nHãy/R tính/V tổng_giá/Np trị/V máy_tính/N mà/C phòng/N Thắng/V nhận/V được/V ./CH\nInput/Np x/CH ,/CH a/Ni ,/CH y/N ,/CH b/Ni ,/CH n/Ny không/R quá/R 1000/M Ví_dụ/C Input/Np 3/M 300/M 2/M 500/M 2/M Output/Np 900/M Input/Np 4/M 300/M 3/M 500/M 2/M Output/Np 1300/M Lời_giải/Np Trước_hết/N ta/P sẽ/R chặt/A nhị_phân/Np kết_quả/N bài_toán/N ./CH\nVới/E mỗi/L giá_trị/N chặt/A nhị_phân/Np ,/CH ta/P cần/V kiểm_tra/V xem/V có/V tồn_tại/V phương_án/N thỏa_mãn/V hay_không/Np ./CH\nThuật_toán/N sơ_khai/A Đặt_giá/Np trị/V cần/V kiểm_tra/V là/V v/Nu ./CH\nXét/V các/L phòng_ban/N theo/V thứ_tự/N tăng/V dần/R về/E mức_độ/N quan_trọng/A ,/CH đánh_số/Np từ/E 1/M ./CH\nSử_dụng/V một/M mảng/N đa_chiều/Np để/E đánh_dấu/V các/L trạng_thái/N có_thể/R đạt/V tới/E ./CH\nCác/L giá_trị/N cần/V quản_lí/V là/V :/CH chỉ_số/N của/E phòng_ban/N ,/CH đã/R dùng/V số/N máy_tính/N để/E bàn/N x/CH ,/CH đã/R dùng/V số/N máy_tính/N xách_tay/Np y/N ,/CH tổng_giá/Np trị/V máy_tính/N của/E phòng_ban/N trước/E đó/P ./CH\nBắt_đầu_từ/Np trạng_thái/N (0/Np ,/CH 0/M ,/CH 0/M ,/CH 0)/Np ,/CH ta/P sử_dụng/V thuật_toán/N loang/Np (BFS)/Np ./CH\nCuối_cùng/A nếu/C trạng_thái/N (n/Np ,/CH 0/M ,/CH 0/M ,/CH ./CH ./CH ./CH )/CH có_thể/R đến/E được/V ,/CH thì/C ta/P sẽ/R có/V cách/N phân_hoạch/Np các/L máy_tính/N vào/E các/L phòng_ban/N ứng/V với/E giá_trị/N cận_dưới/Np v/Nu ./CH\nKhông/R cần/V tính_toán/V cụ_thể/A cũng/R có_thể/R thấy/V thuật_toán/N này/P không_thể/R đáp_ứng/V về_mặt/Np thời_gian/N (và/Np bộ/N nhớ)/Np với/E giới_hạn/V của/E đề_bài/Np ./CH\nNâng_cấp/V bằng/E nhận_xét/N Nhận_xét/N rằng/C ta/P không/R cần/V quan_tâm/V tới/E thứ_tự/N về/E mức_độ/N quan_trọng/A của/E các/L phòng_ban/N ./CH\nVới/E một_cách/N phân_hoạch/Np các/L máy_tính/N sao_cho/Np mỗi/L phòng/N nhận/V được/V tổng_giá/Np trị/V không/R nhỏ/A hơn/A v/Nu ,/CH ta/P luôn/R có_thể/R sắp_xếp/V các/L bộ/N theo/V giá_trị/N không/R giảm/V ứng/V với/E các/L phòng_ban/N ./CH\nTa/P có/V trạng_thái/N QHĐ/Np là/V F(i/Np ,/CH x/CH ,/CH y/N ,/CH value)/Np =/CH true/Np nếu/C có_thể/R phân_bổ/V máy_tính/N cho/E i/M phòng_ban/N ,/CH đã/R dùng/V x/CH máy_tính/N để/E bàn/N và/Cc y/N máy_tính/N xách_tay/Np ,/CH đã/R gom/V được/V tổng_giá/Np trị/V v/Nu cho/E phòng/N thứ/N i+1/Np ./CH\nCách/N làm/V này/P số/N trạng_thái/N vẫn/R như/C trước/E nhưng/C ta/P đã/R có_thể/R chuyển/V trạng_thái/N trong/E O(1)/Np ./CH\nCụ_thể/A từ/E F(i/Np ,/CH x/CH ,/CH y/N ,/CH value)/Np ta/P chuyển/V đến/E F(i/Np ,/CH x+1/Np ,/CH y/N ,/CH value+a)/Np hoặc/Cc F(i/Np ,/CH x/CH ,/CH y+1/Np ,/CH value+b)/Np ,/CH chú_ý/V là/V chỉ_có/Np thể/N dùng/V thêm/V máy/N xách_tay/Np nếu/C xlt;X/Np và/Cc dùng/V thêm/V máy/N để/E bàn/N nếu/C ylt;Y/Np ,/CH đồng_thời/R nếu/C giá_trị/N value/Np đủ/A lớn/A hơn/A hoặc/Cc bằng/E v/Nu thì/C ta/P chuyển/V sang/V trạng_thái/N F(i+1/Np ,/CH x/CH ,/CH y/N ,/CH 0)/Np luôn/R ./CH\nĐổi/V biến/V Ở/E bài/N này/P ,/CH ta/P có_thể/R dễ_dàng/A đổi/V biến/V value/Np ra/V làm/V hàm_mục_tiêu/Np ./CH\nNhưng/C không/R chỉ_có/Np vậy/P ,/CH ta/P có_thể/R đẩy/V cả/P i/M ra/V ngoài/E !/CH Cụ_thể/A ,/CH F(x/Np ,/CH y)/Np =/CH một/M cặp/N số/N (i/Np ,/CH value)/Np lần_lượt/R là/V số/N phòng/N phân_bố/V được/V và/Cc số/N tiền/N gom/V được/V ./CH\nHàm_mục_tiêu/Np của/E F(x/Np ,/CH y)/Np là/V một/M cặp/N số/N hoàn_toàn/A có_thể/R so_sánh/V được/V ,/CH trong/E đó/P giá_trị/N đầu/N (i)/Np được/V ưu_tiên/V so_sánh/V trước/E ./CH\nCách/N cập_nhật/V các/L F(x/Np ,/CH y)/Np giống_như/Np phần/N trước/E ,/CH độ/N phức_tạp/A vẫn/R là/V O(1)/Np cho/E bước/V chuyển/V trạng_thái/N ,/CH trong_khi/Np số/N trạng_thái/N lúc_này/Np là/V đủ/A nhỏ/A đối_với/E giới_hạn/V của/E đề_bài/Np ./CH\ninclude/Np lt;bits/Np ./CH hgt;/Np using/Np namespace/Np std/Np ;/CH const/Np int/Np N/Ny =/CH 1010/Np ;/CH int/Np x/CH ,/CH y/N ,/CH a/Ni ,/CH b/Ni ,/CH n/Ny ;/CH pair/Np lt;/Np int/Np ,/CH int/Np gt;/Np F_N_N/Np ;/CH pair/Np lt;/Np int/Np ,/CH int/Np gt;/Np newState/Np (/CH pair/Np lt;/Np int/Np ,/CH int/Np gt;/Np s/Y ,/CH int/Np a/Ni ,/CH int/Np v/Nu )/CH s/Y ./CH\nsecond/Np +=/Np a/Ni ;/CH if/Np (/CH s/Y ./CH\nsecond/Np gt;=/Np v/Nu )/CH ++/Np s/Y ./CH\nfirst/Np ;/CH s/Y ./CH\nsecond/Np =/CH 0/M ;/CH return/Np s/Y ;/CH bool/Np dp/Np (/CH int/Np value/Np )/CH for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;=/Np x/CH ;/CH ++/Np i/M )/CH for/Np (/CH int/Np j/Np =/CH 0/M ;/CH j/Np lt;=/Np y/N ;/CH ++/Np j/Np )/CH F/Np i/M j/Np =/CH make_pair/Np (/CH 0/M ,/CH 0/M );/CH for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;=/Np x/CH ;/CH ++/Np i/M )/CH for/Np (/CH int/Np j/Np =/CH 0/M ;/CH j/Np lt;=/Np y/N ;/CH ++/Np j/Np )/CH if/Np (/CH F/Np i/M j/Np ./CH\nfirst/Np ==/Np n/Ny )/CH return/Np 1/M ;/CH if/Np (/CH i/M lt;/Np x/CH )/CH F/Np i/M +/CH 1/M j/Np =/CH max/Np (/CH F/Np i/M +/CH 1/M j/Np ,/CH newState/Np (/CH F/Np i/M j/Np ,/CH a/Ni ,/CH value/Np ));/Np if/Np (/CH j/Np lt;/Np y/N )/CH F/Np i/M j/Np +/CH 1/M =/CH max/Np (/CH F/Np i/M j/Np +/CH 1/M ,/CH newState/Np (/CH F/Np i/M j/Np ,/CH b/Ni ,/CH value/Np ));/Np return/Np 0/M ;/CH int/Np solve/Np ()/Np int/Np l/Ny =/CH 0/M ,/CH r/Np =/CH (/CH a/Ni x/CH +/CH b/Ni y/N )/CH //CH n/Ny ;/CH int/Np ans/Np =/CH 0/M ;/CH while/Np (/CH l/Ny lt;=/Np r/Np )/CH int/Np mid/Np =/CH l/Ny +/CH r/Np gt;gt;/Np 1/M ;/CH if/Np (/CH dp/Np (/CH mid/Np ))/Np ans/Np =/CH mid/Np ;/CH l/Ny =/CH mid/Np +/CH 1/M ;/CH else/Np r/Np =/CH mid/Np -/CH 1/M ;/CH return/Np ans/Np ;/CH int/Np main/Np ()/Np cin/Np gt;gt;/Np x/CH gt;gt;/Np a/Ni gt;gt;/Np y/N gt;gt;/Np b/Ni gt;gt;/Np n/Ny ;/CH cout/Np lt;lt;/Np solve/Np ()/Np lt;lt;/Np endl/Np ;/CH cin/Np gt;gt;/Np x/CH gt;gt;/Np a/Ni gt;gt;/Np y/N gt;gt;/Np b/Ni gt;gt;/Np n/Ny ;/CH cout/Np lt;lt;/Np solve/Np ()/Np lt;lt;/Np endl/Np ;/CH return/Np 0/M ;/CH Bài/N luyện_tập/V VOJ/Np -/CH BINPACK/Np 2/M ./CH\nChia_để_trị/Np Đây/P là/V kỹ_thuật/N khá/R hiếm/A gặp/V ,/CH tuy_nhiên/C lại/R cực_kỳ/R mạnh/A ./CH\nHai/M nhà_máy/N CEOI/Np 2004/M Đề_bài/Np Có/V n/Ny cây_cổ_thụ/Np được/V trồng/V trên/E một/M con_đường/Np từ/E đỉnh/N đổi/V đến/E chân/N đồi/N ./CH\nChính_phủ/N địa_phương/N quyết_định/V cắt_bỏ/Np chúng/P ./CH\nĐể/E tránh/V hoang_phí/Np ,/CH mỗi/L cái/Nc cây/N cần/V được/V chuyển/V đến/E một/M nhà_máy/N cưa/N ./CH\nCây/N chỉ_có/Np thể/N được/V vận_chuyển/V theo/V một_chiều/Np duy_nhất/A :/CH hướng/N về/E chân/N đồi/N ./CH\nCó_một/Np nhà_máy/N cưa/N ở/E cuối/N con_đường/Np ./CH\nHai/M nhà_máy/N cưa/N có_thể/R được/V xây_dựng/V dọc/A theo/V con_đường/Np ./CH\nHãy/R xác_định/V vị_trí/N tối_ưu/A để/E xây_dựng/V chúng/P ,/CH để/E cực_tiểu_hóa/Np chi_phí/N vận_chuyển/V ./CH\nChi_phí/N vận_chuyển/V 1kg/Np gỗ/N đi/V 1/M mét/Nu là/V 1/M cent/Np ./CH\nYêu_cầu/V Viết/V chương_trình/N :/CH đọc/V dữ_liệu/N từ_đầu/Np vào/E chuẩn/N số_lượng/N cây/N ,/CH khối_lượng/N và/Cc vị_trí/N của/E chúng/P ,/CH tính_toán/V chi_phí/N vận_chuyển/V tối_ưu/A nhất/A ,/CH xuất/V kết_quả/N ra/V đầu_ra/N chuẩn/N ./CH\nInput_Dòng/Np đầu_tiên/A chứa/V số/N n/Ny -/CH số_lượng/N cây/N (2/Np \\le/Np n/Ny \\le/Np 20/M ,/CH 000)/Np ./CH\nCác/L cây/N được/V đánh_số/Np 1/M ,/CH 2/M ,/CH ./CH ./CH ./CH ,/CH n/Ny ,/CH theo/V chiều/N từ/E đỉnh/N đồi/N đến/E chân/N đồi/N ./CH\nn/Ny dòng/N tiếp_theo/V mỗi/L dòng/N chứa/V hai/M số_nguyên_dương/Np cách/N nhau/N bởi/E dấu/N cách/N ./CH\nDòng/N thứ/N i/M +/CH 1/M chứa/V w_i/Np -/CH khối_lượng/N tính/V theo/V kg/Nu của/E cái/Nc cây/N thử/V i/M và/Cc d_i/Np -/CH khoảng_cách/N tính/V theo/V mét/Nu giữa/N cây/N thứ/N i/M và/Cc cây/N i/M +/CH 1/M ,/CH 1/M \\le/Np w_i/Np \\le/Np 10000/M ,/CH 0/M \\le/Np d_i/Np \\le/Np 10000/M ./CH\nSố/N cuối_cùng/A ,/CH d_n/Np là/V khoảng_cách/N từ/E cây/N thứ/N n/Ny đến/E chân/N đồi/N ./CH\nDữ_liệu/N vào/E đảm_bảo/V kết_quả/N của/E bài_toán/N không/R vượt_quá/Np 2/M 109/M cent/Np ./CH\nOutput_Một/Np dòng/N duy_nhất/A chứa/V một_số/L là/V kết_quả/N bài_toán/N :/CH chi_phí/N vận_chuyển/V nhỏ/A nhất/A ./CH\nVí_dụ/C Input/Np 9/M 1/M 2/M 2/M 1/M 3/M 3/M 1/M 1/M 3/M 2/M 1/M 6/M 2/M 1/M 1/M 2/M 1/M 1/M Output/Np 26/M Hình_vẽ/Np trên/E minh_họa/V cho/E test/Np ví_dụ/C ./CH\nCác/L hình_tròn/N được/V tô/Np đen/A là/V các_vị/Np trí/Np có_nhà/Np máy/N ./CH\nKết_quả/N sẽ/R là/V :/CH 1/M (2+1)/Np +/CH 2/M 1/M +/CH 1/M (1/Np +/CH 2)/Np +/CH 3/M 2/M +/CH 2/M (1/Np +/CH 2/M +/CH 1)/Np +/CH 1/M (2/Np +/CH 1)/Np +/CH 1/M 1/M =/CH 26/M ./CH\nLời_giải/Np Trước_hết/N ta/P sẽ/R giải_quyết/V vấn_đề/N tính/V chi_phí/N vận_chuyển/V nếu/C biết/V vị_trí/N của/E hai/M nhà_máy/N đặt/V thêm/V ./CH\nNếu/C ta/P có_thể/R tính/V được/V chi_phí/N này/P trong/E O(1)/Np ,/CH bài_toán/N sẽ/R có_thể/R giải/N được/V trong/E O(N2)/Np -/CH ta/P có_thể/R for/Np hết/V các/L cặp/N vị_trí/N có_thể/R đặt/V nhà_máy/N ./CH\nGọi/V :/CH sumW_i/Np là/V tổng/N của/E các/L w_j/Np với/E i/M \\le/Np j/Np ./CH\nsumD_i/Np là/V tổng/N của/E các/L d_j/Np với/E i/M \\le/Np j/Np ./CH\nsumWS_i/Np là/V tổng/N của/E các/L w_j/Np sumD_j/Np với/E i/M \\le/Np j/Np ./CH\nKhi/N đó/P cost(L/Np ,/CH R)/Np là/V chi_phí/N vận_chuyển/V các/L cây/N có/V chỉ_số/N trong/E đoạn/Nc L/Ny ,/CH R/Np đến/E nhà_máy/N đặt/V ở/E R/Np là/V :/CH sumWS_L/Np -/CH sumWS_R/Np -/CH sumD_R/Np (sumW_L/Np -/CH sumW_R)/Np ./CH\nNhư_vậy/X ta/P có_thể/R xây_dựng/V hàm/Np eval(i/Np ,/CH j)/Np =/CH chi_phí/N nếu/C đặt/V thêm/V hai/M nhà_máy/N ở/E i/M và/Cc j/Np =/CH cost(1/Np ,/CH i)/Np +/CH cost(i/Np +/CH 1/M ,/CH j)/Np +/CH cost(j/Np +/CH 1/M ,/CH n/Ny +/CH 1)/Np ./CH\nTuy_nhiên/C lời_giải/Np O(N2)/Np là/V chưa/R đủ/A tốt/A để/E có_thể/R giải_quyết/V trọn_vẹn/A bài_toán/N này/P ./CH\nGọi/V best(i)/Np là/V vị_trí/N j/Np gt;/Np i/M tốt/A nhất/A nếu/C ta/P đã/R đặt/V một/M nhà_máy/N ở/E i/M ./CH\nNhư_vậy/X kết_quả/N của/E bài_toán/N sẽ/R là/V min(eval(i/Np ,/CH best_i)/Np với/E 1/M \\le/Np i/M lt;/Np n/Ny ./CH\nNhận_xét/N :/CH best_i/Np \\le/Np best_i/Np +/CH 1/M ./CH\nCó_thể/R viết/V tường_minh/Np công_thức/N để/E chứng_minh/V ./CH\nTa/P có_thể/R tính/V các/L best_i/Np theo/V thứ_tự/N bất_kỳ/A ./CH\nVì/E các/L giá_trị/N best/Np không/R liên_quan/V đến/E nhau/N nên/C VD/Np ta/P có_thể/R tính/V best(3)/Np rồi/C best(1)/Np và/Cc best(2)/Np ./CH\nNhư_vậy/X ta/P có/V thuật_toán/N sử_dụng/V tư_tưởng/N chia_để_trị/Np như_sau/Np :/CH Hàm/Np solve(L/Np ,/CH R/Np ,/CH from/Np ,/CH to)/Np sẽ/R đi/V tính/V các/L best(L/Np ./CH ./CH R)/Np ,/CH biết/V rằng/C chúng/P nằm/V trong/E đoạn/Nc from/Np ./CH ./CH to/A ./CH\nvoid/Np solve/Np (/CH int/Np L/Ny ,/CH int/Np R/Np ,/CH int/Np from/Np ,/CH int/Np to/A )/CH if/Np (/CH L/Ny gt;/Np R/Np )/CH return/Np ;/CH int/Np mid/Np =/CH L/Ny +/CH R/Np gt;gt;/Np 1/M ;/CH best/Np mid/Np =/CH from/Np ;/CH for/Np (/CH int/Np i/M =/CH from/Np +/CH 1/M ;/CH i/M lt;=/Np to/A ;/CH ++/Np i/M )/CH if/Np (/CH eval/Np (/CH mid/Np +/CH 1/M ,/CH best/Np mid/Np )/CH gt;/Np eval/Np (/CH mid/Np +/CH 1/M ,/CH i/M ))/Np best/Np mid/Np =/CH i/M ;/CH solve/Np (/CH L/Ny ,/CH mid/Np -/CH 1/M ,/CH from/Np ,/CH best/Np mid/Np );/CH solve/Np (/CH mid/Np +/CH 1/M ,/CH R/Np ,/CH best/Np mid/Np ,/CH to/A );/CH Đánh_giá/V độ/N phức_tạp/A thuật_toán/N :/CH vì/E mỗi/L lần/N gọi/V để/E quy/Np khoảng/N L/Ny ,/CH R/Np được/V chia/V đôi/M ,/CH nên/C sẽ/R có/V O(logN)/Np tầng/N ,/CH mỗi/L tầng/N vòng/N for/Np chỉ/R chạy/V qua/V O(N)/Np phần_tử/N ,/CH vì_vậy/C độ/N phức_tạp/A của/E thuật_toán/N là/V O(NlogN)/Np ./CH\nBài/N ví_dụ/C :/CH SEQPART_Link/Np :/CH Hackerrank_Cho/Np dãy/Nc L/Ny số/N C1/Np ./CH ./CH L/Ny ,/CH cần/V chia/V dãy/Nc này/P thành/V G/Nu đoạn/Nc liên_tiếp/A ./CH\nVới/E phần_tử/N thứ/N i/M ,/CH ta/P định_nghĩa/N chi_phí/N của/E nó/P là/V tích/N của/E Ci/Np và/Cc số_lượng/N số/N nằm/V cùng/A đoạn/Nc liên_tiếp/A với/E nó/P ./CH\nChi_phí/N của/E dãy_số/Np ứng/V với/E một_cách/N phân_hoạch/Np là/V tổng_các/Np chi_phí/N của/E các/L phần_tử/N ./CH\nHãy/R xác_định/V cách/N phân_hoạch/Np dãy_số/Np để/E chi_phí/N là/V nhỏ/A nhất/A ./CH\nInput_Dòng/Np đầu_tiên/A chứa/V 2/M số/N L/Ny và/Cc G/Nu ./CH\nL/Ny dòng/N tiếp_theo/V ,/CH chứa/V giá_trị/N của/E dãy/Nc C/Ni ./CH\nOutput_Một/Np dòng/N duy_nhất/A chứa/V chi_phí/N nhỏ/A nhất/A ./CH\nGiới_hạn/V 1/M \\le/Np L/Ny \\le/Np 8000/Np ./CH\n1/M \\le/Np G/Nu \\le/Np 800/M ./CH\n1/M \\le/Np C(i)/Np \\le/Np 109/M ./CH\nVí_dụ/C Input/Np 6/M 3/M 11/M 11/M 11/M 24/M 26/M 100/M Output/Np 299/Np Giải_thích/V :/CH cách/N tối_ưu/A là/V C/Ni =/CH (11/Np ,/CH 11/M ,/CH 11)/Np ,/CH (24/Np ,/CH 26)/Np ,/CH (100)/Np ./CH\nChi_phí/N là/V 11/M 3/M +/CH 11/M 3/M +/CH 11/M 3/M +/CH 24/M 2/M +/CH 26/M 2/M +/CH 100/M 1/M =/CH 299/Np ./CH\nLời_giải/Np Đây/P là/V dạng/N bài_toán/N phân_hoạch/Np dãy_số/Np có_thể/R dễ_dàng/A giải/N bài/N QHĐ/Np ./CH\nGọi_F(g/Np ,/CH i)/Np là/V chi_phí/N nhỏ/A nhất/A nếu/C ta/P phân_hoạch/Np i/M phần_tử/N đầu_tiên/A thành/V g/Nu nhóm/N ,/CH khi/N đó/P kết_quả/N bài_toán/N sẽ/R là/V F(G/Np ,/CH L)/Np ./CH\nĐể/E tìm/V công_thức/N truy_hồi/Np cho/E hàm/Np F(g/Np ,/CH i)/Np ,/CH ta/P sẽ/R quan_tâm/V đến/E nhóm/N cuối_cùng/A ./CH\nCoi/V phần_tử/N 0/M là/V phần_tử/N cầm_canh/Np ở/E trước/E phần_tử/N thứ/N nhất/A ,/CH thì/C người/N cuối_cùng/A không/R thuộc/V nhóm/N cuối/N có/V chỉ_số/N trong/E đoạn/Nc 0/M ,/CH i/M ./CH\nGiả_sử/Np đó/P là/V người/N với/E chỉ_số/N k/N ,/CH thì/C chi_phí/N của/E cách/N phân_hoạch/Np sẽ/R là/V F(g-1/Np ,/CH k)/Np +/CH Cost(k+1/Np ,/CH i)/Np ,/CH với/E Cost(i/Np ,/CH j)/Np là/V chi_phí/N nếu/C phân/V j-i+1/Np người/N có/V chỉ_số/N i/M ,/CH j/Np vào/E một/M nhóm/N ./CH\nNhư_vậy/X :/CH F(g/Np ,/CH i)/Np =/CH min(F(g-1/Np ,/CH k)/Np +/CH Cost(k+1/Np ,/CH l))/Np với/E 0/M lt;=/Np k/N lt;=/Np i/M ./CH\nChú_ý/V là/V công_thức/N này/P chỉ/R được/V áp_dụng/V với/E ggt;1/Np ,/CH nếu/C g=1/Np ,/CH F(1/Np ,/CH i)/Np =/CH Cost(1/Np ,/CH i)/Np ,/CH đây/P là/V trường_hợp/N cơ_sở/N ./CH\nViệc/N cài_đặt/V chỉ/R đơn_giản/A là/V dựng/V mảng/N 2/M chiều/N F/Np ,/CH code/Np như_sau/Np :/CH include/Np lt;iostreamgt;/Np using/Np namespace/Np std/Np ;/CH const/Np int/Np MAXL/Np =/CH 8008/Np ;/CH const/Np int/Np MAXG/Np =/CH 808/Np ;/CH const/Np long_long/Np INF/Np =/CH (/CH long_long/Np )/CH 1e18/Np ;/CH long_long/Np C_MAXL/Np ;/CH long_long/Np sum/Np MAXL/Np ;/CH long_long/Np F_MAXG_MAXL/Np ;/CH long_long/Np cost/Np (/CH int/Np i/M ,/CH int/Np j/Np )/CH return/Np (/CH sum/Np j/Np -/CH sum/Np i/M -/CH 1/M )/CH (/CH j/Np -/CH i/M +/CH 1/M );/CH int/Np main/Np ()/Np int/Np G/Nu ,/CH L/Ny ;/CH cin/Np gt;gt;/Np L/Ny gt;gt;/Np G/Nu ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np L/Ny ;/CH ++/Np i/M )/CH cin/Np gt;gt;/Np C/Ni i/M ;/CH sum/Np i/M =/CH sum/Np i/M -/CH 1/M +/CH C/Ni i/M ;/CH for/Np (/CH int/Np g/Nu =/CH 1/M ;/CH g/Nu lt;=/Np G/Nu ;/CH ++/Np g/Nu )/CH for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;=/Np L/Ny ;/CH ++/Np i/M )/CH if/Np (/CH g/Nu ==/Np 1/M )/CH F/Np g/Nu i/M =/CH cost/Np (/CH 1/M ,/CH i/M );/CH else/Np F/Np g/Nu i/M =/CH INF/Np ;/CH for/Np (/CH int/Np k/N =/CH 0/M ;/CH k/N lt;=/Np i/M ;/CH ++/Np k/N )/CH long_long/Np new_cost/Np =/CH F/Np g/Nu -/CH 1/M k/N +/CH cost/Np (/CH k/N +/CH 1/M ,/CH i/M );/CH if/Np (/CH F/Np g/Nu i/M gt;/Np new_cost/Np )/CH F/Np g/Nu i/M =/CH new_cost/Np ;/CH cout/Np lt;lt;/Np F_G_L/Np lt;lt;/Np endl/Np ;/CH return/Np 0/M ;/CH Chú_ý/V là/V ta/P sử_dụng/V mảng/N sum/Np tiền/N xử_lí/V O(L)/Np để/E có_thể/R truy_vấn/Np tổng/N một/M đoạn/Nc (dùng/Np ở/E hàm/Np cost())/Np trong/E O(1)/Np ./CH\nNhư_vậy/X độ/N phức_tạp/A của/E thuật_toán/N này/P là/V O(G_L_L)/Np ./CH\nThuật_toán/N tối_ưu/A hơn/A Gọi_P(g/Np ,/CH i)/Np là/V k/N nhỏ/A nhất/A để/E cực_tiểu_hóa/Np F(g/Np ,/CH i)/Np ,/CH nói_cách_khác/Np ,/CH P(g/Np ,/CH i)/Np là/V k/N nhỏ/A nhất/A mà/C F(g/Np ,/CH i)/Np =/CH F(g-1/Np ,/CH k)/Np +/CH Cost(k+1/Np ,/CH i)/Np ./CH\nTính_chất/N quan_trọng/A để/E có_thể/R tối_ưu/A thuật_toán/N trên/E là/V dựa/V vào/E tính/V đơn_điệu/Np của/E P(g/Np ,/CH i)/Np ,/CH cụ_thể/A :/CH P(g/Np ,/CH 0)/Np \\le/Np P(g/Np ,/CH 1)/Np \\le/Np P(g/Np ,/CH 2)/Np \\le/Np \\cdots/Np \\le/Np P(g/Np ,/CH L-1)/Np \\le/Np P(g/Np ,/CH L)_Ta/Np sẽ/R không/R chứng_minh/V điều/N này/P ở/E đây/P ,/CH độc_giả/N có_thể/R tự/P thuyết_phục/V rằng/C điều/N này/P là/V đúng/A ./CH\nChia_để_trị/Np Để_ý/V rằng/C để/E tính/V F(g/Np ,/CH i)/Np ,/CH ta/P chỉ_cần/Np quan_tâm/V tới/E hàng/N trước/E F(g-1)/Np của/E ma_trận/N :/CH F(g-1/Np ,/CH 0)/Np ,/CH F(g-1/Np ,/CH 1)/Np ,/CH ./CH ./CH ./CH\n,/CH F(g-1/Np ,/CH L)/Np ./CH\nNhư_vậy/X ,/CH ta/P có_thể/R tính/V hàng/N F(g)/Np theo/V thứ_tự/N bất_kỳ/A ./CH\nÝ_tưởng/N là/V với/E hàng/N g/Nu ,/CH trước_hết/N ta/P tính/V F(g/Np ,/CH mid)/Np và/Cc P(g/Np ,/CH mid)/Np với/E mid=L/Np ,/CH sau_đó/Np sử_dụng/V tính_chất/N nêu/V trên/E P(g/Np ,/CH i)/Np \\le/Np P(g/Np ,/CH mid)/Np với/E i/M lt;/Np mid/Np và/Cc P(g/Np ,/CH i)/Np \\ge/Np P(g/Np ,/CH mid)/Np với/E i/M gt;/Np mid/Np để/E đi/V gọi/V đệ_quy/Np đi/V tính/V hai/M nửa/M còn_lại/Np ./CH\ninclude/Np lt;iostreamgt;/Np const/Np int/Np MAXL/Np =/CH 8008/Np ;/CH const/Np int/Np MAXG/Np =/CH 808/Np ;/CH const/Np long_long/Np INF/Np =/CH (/CH long_long/Np )/CH 1e18/Np ;/CH using/Np namespace/Np std/Np ;/CH long_long/Np F_MAXG_MAXL/Np ,/CH sum/Np MAXL/Np ,/CH C_MAXL/Np ;/CH int/Np P_MAXG_MAXL/Np ;/CH long_long/Np cost/Np (/CH int/Np i/M ,/CH int/Np j/Np )/CH if/Np (/CH i/M gt;/Np j/Np )/CH return/Np 0/M ;/CH return/Np (/CH sum/Np j/Np -/CH sum/Np i/M -/CH 1/M )/CH (/CH j/Np -/CH i/M +/CH 1/M );/CH void/Np solve/Np (/CH int/Np g/Nu ,/CH int/Np L/Ny ,/CH int/Np R/Np ,/CH int/Np optL/Np ,/CH int/Np optR/Np )/CH if/Np (/CH L/Ny gt;/Np R/Np )/CH return/Np ;/CH int/Np mid/Np =/CH (/CH L/Ny +/CH R/Np )/CH //CH 2/M ;/CH F/Np g/Nu mid/Np =/CH INF/Np ;/CH for/Np (/CH int/Np i/M =/CH optL/Np ;/CH i/M lt;=/Np optR/Np ;/CH ++/Np i/M )/CH long_long/Np new_cost/Np =/CH F/Np g/Nu -/CH 1/M i/M +/CH cost/Np (/CH i/M +/CH 1/M ,/CH mid/Np );/CH if/Np (/CH F/Np g/Nu mid/Np gt;/Np new_cost/Np )/CH F/Np g/Nu mid/Np =/CH new_cost/Np ;/CH P/Ny g/Nu mid/Np =/CH i/M ;/CH solve/Np (/CH g/Nu ,/CH L/Ny ,/CH mid/Np -/CH 1/M ,/CH optL/Np ,/CH P/Ny g/Nu mid/Np );/CH solve/Np (/CH g/Nu ,/CH mid/Np +/CH 1/M ,/CH R/Np ,/CH P/Ny g/Nu mid/Np ,/CH optR/Np );/CH int/Np main/Np ()/Np int/Np G/Nu ,/CH L/Ny ;/CH cin/Np gt;gt;/Np L/Ny gt;gt;/Np G/Nu ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np L/Ny ;/CH ++/Np i/M )/CH cin/Np gt;gt;/Np C/Ni i/M ;/CH sum/Np i/M =/CH sum/Np i/M -/CH 1/M +/CH C/Ni i/M ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np L/Ny ;/CH ++/Np i/M )/CH F/Np 1/M i/M =/CH cost/Np (/CH 1/M ,/CH i/M );/CH for/Np (/CH int/Np g/Nu =/CH 2/M ;/CH g/Nu lt;=/Np G/Nu ;/CH ++/Np g/Nu )/CH solve/Np (/CH g/Nu ,/CH 1/M ,/CH L/Ny ,/CH 1/M ,/CH L/Ny );/CH cout/Np lt;lt;/Np F_G_L/Np lt;lt;/Np endl/Np ;/CH return/Np 0/M ;/CH Chú_ý/V rằng/C ta/P không_thể/R đảm_bảo/V rằng/C P(g/Np ,/CH mid)/Np chia/V đôi/M đoạn/Nc optL/Np ,/CH optR/Np ,/CH thực_tế/N một_vài/L hàm/Np solve()/Np sẽ/R chạy/V chậm/A hơn/A nhiều/A hàm/Np solve()/Np khác/A ./CH\nTuy_nhiên/C ta/P có_thể/R chứng_minh/V được/V ,/CH xét/V về/E tổng_thế/Np thuật_toán/N này/P chạy/V đủ/A nhanh/A ./CH\nMỗi/L lần_ta/Np chia/V đôi/M đoạn/Nc L/Ny ,/CH R/Np ,/CH nên/C ta/P sẽ/R đảm_bảo/V có/V tối_đa/A O(log(L))/Np tầng/N đệ_quy/Np ,/CH như_vậy/X với/E mỗi/L hàng/N g/Nu ,/CH ta/P chỉ/R mất/V O(L/Np logL)/Np để/E tính/V ./CH\nToàn_bộ/L thuật_toán/N có/V độ/N phức_tạp/A là/V O(G_L/Np logL)/Np ./CH\nĐiều_kiện/N để/E Chia_để_trị/Np đúng/A Điều_kiện/N theo/V best/Np Như/C ở/E bài/N Hai/M nhà_máy/N CEOI/Np 2004/M :/CH Nếu/C best(i)/Np \\le/Np best(i+1)/Np ,/CH ta/P có_thể/R sử_dụng/V chia_để_trị/Np ./CH\nĐiều_kiện/N theo/V cost/Np Nếu/C hàm_cost/Np thoả_mãn/V quadrangle/Np inequalities/Np :/CH cost(a/Np ,/CH d)/Np +/CH cost(b/Np ,/CH c)/Np \\ge/Np cost(a/Np ,/CH c)/Np +/CH cost(b/Np ,/CH d)/Np với/E mọi/L a/Ni lt;/Np b/Ni lt;/Np c/Ni lt;/Np d/Ny ,/CH ta/P cũng/R có_thể/R sử_dụng/V QHĐ/Np chia_để_trị/Np ./CH\nBài/N luyện_tập/V F/Np -/CH ACM_ICPC_Vietnam_Regional/Np 2017/Np Hackerrank/Np -/CH Mining/Np\n", "title": "Một số kĩ thuật tối ưu hoá thuật toán Quy Hoạch Động\n", "link": "http://vnoi.info/wiki/algo/dp/Mot-so-ky-thuat-toi-uu-hoa-thuat-toan-Quy-Hoach-Dong\n"}