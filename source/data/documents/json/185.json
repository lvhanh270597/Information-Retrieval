{"content": "Tác_giả : Vũ_chipchip Phúc_Hoàng_Bạn cảm_thấy lo_sợ trong những kì_thi chấm offline ?\nBạn bình_thường làm_bài rất tốt nhưng khi chấm offline lại bị điểm kém vì sai những lỗi vớ_vẩn ?\nBạn code sai một bài rất khó và debug mãi không được vì không có test sai ?\nTất_cả những vấn_đề đó sẽ được giải_quyết đơn_giản với một chương_trình chấm_bài tự_động , giúp bạn tự kiểm_tra bài mình và phát_hiện test sai .\nBài viết này sẽ giới_thiệu với bạn những bước cơ_bản nhất để viết trình chấm - một kĩ_thuật mà bạn nên thành_thạo trước_khi thi HSG Quốc_gia .\nTable of_Contents Trình chấm là gì ?\nTại_sao nên viết trình chấm ?\nKhi_nào nên viết trình chấm ?\nThành_phần của một bộ trình chấm Lời_giải 1 : Lời_giải 2 : Trình sinh test : Trình so test : Ví_dụ : Bài_VMELLIP Lời_giải 1 : Lời_giải 2 : Trình sinh test + Trình so test : Làm_sao để viết trình chấm một_cách hiệu_quả ?\nTemplate dành cho C++ : Template dành cho Pascal : Template dùng Shell script Luyện_tập viết trình chấm Trình chấm là gì ?\nTrình chấm là một bộ chương_trình giúp bạn tự_động sinh_ra các test input ngẫu_nhiên và tự_động chạy hai chương_trình lời_giải khác_nhau với các input đó để so_sánh output .\nVề cơ_bản , trình chấm gồm 4 chương_trình là : lời_giải 1 , lời_giải 2 , trình sinh test , và trình so test .\nThường thì lời_giải 1 là cách chuẩn bạn sẽ sử_dụng , còn lời_giải 2 là một_cách có hiệu_quả kém hơn nhưng vẫn chính_xác .\nTại_sao nên viết trình chấm ?\nViết trình chấm là một trong những cách kiểm_tra bài của mình đáng_tin cậy nhất .\nVới những kì_thi chấm offline , ví_dụ như VOI , việc sai_sót nhỏ rất khó tránh khỏi khi ta không_thể biết kết_quả trong_khi thi .\nVậy_thì , nếu_như bài của bạn không được chấm với bộ test của ban tổ_chức , bạn hãy tự chấm nó với bộ test ngẫu_nhiên mà mình sinh .\nNếu bài của bạn đúng_với các test ngẫu_nhiên , bạn có_thể tạm yên_tâm là bài sẽ được điểm_cao và không bị những sai_sót \"chí mạng\" dẫn đến bài bị 0 điểm .\nTrình chấm yêu_cầu một trình \"chuẩn\" và một trình \"trâu\" , và so_sánh hai chương_trình này với_nhau .\nNếu trình chấm của bạn phát_hiện được một test mà kết_quả hai chương_trình không khớp nhau , trình chuẩn hoặc trình trâu của bạn sẽ sai , và bạn hãy sử_dụng test đó để debug .\nCòn nếu tất_cả các test đều đúng , bạn có_thể tạm yên_tâm , vì mặc_dù có_thể cả hai lời_giải cùng sai , nhưng cùng sai giống_hệt nhau thì rất khó .\nĐối_với những kì_thi chấm online , hoặc đơn_giản là bạn làm_bài online trên mạng , trình chấm cũng rất hữu_ích trong việc tìm test sai .\nChẳng_hạn khi bạn code một bài cấu_trúc dữ_liệu khó , nộp bài thấy bị 0 điểm , thay_vì việc ngồi debug bằng mắt hãy thử code một bộ trình chấm để giúp tìm test sai .\nVới test sai tìm được bạn sẽ dễ_dàng debug hơn rất nhiều .\nNhiều người ngại viết trình chấm vì cho_rằng làm_vậy mất thời_gian .\nTuy_nhiên , khi đã thành_thạo thì viết một bộ trình chấm cho một bài_chỉ mất khoảng 10 phút , nếu_như bài đó có_thể làm trâu và sinh test ngẫu_nhiên một_cách dễ_dàng .\nLợi_thế về_mặt tâm_lí khi đã biết chắc bài_làm của mình đúng sẽ giúp bạn làm_bài hiệu_quả hơn , thực_tế sẽ tiết_kiệm được thời_gian so_với khi_không kiểm_tra bài .\nTương_tự , viết trình chấm để debug những bài code khó đôi_khi hiệu_quả hơn nhiều so_với việc debug bằng mắt , tiết_kiệm được rất nhiều thời_gian .\nKhi_nào nên viết trình chấm ?\nLời_khuyên của tác_giả là : Hãy viết trình chấm bất_cứ lúc nào mà bài có_thể làm trâu và sinh test ngẫu_nhiên dễ_dàng .\nCó_một số bài mà cách trâu còn khó hơn cách chuẩn thì_có thể tạm bỏ_qua , tuy_nhiên nếu có thời_gian vẫn nên viết trình chấm sau đấy để đảm_bảo chắc_chắn .\nThành_phần của một bộ trình chấm Lưu_ý : Bài viết này hướng_dẫn cho Pascal/C++ trên hệ_điều_hành Windows .\nVới các ngôn_ngữ khác hoặc chạy trên hệ_điều_hành khác , một_số lệnh sẽ thay_đổi , tuy_nhiên ý_tưởng vẫn tương_tự .\nMột bộ trình chấm gồm có 4 thành_phần : Lời_giải 1 , lời_giải 2 , trình sinh test , trình so test .\nLời_giải 1 : Thường là code chuẩn của bạn .\nDù viết trình chấm hay_không thì phần này bắt_buộc phải có nên cũng không cần phải nói nhiều .\nTrong bài viết này , ta sẽ giả_sử input của trình lời_giải 1 là . inp , output là . out .\nLời_giải 2 : Thường là code trâu , hoặc_là một_cách giải khác , miễn_là ra đúng đáp_số .\nHãy chọn cách dễ code nhất , dễ đúng nhất có_thể , vì thời_gian chạy thực_ra không quan_trọng lắm khi bạn chỉ_cần sinh test nhỏ để kiểm_tra .\nTrong bài viết này , ta sẽ giả_sử input của trình lời_giải 2 là . inp , output là . ans .\nTrình sinh test : Chương_trình này có nhiệm_vụ sinh input ngẫu_nhiên vào file . inp .\nĐể_cho hàm ngẫu_nhiên được thay_đổi khi chương_trình khởi_động , sử_dụng lệnh randomize trong Pascal và srand(time(NULL)) trong C++ .\nLưu_ý : Lệnh srand(time(NULL)) trong C++ tính random theo giây , tức_là sau 1 giây nó mới thay_đổi random seed .\nVì_vậy nhiều khả_năng các test random sinh_ra liên_tục sẽ bị giống nhau .\nĐể khắc_phục điều này , ta có_thể lồng trình sinh test vào trình so test chứ không tách ra cho chạy riêng nữa .\nVới_Pascal thì không_phải lo về điều này , vì randomize thay_đổi random seed theo mili giây .\nTrình so test : Chương_trình này có nhiệm_vụ duyệt N lần , với N là số test cần so , mỗi lần thì chạy trình sinh test trước , xong đến lần_lượt lời_giải 1 và lời_giải 2 .\nSau khi chạy xong , ta có được file . out và . ans tương_ứng là kết_quả của hai chương_trình lời_giải , và việc còn_lại là so_sánh 2 file này với_nhau .\nNếu kết_quả trùng nhau (hoặc thỏa_mãn điều_kiện đề_bài với những bài có nhiều đáp số) , ta coi_như test đó đúng và chuyển đến test sau .\nNếu khác_nhau , ta in ra sai và dừng chương_trình lại luôn , và ta có 3 file . inp , . out , . ans là dữ_liệu của test sai .\nĐể chạy file , ta sử_dụng exec( . exe , ) trong Pascal và system(\" . exe\") trong C++ .\nVí_dụ : Bài_VMELLIP_Đây là một bài cấu_trúc dữ_liệu rất khó , thuộc đề thi VNOI_Marathon 2015 .\nBài viết xin được lấy code của tanphatls987 được 90 điểm làm ví_dụ .\nLời_giải 1 : Link code Đây là code của tanphatls987 , được thêm 2 dòng freopen vào để mở file .\nCode gốc không có 2 dòng này vì nộp trên SPOJ sử_dụng Standard_Input / Output .\nLời_giải 2 : Link code Đây là code trâu với độ phức_tạp O(N_M) , làm y_như những gì đề_bài bảo .\nTrình sinh test + Trình so test : Link code Vì đây là code C++ nên tác_giả kết_hợp trình sinh test với trình so test để_cho hàm_random chạy không bị trùng .\nCode sinh test từ dòng 11 đến dòng 37 .\nỞ đây , ta duyệt 100 lần ứng với 100 test , mỗi lần duyệt ta sinh ngẫu_nhiên ra file input vmellip . inp .\nSau_đó , ta lần_lượt chạy hai chương_trình ở trên : system(\"vmellip . exe\") và system(\"vmellip_trau . exe\") (lời giải 2 đặt_tên là vmellip_trau ) .\nSau_đó ta sử_dụng lệnh system(\"fc vmellip . out vmellip . ans\") , có nhiệm_vụ so hai file text vmellip . out và vmellip . ans với_nhau .\nNếu hai file hoàn_toàn khớp nhau , lệnh system sẽ trả về exit code là 0 , còn không sẽ trả về exit code là 1 .\nChạy thử chương_trình này , ta có_thể sinh được một test sai như_sau : 1 5 6 6 3 1 1 8 1 1 1 1 6 1 1 1 1 1 9 2 1 1 8 9 8 Trong đó , lời_giải 1 ra output là : 1 Lời_giải 2 ra output là : 0 Giới_hạn test (dòng 3) được đặt nhỏ , mục_đích là để sinh_ra test sai nhỏ dễ debug hơn .\nSau khi code đã đúng , có_thể tăng giới_hạn lên để kiểm_tra mạnh hơn .\nLàm_sao để viết trình chấm một_cách hiệu_quả ?\nQua ví_dụ trên , bạn có_thể cảm_thấy khá ngại khi code trình so test khá dài , code có_thể mất thời_gian .\nTuy_nhiên , ta hoàn_toàn có_thể viết code so test thành một template để ứng_dụng cho tất_cả các bài ! Với một template so test có_sẵn , việc còn_lại của ta chỉ là code phần sinh test và trình trâu , nếu_như đã làm_quen với trình chấm thì chỉ mất khoảng 10 phút để viết .\nTác_giả xin được chia_sẻ với các bạn các template trình chấm do chính mình sử_dụng .\nTemplate dành cho C++ : include lt;bits/stdc++ . hgt; using namespace std ; // Tên chương_trình const string NAME = \"template\" ; // Số test kiểm_tra const int NTEST = 100 ; // Viết lại hàm_random để sử_dụng cho thuận_tiện .\nHàm_random này sinh ngẫu_nhiên số trong phạm_vi long_long , số sinh_ra gt;= l và lt;= h .\nlong_long Rand ( long_long l , long_long h ) return l + (( long_long ) rand () ( RAND_MAX + 1 ) ( RAND_MAX + 1 ) ( RAND_MAX + 1 ) + ( long_long ) rand () ( RAND_MAX + 1 ) ( RAND_MAX + 1 ) + ( long_long ) rand () ( RAND_MAX + 1 ) + rand ()) % ( h - l + 1 ); int main () srand ( time ( NULL )); for ( int iTest = 1 ; iTest lt;= NTEST ; iTest ++ ) ofstream inp (( NAME + \" . inp\" ) .\nc_str ()); // Code phần sinh test ở đây inp .\nclose (); // Nếu dùng Linux thì \" . /\" + Tên chương_trình system (( NAME + \" . exe\" ) .\nc_str ()); system (( NAME + \"_trau . exe\" ) .\nc_str ()); // Nếu dùng linux thì thay fc bằng diff if ( system (( \"fc \" + NAME + \" . out \" + NAME + \" . ans\" ) .\nc_str ()) ! = 0 ) cout lt;lt; \"Test \" lt;lt; iTest lt;lt; \" : WRONG ! \\n \" ; return 0 ; cout lt;lt; \"Test \" lt;lt; iTest lt;lt; \" : CORRECT ! \\n \" ; return 0 ; Template dành cho Pascal : mode objfpc // Thư_viện dos_chứa lệnh exec uses dos ; const // Tên chương_trình NAM = template ; // Số test kiểm_tra NTEST = 100 ; var iTest : integer ; begin for iTest : = 1 to NTEST do begin // Pascal không gặp vấn_đề với randomize , vì_vậy ta có_thể tách trình sinh test riêng ra .\nExec ( NAM + _sinhtest . exe , ); Exec ( NAM + . exe , ); Exec ( NAM + _trau . exe , ); Exec ( fc , NAM + . out + NAM + . ans ); if DosExitCode lt;gt; 0 then begin writeln ( Test , iTest , : WRONG ! ); exit ; end ; writeln ( Test , iTest , : CORRECT ! ); end ; end .\nTemplate dùng Shell script Giả_sử bạn có 2 code khác_nhau , đã dịch ra 2 file executable là prog1 và prog2 .\nBạn viết thêm 1 trình sinh test và dịch ra file gen , gen nhận 1 argument là randomized seed (VD với C++ bạn dùng srand(atoi(argv1)) ) : Sinh 100 test for (( i = 1;ilt; = 100;i++ )) ; do Sinh input với seed i và lưu vào in_tmp . /gen i gt; in_tmp So_sánh output của 2 code , nếu output khác_nhau thì dừng lại .\nKhi đó ta có file in_tmp chính là input mà 2 code chạy ra kết_quả khác_nhau .\ndiff lt; ( . /prog1 lt; in_tmp ) lt; ( . /prog2 lt; in_tmp ) break done Luyện_tập viết trình chấm Để viết trình chấm thành_thạo , hãy thử viết trình chấm với tất_cả các bài mà bạn luyện_tập , cho_đến khi_không còn ngại viết trình chấm nữa thì lúc_đó bạn sẽ thành_công .\nHãy đặt ra mục_tiêu là một sub AC với tất_cả các bài mình làm với sự hỗ_trợ của trình chấm .\nMột_khi đã thành_thạo tuyệt_kĩ này , bạn sẽ dễ_dàng chinh_phục những kì_thi chấm offline và không bao_giờ phải lo_lắng làm sai nữa .\n\n", "tagged": "Tác_giả/N :/CH Vũ_chipchip/Np Phúc_Hoàng_Bạn/Np cảm_thấy/V lo_sợ/V trong/E những/L kì_thi/Np chấm/V offline/Np ?/CH\nBạn/N bình_thường/A làm_bài/Np rất/R tốt/A nhưng/C khi/N chấm/V offline/Np lại/R bị/V điểm/N kém/A vì/E sai/A những/L lỗi/N vớ_vẩn/V ?/CH\nBạn/N code/Np sai/A một/M bài/N rất/R khó/A và/Cc debug/Np mãi/R không/R được/V vì/E không/R có/V test/Np sai/A ?/CH\nTất_cả/P những/L vấn_đề/N đó/P sẽ/R được/V giải_quyết/V đơn_giản/A với/E một/M chương_trình/N chấm_bài/Np tự_động/A ,/CH giúp/V bạn/N tự/P kiểm_tra/V bài/N mình/P và/Cc phát_hiện/V test/Np sai/A ./CH\nBài/N viết/V này/P sẽ/R giới_thiệu/V với/E bạn/N những/L bước/V cơ_bản/A nhất/A để/E viết/V trình/V chấm/V -/CH một/M kĩ_thuật/N mà/C bạn/N nên/C thành_thạo/A trước_khi/Np thi/V HSG/Np Quốc_gia/N ./CH\nTable/Np of_Contents/Np Trình/V chấm/V là/V gì/P ?/CH\nTại_sao/X nên/C viết/V trình/V chấm/V ?/CH\nKhi_nào/Np nên/C viết/V trình/V chấm/V ?/CH\nThành_phần/N của/E một/M bộ/N trình/V chấm/V Lời_giải/Np 1/M :/CH Lời_giải/Np 2/M :/CH Trình/V sinh/V test/Np :/CH Trình/V so/V test/Np :/CH Ví_dụ/C :/CH Bài_VMELLIP/Np Lời_giải/Np 1/M :/CH Lời_giải/Np 2/M :/CH Trình/V sinh/V test/Np +/CH Trình/V so/V test/Np :/CH Làm_sao/X để/E viết/V trình/V chấm/V một_cách/N hiệu_quả/N ?/CH\nTemplate/Np dành/V cho/E C++/Np :/CH Template/Np dành/V cho/E Pascal/Np :/CH Template/Np dùng/V Shell/Np script/Np Luyện_tập/V viết/V trình/V chấm/V Trình/V chấm/V là/V gì/P ?/CH\nTrình/V chấm/V là/V một/M bộ/N chương_trình/N giúp/V bạn/N tự_động/A sinh_ra/V các/L test/Np input/Np ngẫu_nhiên/A và/Cc tự_động/A chạy/V hai/M chương_trình/N lời_giải/Np khác_nhau/Np với/E các/L input/Np đó/P để/E so_sánh/V output/Np ./CH\nVề/E cơ_bản/A ,/CH trình/V chấm/V gồm/V 4/M chương_trình/N là/V :/CH lời_giải/Np 1/M ,/CH lời_giải/Np 2/M ,/CH trình/V sinh/V test/Np ,/CH và/Cc trình/V so/V test/Np ./CH\nThường/R thì/C lời_giải/Np 1/M là/V cách/N chuẩn/N bạn/N sẽ/R sử_dụng/V ,/CH còn/R lời_giải/Np 2/M là/V một_cách/N có/V hiệu_quả/N kém/A hơn/A nhưng/C vẫn/R chính_xác/A ./CH\nTại_sao/X nên/C viết/V trình/V chấm/V ?/CH\nViết/V trình/V chấm/V là/V một/M trong/E những/L cách/N kiểm_tra/V bài/N của/E mình/P đáng_tin/Np cậy/Np nhất/A ./CH\nVới/E những/L kì_thi/Np chấm/V offline/Np ,/CH ví_dụ/C như/C VOI/N ,/CH việc/N sai_sót/N nhỏ/A rất/R khó/A tránh/V khỏi/V khi/N ta/P không_thể/R biết/V kết_quả/N trong_khi/Np thi/V ./CH\nVậy_thì/X ,/CH nếu_như/C bài/N của/E bạn/N không/R được/V chấm/V với/E bộ/N test/Np của/E ban/N tổ_chức/V ,/CH bạn/N hãy/R tự/P chấm/V nó/P với/E bộ/N test/Np ngẫu_nhiên/A mà/C mình/P sinh/V ./CH\nNếu/C bài/N của/E bạn/N đúng_với/Np các/L test/Np ngẫu_nhiên/A ,/CH bạn/N có_thể/R tạm/A yên_tâm/A là/V bài/N sẽ/R được/V điểm_cao/Np và/Cc không/R bị/V những/L sai_sót/N \"chí/Np mạng\"/Np dẫn/V đến/E bài/N bị/V 0/M điểm/N ./CH\nTrình/V chấm/V yêu_cầu/V một/M trình/V \"chuẩn\"/Np và/Cc một/M trình/V \"trâu\"/Np ,/CH và/Cc so_sánh/V hai/M chương_trình/N này/P với_nhau/Np ./CH\nNếu/C trình/V chấm/V của/E bạn/N phát_hiện/V được/V một/M test/Np mà/C kết_quả/N hai/M chương_trình/N không/R khớp/N nhau/N ,/CH trình/V chuẩn/N hoặc/Cc trình/V trâu/N của/E bạn/N sẽ/R sai/A ,/CH và/Cc bạn/N hãy/R sử_dụng/V test/Np đó/P để/E debug/Np ./CH\nCòn/R nếu/C tất_cả/P các/L test/Np đều/R đúng/A ,/CH bạn/N có_thể/R tạm/A yên_tâm/A ,/CH vì/E mặc_dù/C có_thể/R cả/P hai/M lời_giải/Np cùng/A sai/A ,/CH nhưng/C cùng/A sai/A giống_hệt/A nhau/N thì/C rất/R khó/A ./CH\nĐối_với/E những/L kì_thi/Np chấm/V online/Vb ,/CH hoặc/Cc đơn_giản/A là/V bạn/N làm_bài/Np online/Vb trên/E mạng/N ,/CH trình/V chấm/V cũng/R rất/R hữu_ích/A trong/E việc/N tìm/V test/Np sai/A ./CH\nChẳng_hạn/X khi/N bạn/N code/Np một/M bài/N cấu_trúc/N dữ_liệu/N khó/A ,/CH nộp/V bài/N thấy/V bị/V 0/M điểm/N ,/CH thay_vì/X việc/N ngồi/V debug/Np bằng/E mắt/N hãy/R thử/V code/Np một/M bộ/N trình/V chấm/V để/E giúp/V tìm/V test/Np sai/A ./CH\nVới/E test/Np sai/A tìm/V được/V bạn/N sẽ/R dễ_dàng/A debug/Np hơn/A rất/R nhiều/A ./CH\nNhiều/A người/N ngại/V viết/V trình/V chấm/V vì/E cho_rằng/Np làm_vậy/Np mất/V thời_gian/N ./CH\nTuy_nhiên/C ,/CH khi/N đã/R thành_thạo/A thì/C viết/V một/M bộ/N trình/V chấm/V cho/E một/M bài_chỉ/Np mất/V khoảng/N 10/M phút/Nu ,/CH nếu_như/C bài/N đó/P có_thể/R làm/V trâu/N và/Cc sinh/V test/Np ngẫu_nhiên/A một_cách/N dễ_dàng/A ./CH\nLợi_thế/N về_mặt/Np tâm_lí/N khi/N đã/R biết/V chắc/V bài_làm/Np của/E mình/P đúng/A sẽ/R giúp/V bạn/N làm_bài/Np hiệu_quả/N hơn/A ,/CH thực_tế/N sẽ/R tiết_kiệm/V được/V thời_gian/N so_với/Np khi_không/N kiểm_tra/V bài/N ./CH\nTương_tự/A ,/CH viết/V trình/V chấm/V để/E debug/Np những/L bài/N code/Np khó/A đôi_khi/R hiệu_quả/N hơn/A nhiều/A so_với/Np việc/N debug/Np bằng/E mắt/N ,/CH tiết_kiệm/V được/V rất/R nhiều/A thời_gian/N ./CH\nKhi_nào/Np nên/C viết/V trình/V chấm/V ?/CH\nLời_khuyên/Np của/E tác_giả/N là/V :/CH Hãy/R viết/V trình/V chấm/V bất_cứ/R lúc/N nào/P mà/C bài/N có_thể/R làm/V trâu/N và/Cc sinh/V test/Np ngẫu_nhiên/A dễ_dàng/A ./CH\nCó_một/Np số/N bài/N mà/C cách/N trâu/N còn/R khó/A hơn/A cách/N chuẩn/N thì_có/X thể/N tạm/A bỏ_qua/V ,/CH tuy_nhiên/C nếu/C có/V thời_gian/N vẫn/R nên/C viết/V trình/V chấm/V sau/E đấy/P để/E đảm_bảo/V chắc_chắn/A ./CH\nThành_phần/N của/E một/M bộ/N trình/V chấm/V Lưu_ý/V :/CH Bài/N viết/V này/P hướng_dẫn/V cho/E Pascal/Np trên/E hệ_điều_hành/Np Windows/Np ./CH\nVới/E các/L ngôn_ngữ/N khác/A hoặc/Cc chạy/V trên/E hệ_điều_hành/Np khác/A ,/CH một_số/L lệnh/N sẽ/R thay_đổi/V ,/CH tuy_nhiên/C ý_tưởng/N vẫn/R tương_tự/A ./CH\nMột/M bộ/N trình/V chấm/V gồm/V có/V 4/M thành_phần/N :/CH Lời_giải/Np 1/M ,/CH lời_giải/Np 2/M ,/CH trình/V sinh/V test/Np ,/CH trình/V so/V test/Np ./CH\nLời_giải/Np 1/M :/CH Thường/R là/V code/Np chuẩn/N của/E bạn/N ./CH\nDù/C viết/V trình/V chấm/V hay_không/Np thì/C phần/N này/P bắt_buộc/V phải/V có/V nên/C cũng/R không/R cần/V phải/V nói/V nhiều/A ./CH\nTrong/E bài/N viết/V này/P ,/CH ta/P sẽ/R giả_sử/Np input/Np của/E trình/V lời_giải/Np 1/M là/V ./CH inp/Np ,/CH output/Np là/V ./CH out/Np ./CH\nLời_giải/Np 2/M :/CH Thường/R là/V code/Np trâu/N ,/CH hoặc_là/Np một_cách/N giải/N khác/A ,/CH miễn_là/E ra/V đúng/A đáp_số/Np ./CH\nHãy/R chọn/V cách/N dễ/A code/Np nhất/A ,/CH dễ/A đúng/A nhất/A có_thể/R ,/CH vì/E thời_gian/N chạy/V thực_ra/X không/R quan_trọng/A lắm/R khi/N bạn/N chỉ_cần/Np sinh/V test/Np nhỏ/A để/E kiểm_tra/V ./CH\nTrong/E bài/N viết/V này/P ,/CH ta/P sẽ/R giả_sử/Np input/Np của/E trình/V lời_giải/Np 2/M là/V ./CH inp/Np ,/CH output/Np là/V ./CH ans/Np ./CH\nTrình/V sinh/V test/Np :/CH Chương_trình/N này/P có/V nhiệm_vụ/N sinh/V input/Np ngẫu_nhiên/A vào/E file/Np ./CH inp/Np ./CH\nĐể_cho/Np hàm/Np ngẫu_nhiên/A được/V thay_đổi/V khi/N chương_trình/N khởi_động/V ,/CH sử_dụng/V lệnh/N randomize/Np trong/E Pascal/Np và/Cc srand(time(NULL))/Np trong/E C++/Np ./CH\nLưu_ý/V :/CH Lệnh/N srand(time(NULL))/Np trong/E C++/Np tính/V random/Np theo/V giây/Nu ,/CH tức_là/V sau/E 1/M giây/Nu nó/P mới/R thay_đổi/V random/Np seed/Np ./CH\nVì_vậy/C nhiều/A khả_năng/N các/L test/Np random/Np sinh_ra/V liên_tục/A sẽ/R bị/V giống/N nhau/N ./CH\nĐể/E khắc_phục/V điều/N này/P ,/CH ta/P có_thể/R lồng/N trình/V sinh/V test/Np vào/E trình/V so/V test/Np chứ/C không/R tách/V ra/V cho/E chạy/V riêng/A nữa/R ./CH\nVới_Pascal/Np thì/C không_phải/Np lo/V về/E điều/N này/P ,/CH vì/E randomize/Np thay_đổi/V random/Np seed/Np theo/V mili/Np giây/Nu ./CH\nTrình/V so/V test/Np :/CH Chương_trình/N này/P có/V nhiệm_vụ/N duyệt/V N/Ny lần/N ,/CH với/E N/Ny là/V số/N test/Np cần/V so/V ,/CH mỗi/L lần/N thì/C chạy/V trình/V sinh/V test/Np trước/E ,/CH xong/V đến/E lần_lượt/R lời_giải/Np 1/M và/Cc lời_giải/Np 2/M ./CH\nSau/E khi/N chạy/V xong/V ,/CH ta/P có/V được/V file/Np ./CH out/Np và/Cc ./CH ans/Np tương_ứng/V là/V kết_quả/N của/E hai/M chương_trình/N lời_giải/Np ,/CH và/Cc việc/N còn_lại/Np là/V so_sánh/V 2/M file/Np này/P với_nhau/Np ./CH\nNếu/C kết_quả/N trùng/V nhau/N (hoặc/Np thỏa_mãn/V điều_kiện/N đề_bài/Np với/E những/L bài/N có/V nhiều/A đáp/V số)/Np ,/CH ta/P coi_như/Np test/Np đó/P đúng/A và/Cc chuyển/V đến/E test/Np sau/E ./CH\nNếu/C khác_nhau/Np ,/CH ta/P in/V ra/V sai/A và/Cc dừng/V chương_trình/N lại/R luôn/R ,/CH và/Cc ta/P có/V 3/M file/Np ./CH inp/Np ,/CH ./CH out/Np ,/CH ./CH ans/Np là/V dữ_liệu/N của/E test/Np sai/A ./CH\nĐể/E chạy/V file/Np ,/CH ta/P sử_dụng/V exec(/Np ./CH exe/Np ,/CH )/CH trong/E Pascal/Np và/Cc system(\"/Np ./CH exe\")/Np trong/E C++/Np ./CH\nVí_dụ/C :/CH Bài_VMELLIP_Đây/Np là/V một/M bài/N cấu_trúc/N dữ_liệu/N rất/R khó/A ,/CH thuộc/V đề/V thi/V VNOI_Marathon/Np 2015/M ./CH\nBài/N viết/V xin/V được/V lấy/V code/Np của/E tanphatls987/Np được/V 90/M điểm/N làm/V ví_dụ/C ./CH\nLời_giải/Np 1/M :/CH Link/Np code/Np Đây/P là/V code/Np của/E tanphatls987/Np ,/CH được/V thêm/V 2/M dòng/N freopen/Np vào/E để/E mở/V file/Np ./CH\nCode/Np gốc/N không/R có/V 2/M dòng/N này/P vì/E nộp/V trên/E SPOJ/Np sử_dụng/V Standard_Input/Np //CH Output/Np ./CH\nLời_giải/Np 2/M :/CH Link/Np code/Np Đây/P là/V code/Np trâu/N với/E độ/N phức_tạp/A O(N_M)/Np ,/CH làm/V y_như/A những/L gì/P đề_bài/Np bảo/V ./CH\nTrình/V sinh/V test/Np +/CH Trình/V so/V test/Np :/CH Link/Np code/Np Vì/E đây/P là/V code/Np C++/Np nên/C tác_giả/N kết_hợp/V trình/V sinh/V test/Np với/E trình/V so/V test/Np để_cho/Np hàm_random/Np chạy/V không/R bị/V trùng/V ./CH\nCode/Np sinh/V test/Np từ/E dòng/N 11/M đến/E dòng/N 37/M ./CH\nỞ/E đây/P ,/CH ta/P duyệt/V 100/M lần/N ứng/V với/E 100/M test/Np ,/CH mỗi/L lần/N duyệt/V ta/P sinh/V ngẫu_nhiên/A ra/V file/Np input/Np vmellip/Np ./CH inp/Np ./CH\nSau_đó/Np ,/CH ta/P lần_lượt/R chạy/V hai/M chương_trình/N ở/E trên/E :/CH system(\"vmellip/Np ./CH exe\")/Np và/Cc system(\"vmellip_trau/Np ./CH exe\")/Np (lời/Np giải/N 2/M đặt_tên/Np là/V vmellip_trau/Np )/CH ./CH\nSau_đó/Np ta/P sử_dụng/V lệnh/N system(\"fc/Np vmellip/Np ./CH out/Np vmellip/Np ./CH ans\")/Np ,/CH có/V nhiệm_vụ/N so/V hai/M file/Np text/Np vmellip/Np ./CH out/Np và/Cc vmellip/Np ./CH ans/Np với_nhau/Np ./CH\nNếu/C hai/M file/Np hoàn_toàn/A khớp/N nhau/N ,/CH lệnh/N system/Np sẽ/R trả/V về/E exit/Np code/Np là/V 0/M ,/CH còn/R không/R sẽ/R trả/V về/E exit/Np code/Np là/V 1/M ./CH\nChạy/V thử/V chương_trình/N này/P ,/CH ta/P có_thể/R sinh/V được/V một/M test/Np sai/A như_sau/Np :/CH 1/M 5/M 6/M 6/M 3/M 1/M 1/M 8/M 1/M 1/M 1/M 1/M 6/M 1/M 1/M 1/M 1/M 1/M 9/M 2/M 1/M 1/M 8/M 9/M 8/M Trong/E đó/P ,/CH lời_giải/Np 1/M ra/V output/Np là/V :/CH 1/M Lời_giải/Np 2/M ra/V output/Np là/V :/CH 0/M Giới_hạn/V test/Np (dòng/Np 3)/Np được/V đặt/V nhỏ/A ,/CH mục_đích/N là/V để/E sinh_ra/V test/Np sai/A nhỏ/A dễ/A debug/Np hơn/A ./CH\nSau/E khi/N code/Np đã/R đúng/A ,/CH có_thể/R tăng/V giới_hạn/V lên/V để/E kiểm_tra/V mạnh/A hơn/A ./CH\nLàm_sao/X để/E viết/V trình/V chấm/V một_cách/N hiệu_quả/N ?/CH\nQua/V ví_dụ/C trên/E ,/CH bạn/N có_thể/R cảm_thấy/V khá/R ngại/V khi/N code/Np trình/V so/V test/Np khá/R dài/A ,/CH code/Np có_thể/R mất/V thời_gian/N ./CH\nTuy_nhiên/C ,/CH ta/P hoàn_toàn/A có_thể/R viết/V code/Np so/V test/Np thành/V một/M template/Np để/E ứng_dụng/V cho/E tất_cả/P các/L bài/N !/CH Với/E một/M template/Np so/V test/Np có_sẵn/Np ,/CH việc/N còn_lại/Np của/E ta/P chỉ/R là/V code/Np phần/N sinh/V test/Np và/Cc trình/V trâu/N ,/CH nếu_như/C đã/R làm_quen/V với/E trình/V chấm/V thì/C chỉ/R mất/V khoảng/N 10/M phút/Nu để/E viết/V ./CH\nTác_giả/N xin/V được/V chia_sẻ/V với/E các/L bạn/N các/L template/Np trình/V chấm/V do/E chính/T mình/P sử_dụng/V ./CH\nTemplate/Np dành/V cho/E C++/Np :/CH include/Np lt;bits/Np ./CH hgt;/Np using/Np namespace/Np std/Np ;/CH //CH Tên/N chương_trình/N const/Np string/Np NAME/Np =/CH \"template\"/Np ;/CH //CH Số/N test/Np kiểm_tra/V const/Np int/Np NTEST/Np =/CH 100/M ;/CH //CH Viết/V lại/R hàm_random/Np để/E sử_dụng/V cho/E thuận_tiện/N ./CH\nHàm_random/Np này/P sinh/V ngẫu_nhiên/A số/N trong/E phạm_vi/N long_long/Np ,/CH số/N sinh_ra/V gt;=/Np l/Ny và/Cc lt;=/Np h/Ny ./CH\nlong_long/Np Rand/Np (/CH long_long/Np l/Ny ,/CH long_long/Np h/Ny )/CH return/Np l/Ny +/CH ((/Np long_long/Np )/CH rand/Np ()/Np (/CH RAND_MAX/Np +/CH 1/M )/CH (/CH RAND_MAX/Np +/CH 1/M )/CH (/CH RAND_MAX/Np +/CH 1/M )/CH +/CH (/CH long_long/Np )/CH rand/Np ()/Np (/CH RAND_MAX/Np +/CH 1/M )/CH (/CH RAND_MAX/Np +/CH 1/M )/CH +/CH (/CH long_long/Np )/CH rand/Np ()/Np (/CH RAND_MAX/Np +/CH 1/M )/CH +/CH rand/Np ())/Np %/CH (/CH h/Ny -/CH l/Ny +/CH 1/M );/CH int/Np main/Np ()/Np srand/Np (/CH time/Np (/CH NULL/Np ));/Np for/Np (/CH int/Np iTest/Np =/CH 1/M ;/CH iTest/Np lt;=/Np NTEST/Np ;/CH iTest/Np ++/Np )/CH ofstream/Np inp/Np ((/Np NAME/Np +/CH \"/CH ./CH inp\"/Np )/CH ./CH\nc_str/Np ());/Np //CH Code/Np phần/N sinh/V test/Np ở/E đây/P inp/Np ./CH\nclose/Np ();/Np //CH Nếu/C dùng/V Linux/Np thì/C \"/CH ./CH /\"/Np +/CH Tên/N chương_trình/N system/Np ((/Np NAME/Np +/CH \"/CH ./CH exe\"/Np )/CH ./CH\nc_str/Np ());/Np system/Np ((/Np NAME/Np +/CH \"_trau/Np ./CH exe\"/Np )/CH ./CH\nc_str/Np ());/Np //CH Nếu/C dùng/V linux/Np thì/C thay/V fc/Np bằng/E diff/Np if/Np (/CH system/Np ((/Np \"fc/Np \"/CH +/CH NAME/Np +/CH \"/CH ./CH out/Np \"/CH +/CH NAME/Np +/CH \"/CH ./CH ans\"/Np )/CH ./CH\nc_str/Np ())/Np !/CH =/CH 0/M )/CH cout/Np lt;lt;/Np \"Test/Np \"/CH lt;lt;/Np iTest/Np lt;lt;/Np \"/CH :/CH WRONG/Np !/CH \\n/Np \"/CH ;/CH return/Np 0/M ;/CH cout/Np lt;lt;/Np \"Test/Np \"/CH lt;lt;/Np iTest/Np lt;lt;/Np \"/CH :/CH CORRECT/Np !/CH \\n/Np \"/CH ;/CH return/Np 0/M ;/CH Template/Np dành/V cho/E Pascal/Np :/CH mode/Np objfpc/Np //CH Thư_viện/N dos_chứa/Np lệnh/N exec/Np uses/Np dos/Np ;/CH const/Np //CH Tên/N chương_trình/N NAM/N =/CH template/Np ;/CH //CH Số/N test/Np kiểm_tra/V NTEST/Np =/CH 100/M ;/CH var/Np iTest/Np :/CH integer/Np ;/CH begin/Np for/Np iTest/Np :/CH =/CH 1/M to/A NTEST/Np do/E begin/Np //CH Pascal/Np không/R gặp/V vấn_đề/N với/E randomize/Np ,/CH vì_vậy/C ta/P có_thể/R tách/V trình/V sinh/V test/Np riêng/A ra/V ./CH\nExec/Np (/CH NAM/N +/CH _sinhtest/Np ./CH exe/Np ,/CH );/CH Exec/Np (/CH NAM/N +/CH ./CH exe/Np ,/CH );/CH Exec/Np (/CH NAM/N +/CH _trau/Np ./CH exe/Np ,/CH );/CH Exec/Np (/CH fc/Np ,/CH NAM/N +/CH ./CH out/Np +/CH NAM/N +/CH ./CH ans/Np );/CH if/Np DosExitCode/Np lt;gt;/Np 0/M then/Np begin/Np writeln/Np (/CH Test/Np ,/CH iTest/Np ,/CH :/CH WRONG/Np !/CH );/CH exit/Np ;/CH end/Np ;/CH writeln/Np (/CH Test/Np ,/CH iTest/Np ,/CH :/CH CORRECT/Np !/CH );/CH end/Np ;/CH end/Np ./CH\nTemplate/Np dùng/V Shell/Np script/Np Giả_sử/Np bạn/N có/V 2/M code/Np khác_nhau/Np ,/CH đã/R dịch/N ra/V 2/M file/Np executable/Np là/V prog1/Np và/Cc prog2/Np ./CH\nBạn/N viết/V thêm/V 1/M trình/V sinh/V test/Np và/Cc dịch/N ra/V file/Np gen/N ,/CH gen/N nhận/V 1/M argument/Np là/V randomized/Np seed/Np (VD/Np với/E C++/Np bạn/N dùng/V srand(atoi(argv1))/Np )/CH :/CH Sinh/V 100/M test/Np for/Np ((/Np i/M =/CH 1;ilt;/Np =/CH 100;i++/Np ))/Np ;/CH do/E Sinh/V input/Np với/E seed/Np i/M và/Cc lưu/V vào/E in_tmp/Np ./CH /gen/Np i/M gt;/Np in_tmp/Np So_sánh/V output/Np của/E 2/M code/Np ,/CH nếu/C output/Np khác_nhau/Np thì/C dừng/V lại/R ./CH\nKhi/N đó/P ta/P có/V file/Np in_tmp/Np chính/T là/V input/Np mà/C 2/M code/Np chạy/V ra/V kết_quả/N khác_nhau/Np ./CH\ndiff/Np lt;/Np (/CH ./CH /prog1/Np lt;/Np in_tmp/Np )/CH lt;/Np (/CH ./CH /prog2/Np lt;/Np in_tmp/Np )/CH break/Np done/Np Luyện_tập/V viết/V trình/V chấm/V Để/E viết/V trình/V chấm/V thành_thạo/A ,/CH hãy/R thử/V viết/V trình/V chấm/V với/E tất_cả/P các/L bài/N mà/C bạn/N luyện_tập/V ,/CH cho_đến/E khi_không/N còn/R ngại/V viết/V trình/V chấm/V nữa/R thì/C lúc_đó/Np bạn/N sẽ/R thành_công/V ./CH\nHãy/R đặt/V ra/V mục_tiêu/N là/V một/M sub/Np AC/Np với/E tất_cả/P các/L bài/N mình/P làm/V với/E sự/N hỗ_trợ/V của/E trình/V chấm/V ./CH\nMột_khi/X đã/R thành_thạo/A tuyệt_kĩ/Np này/P ,/CH bạn/N sẽ/R dễ_dàng/A chinh_phục/V những/L kì_thi/Np chấm/V offline/Np và/Cc không/R bao_giờ/P phải/V lo_lắng/V làm/V sai/A nữa/R ./CH\n\n", "title": "Tự code, tự chấm, tự sướng - Bí kíp thi offline\n", "link": "http://vnoi.info/wiki/algo/skill/viet-trinh-cham\n"}