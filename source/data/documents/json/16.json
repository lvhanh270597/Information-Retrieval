{"content": "Tác_giả : Nguyễn_RR Thành_Trung_Trie là một cấu_trúc dữ_liệu dùng để quản_lý một_tập hợp các xâu .\nTrie cho_phép : Thêm một xâu vào tập_hợp Xóa_một xâu khỏi tập_hợp Kiểm_tra một xâu có tồn_tại trong tập_hợp hay_không .\nCấu_trúc Trie gồm một gốc không chứa thông_tin , trên mỗi cạnh lưu một ký_tự , mỗi nút và đường_đi từ gốc đến nút đó thể_hiện 1 xâu , gồm các ký_tự là các ký_tự thuộc cạnh trên đường_đi đó .\nTrong hình_vẽ trên , nút 1 là nút gốc , nút 7 thể_hiện có 1 xâu là ‘bg’ , nút 8 thể_hiện có 1 xâu là ‘db’ , nút 9 thể_hiện có 1 xâu là ‘dc’ , nút 10 thể_hiện có 1 xâu là ‘acd’ , nút 5 thể_hiện là có 1 xâu là ‘ab’ .\nTuy_nhiên , như các bạn có_thể thấy , đối_với một_số nút , chẳng_hạn nút 4 , ta không biết nó là thể_hiện kết_thúc 1 xâu hay chỉ là 1 phần của đường_đi từ nút 1 đến nút 9 .\nVì_vậy , khi cài_đặt , thông_thường , tại nút U ta cần lưu thêm thông_tin nút U có là kết_thúc của 1 xâu hay_không , hoặc nút U là kết_thúc của bao_nhiêu xâu , tuỳ_theo yêu_cầu bài_toán .\nMột_số ưu_điểm của trie Cài_đặt đơn_giản , dễ nhớ Tiết_kiệm bộ_nhớ : Khi số_lượng khóa lớn và các khóa có độ_dài nhỏ , thông_thường trie tiết_kiệm bộ_nhớ hơn do các phần đầu giống nhau của các khoá chỉ được lưu 1 lần .\nƯu_điểm này có ứng_dụng rất lớn , chẳng_hạn trong từ_điển .\nThao_tác tìm_kiếm : O(m) với m là độ_dài khóa .\nVới_Binary search tree (cân bằng) : là O(logN) .\nKhi số_lượng khóa cần tìm lớn và độ_dài mỗi khóa tương_đối nhỏ , logN xấp_xỉ m , và như các bạn đã biết , để cài được Binary search tree cân_bằng không_phải là một việc đơn_giản .\nHơn_nữa , các thao_tác trên trie rất đơn_giản và thường chạy nhanh hơn trên thực_tế .\nDựa vào tính_chất của cây trie , có_thể thực_hiện một_số liên_quan đến thứ_tự từ_điển như sắp_xếp , tìm một khóa có thứ_tự từ_điển nhỏ nhất và lớn hơn một khóa cho trước . . . ; và một_số thao_tác liên_quan đến tiền_tố , hậu_tố .\nCài_đặt //Định nghĩa kiểu trie type trie = node ; node = record count : longint ; //Số lượng xâu kết_thúc tại một nút c : array a . .\nz of trie ; //Link đến các nút con của một nút end ; var root : trie ; //Gốc trie //Thêm một nút rỗng vào trie procedure add ( var a : trie ); var c : char ; begin new ( a ); a .\ncount : = 0 ; for c : = a to z do a .\nc c : = nil ; end ; //Thêm xâu s vào trie procedure insert ( s : string ); var i : longint ; begin for i : = 1 to length ( s ) do begin //Duyệt mỗi kí_tự i của s .\nVới mỗi kí_tự , ta đi_theo nhánh tương_ứng với ký_tự i , nếu nhánh này chưa có , ta thêm vào cây if p .\nc s i = nil then add ( p .\nc s i ); p : = p .\nc s i ; end ; inc ( p .\ncount ); end ; //Tìm xem xâu s có trong trie không function find ( s : string ) : boolean ; var i : longint ; p : trie ; begin p : = root ; for i : = 1 to length ( s ) do begin if p .\nc s i = nil then exit ( false ); p : = p .\nc s i ; end ; exit ( true ); end ; (Có thể cài_đặt thêm thao_tác xóa_một từ khỏi trie , nhưng đối_với các bài_toán thường gặp thì thao_tác này không cần_thiết .\nViệc cài_đặt cụ_thể xin nhường_lại cho bạn đọc) Một_vài ứng_dụng trong các bài_toán Sau_đây là một_vài ví_dụ cơ_bản_thể hiện tác_dụng của trie Chuỗi từ Nguồn : Цикл_Интернет-олимпиад для школьников , сезон 2007-2008 Chuỗi từ có độ_dài n là một dãy các từ w_1 , w_2 , . . . , w_n sao_cho với mọi 1 \\le i lt; n , từ w_i là tiền_tố của từ w_i+1 .\nTừ u có độ_dài k là tiền_tố của từ v có độ_dài l nếu l gt; k và các ký_tự đầu_tiên của v trùng với từ u .\nCho tập_hợp các từ S = s_1 , s_2 , . . . , s_m .\nTìm chuỗi từ dài nhất có_thể xây_dựng được bằng cách dùng các từ trong tập_hợp S (có thể không sử_dụng hết các từ) .\nThuật_toán Một trong những cách giải khá đơn_giản đối_với bài này là sử_dụng trie : Lưu tất_cả các từ lại vào trie .\nĐối_với mỗi nút trên cây , ta tính f là độ_dài chuỗi từ dài nhất bắt_đầu ở nút đó .\nCài_đặt một_số phần quan_trọng type trie = node ; node = record f , u : longint ; //Số lượng xâu kết_thúc tại một nút c : array a . .\nz of trie ; //Link đến các nút con của một nút end ; . . .\nprocedure dfs ( a : trie ); var c : char ; begin a .\nf : = 0 for c : = a to z do begin dfs ( a .\nc c ); a .\nf : = max ( a .\nf , a .\nc c .\nf ); end ;; inc ( a .\nf , a .\nu ); end ; function solve : longint ; begin add ( root ); for i : = 1 to m do insert ( s i ); dfs ( root ); exit ( root .\nf ); end ; Tách từ Nguồn : Croatian_OI 2006 Một xâu S độ_dài không quá 300 , 000 cần được tách thành các đoạn con sao_cho mỗi đoạn con thuộc một_tập gồm không quá 400 từ cho trước , mỗi từ có độ_dài không quá 100 , không có 2 từ nào giống nhau .\nViết chương_trình xác_định số cách tách một từ cho trước .\nThuật_toán Quy_hoạch_động .\nĐặt fi là số cách tách đoạn từ 1 đến i của S .\nNhư_vậy , fi = \\sumfj với mỗi j thoả_mãn đoạn từ j+1 . . i là một từ thuộc tập từ đã cho .\nTa lần_lượt tính fi với i chạy từ 1 đến n .\nVới mỗi i , để kiểm_tra mọi đoạn j . . i có là một từ cho trước không , chú_ý là khi giảm j , các từ này có độ_dài tăng lên , và từ trước là hậu_tố của từ sau , các từ có độ_dài hơn kém nhau một đơn_vị .\nDo_đó , trên cây trie , ta có_thể đi từ gốc xuống các nút thể_hiện các xâu này , nếu_không đi được nữa , tức_là không có từ nào thoả_mãn .\nChú_ý là khi thêm các xâu của tập đã cho , ta cần thêm các xâu này theo chiều ngược (hoặc một_cách xử_lý khác là ta tính hàm f từ n đến 1) .\nCài_đặt một_số phần quan_trọng f 0 = 1 ; for i : = 1 to n do begin j : = i ; p : = root ; while ( j gt; 0 ) and ( p .\nc s j lt;gt; nil ) do begin p : = p .\nc s j ; dec ( j ); if ( x .\nc = 1 ) then inc ( f i , f j ); end ; end ; Bài_tập áp_dụng : VOJ - NKSEV_VOJ - SEC_VOJ - CHAIN2_A lot of_games\n", "tagged": "Tác_giả/N :/CH Nguyễn_RR/Np Thành_Trung_Trie/Np là/V một/M cấu_trúc/N dữ_liệu/N dùng/V để/E quản_lý/V một_tập/Np hợp/V các/L xâu/Np ./CH\nTrie/Np cho_phép/V :/CH Thêm/V một/M xâu/Np vào/E tập_hợp/N Xóa_một/Np xâu/Np khỏi/V tập_hợp/N Kiểm_tra/V một/M xâu/Np có/V tồn_tại/V trong/E tập_hợp/N hay_không/Np ./CH\nCấu_trúc/N Trie/Np gồm/V một/M gốc/N không/R chứa/V thông_tin/N ,/CH trên/E mỗi/L cạnh/N lưu/V một/M ký_tự/Np ,/CH mỗi/L nút/N và/Cc đường_đi/Np từ/E gốc/N đến/E nút/N đó/P thể_hiện/V 1/M xâu/Np ,/CH gồm/V các/L ký_tự/Np là/V các/L ký_tự/Np thuộc/V cạnh/N trên/E đường_đi/Np đó/P ./CH\nTrong/E hình_vẽ/Np trên/E ,/CH nút/N 1/M là/V nút/N gốc/N ,/CH nút/N 7/M thể_hiện/V có/V 1/M xâu/Np là/V ‘bg’/Np ,/CH nút/N 8/M thể_hiện/V có/V 1/M xâu/Np là/V ‘db’/Np ,/CH nút/N 9/M thể_hiện/V có/V 1/M xâu/Np là/V ‘dc’/Np ,/CH nút/N 10/M thể_hiện/V có/V 1/M xâu/Np là/V ‘acd’/Np ,/CH nút/N 5/M thể_hiện/V là/V có/V 1/M xâu/Np là/V ‘ab’/Np ./CH\nTuy_nhiên/C ,/CH như/C các/L bạn/N có_thể/R thấy/V ,/CH đối_với/E một_số/L nút/N ,/CH chẳng_hạn/X nút/N 4/M ,/CH ta/P không/R biết/V nó/P là/V thể_hiện/V kết_thúc/V 1/M xâu/Np hay/Cc chỉ/R là/V 1/M phần/N của/E đường_đi/Np từ/E nút/N 1/M đến/E nút/N 9/M ./CH\nVì_vậy/C ,/CH khi/N cài_đặt/V ,/CH thông_thường/A ,/CH tại/E nút/N U/N ta/P cần/V lưu/V thêm/V thông_tin/N nút/N U/N có/V là/V kết_thúc/V của/E 1/M xâu/Np hay_không/Np ,/CH hoặc/Cc nút/N U/N là/V kết_thúc/V của/E bao_nhiêu/P xâu/Np ,/CH tuỳ_theo/Np yêu_cầu/V bài_toán/N ./CH\nMột_số/L ưu_điểm/N của/E trie/Np Cài_đặt/V đơn_giản/A ,/CH dễ/A nhớ/V Tiết_kiệm/V bộ_nhớ/Np :/CH Khi/N số_lượng/N khóa/N lớn/A và/Cc các/L khóa/N có/V độ_dài/Np nhỏ/A ,/CH thông_thường/A trie/Np tiết_kiệm/V bộ_nhớ/Np hơn/A do/E các/L phần/N đầu/N giống/N nhau/N của/E các/L khoá/N chỉ/R được/V lưu/V 1/M lần/N ./CH\nƯu_điểm/N này/P có/V ứng_dụng/V rất/R lớn/A ,/CH chẳng_hạn/X trong/E từ_điển/Np ./CH\nThao_tác/V tìm_kiếm/V :/CH O(m)/Np với/E m/Nu là/V độ_dài/Np khóa/N ./CH\nVới_Binary/Np search/Np tree/Np (cân/Np bằng)/Np :/CH là/V O(logN)/Np ./CH\nKhi/N số_lượng/N khóa/N cần/V tìm/V lớn/A và/Cc độ_dài/Np mỗi/L khóa/N tương_đối/A nhỏ/A ,/CH logN/Np xấp_xỉ/A m/Nu ,/CH và/Cc như/C các/L bạn/N đã/R biết/V ,/CH để/E cài/V được/V Binary/Np search/Np tree/Np cân_bằng/A không_phải/Np là/V một/M việc/N đơn_giản/A ./CH\nHơn_nữa/C ,/CH các/L thao_tác/V trên/E trie/Np rất/R đơn_giản/A và/Cc thường/R chạy/V nhanh/A hơn/A trên/E thực_tế/N ./CH\nDựa/V vào/E tính_chất/N của/E cây/N trie/Np ,/CH có_thể/R thực_hiện/V một_số/L liên_quan/V đến/E thứ_tự/N từ_điển/Np như/C sắp_xếp/V ,/CH tìm/V một/M khóa/N có/V thứ_tự/N từ_điển/Np nhỏ/A nhất/A và/Cc lớn/A hơn/A một/M khóa/N cho/E trước/E ./CH ./CH ./CH ;/CH và/Cc một_số/L thao_tác/V liên_quan/V đến/E tiền_tố/Np ,/CH hậu_tố/Np ./CH\nCài_đặt/V //CH nghĩa/N kiểu/N trie/Np type/Np trie/Np =/CH node/Np ;/CH node/Np =/CH record/Np count/Np :/CH longint/Np ;/CH //CH lượng/N xâu/Np kết_thúc/V tại/E một/M nút/N c/Ni :/CH array/Np a/Ni ./CH ./CH\nz/Y of/E trie/Np ;/CH //CH đến/E các/L nút/N con/Nc của/E một/M nút/N end/Np ;/CH var/Np root/Np :/CH trie/Np ;/CH //CH trie/Np //CH một/M nút/N rỗng/A vào/E trie/Np procedure/Np add/Np (/CH var/Np a/Ni :/CH trie/Np );/CH var/Np c/Ni :/CH char/Np ;/CH begin/Np new/Np (/CH a/Ni );/CH a/Ni ./CH\ncount/Np :/CH =/CH 0/M ;/CH for/Np c/Ni :/CH =/CH a/Ni to/A z/Y do/E a/Ni ./CH\nc/Ni c/Ni :/CH =/CH nil/Np ;/CH end/Np ;/CH //CH xâu/Np s/Y vào/E trie/Np procedure/Np insert/Np (/CH s/Y :/CH string/Np );/CH var/Np i/M :/CH longint/Np ;/CH begin/Np for/Np i/M :/CH =/CH 1/M to/A length/Np (/CH s/Y )/CH do/E begin/Np //CH mỗi/L kí_tự/Np i/M của/E s/Y ./CH\nVới/E mỗi/L kí_tự/Np ,/CH ta/P đi_theo/Np nhánh/N tương_ứng/V với/E ký_tự/Np i/M ,/CH nếu/C nhánh/N này/P chưa/R có/V ,/CH ta/P thêm/V vào/E cây/N if/Np p/Ny ./CH\nc/Ni s/Y i/M =/CH nil/Np then/Np add/Np (/CH p/Ny ./CH\nc/Ni s/Y i/M );/CH p/Ny :/CH =/CH p/Ny ./CH\nc/Ni s/Y i/M ;/CH end/Np ;/CH inc/Np (/CH p/Ny ./CH\ncount/Np );/CH end/Np ;/CH //CH xem/V xâu/Np s/Y có/V trong/E trie/Np không/R function/Np find/Np (/CH s/Y :/CH string/Np )/CH :/CH boolean/Np ;/CH var/Np i/M :/CH longint/Np ;/CH p/Ny :/CH trie/Np ;/CH begin/Np p/Ny :/CH =/CH root/Np ;/CH for/Np i/M :/CH =/CH 1/M to/A length/Np (/CH s/Y )/CH do/E begin/Np if/Np p/Ny ./CH\nc/Ni s/Y i/M =/CH nil/Np then/Np exit/Np (/CH false/Np );/CH p/Ny :/CH =/CH p/Ny ./CH\nc/Ni s/Y i/M ;/CH end/Np ;/CH exit/Np (/CH true/Np );/CH end/Np ;/CH (Có/Np thể/N cài_đặt/V thêm/V thao_tác/V xóa_một/Np từ/E khỏi/V trie/Np ,/CH nhưng/C đối_với/E các/L bài_toán/N thường/R gặp/V thì/C thao_tác/V này/P không/R cần_thiết/A ./CH\nViệc/N cài_đặt/V cụ_thể/A xin/V nhường_lại/Np cho/E bạn/N đọc)/Np Một_vài/L ứng_dụng/V trong/E các/L bài_toán/N Sau_đây/Np là/V một_vài/L ví_dụ/C cơ_bản_thể/Np hiện/N tác_dụng/N của/E trie/Np Chuỗi/N từ/E Nguồn/N :/CH Цикл_Интернет-олимпиад/Np для/Np школьников/Np ,/CH сезон/Np 2007-2008/Np Chuỗi/N từ/E có/V độ_dài/Np n/Ny là/V một/M dãy/Nc các/L từ/E w_1/Np ,/CH w_2/Np ,/CH ./CH ./CH ./CH ,/CH w_n/Np sao_cho/Np với/E mọi/L 1/M \\le/Np i/M lt;/Np n/Ny ,/CH từ/E w_i/Np là/V tiền_tố/Np của/E từ/E w_i+1/Np ./CH\nTừ/E u/N có/V độ_dài/Np k/N là/V tiền_tố/Np của/E từ/E v/Nu có/V độ_dài/Np l/Ny nếu/C l/Ny gt;/Np k/N và/Cc các/L ký_tự/Np đầu_tiên/A của/E v/Nu trùng/V với/E từ/E u/N ./CH\nCho/E tập_hợp/N các/L từ/E S/Y =/CH s_1/Np ,/CH s_2/Np ,/CH ./CH ./CH ./CH ,/CH s_m/Np ./CH\nTìm/V chuỗi/N từ/E dài/A nhất/A có_thể/R xây_dựng/V được/V bằng/E cách/N dùng/V các/L từ/E trong/E tập_hợp/N S/Y (có/Np thể/N không/R sử_dụng/V hết/V các/L từ)/Np ./CH\nThuật_toán/N Một/M trong/E những/L cách/N giải/N khá/R đơn_giản/A đối_với/E bài/N này/P là/V sử_dụng/V trie/Np :/CH Lưu/V tất_cả/P các/L từ/E lại/R vào/E trie/Np ./CH\nĐối_với/E mỗi/L nút/N trên/E cây/N ,/CH ta/P tính/V f/Np là/V độ_dài/Np chuỗi/N từ/E dài/A nhất/A bắt_đầu/V ở/E nút/N đó/P ./CH\nCài_đặt/V một_số/L phần/N quan_trọng/A type/Np trie/Np =/CH node/Np ;/CH node/Np =/CH record/Np f/Np ,/CH u/N :/CH longint/Np ;/CH //CH lượng/N xâu/Np kết_thúc/V tại/E một/M nút/N c/Ni :/CH array/Np a/Ni ./CH ./CH\nz/Y of/E trie/Np ;/CH //CH đến/E các/L nút/N con/Nc của/E một/M nút/N end/Np ;/CH ./CH ./CH ./CH\nprocedure/Np dfs/Np (/CH a/Ni :/CH trie/Np );/CH var/Np c/Ni :/CH char/Np ;/CH begin/Np a/Ni ./CH\nf/Np :/CH =/CH 0/M for/Np c/Ni :/CH =/CH a/Ni to/A z/Y do/E begin/Np dfs/Np (/CH a/Ni ./CH\nc/Ni c/Ni );/CH a/Ni ./CH\nf/Np :/CH =/CH max/Np (/CH a/Ni ./CH\nf/Np ,/CH a/Ni ./CH\nc/Ni c/Ni ./CH\nf/Np );/CH end/Np ;;/Np inc/Np (/CH a/Ni ./CH\nf/Np ,/CH a/Ni ./CH\nu/N );/CH end/Np ;/CH function/Np solve/Np :/CH longint/Np ;/CH begin/Np add/Np (/CH root/Np );/CH for/Np i/M :/CH =/CH 1/M to/A m/Nu do/E insert/Np (/CH s/Y i/M );/CH dfs/Np (/CH root/Np );/CH exit/Np (/CH root/Np ./CH\nf/Np );/CH end/Np ;/CH Tách/V từ/E Nguồn/N :/CH Croatian_OI/Np 2006/M Một/M xâu/Np S/Y độ_dài/Np không/R quá/R 300/M ,/CH 000/Np cần/V được/V tách/V thành/V các/L đoạn/Nc con/Nc sao_cho/Np mỗi/L đoạn/Nc con/Nc thuộc/V một_tập/Np gồm/V không/R quá/R 400/M từ/E cho/E trước/E ,/CH mỗi/L từ/E có/V độ_dài/Np không/R quá/R 100/M ,/CH không/R có/V 2/M từ/E nào/P giống/N nhau/N ./CH\nViết/V chương_trình/N xác_định/V số/N cách/N tách/V một/M từ/E cho/E trước/E ./CH\nThuật_toán/N Quy_hoạch_động/Np ./CH\nĐặt/V fi/Np là/V số/N cách/N tách/V đoạn/Nc từ/E 1/M đến/E i/M của/E S/Y ./CH\nNhư_vậy/X ,/CH fi/Np =/CH \\sumfj/Np với/E mỗi/L j/Np thoả_mãn/V đoạn/Nc từ/E j+1/Np ./CH ./CH i/M là/V một/M từ/E thuộc/V tập/V từ/E đã/R cho/E ./CH\nTa/P lần_lượt/R tính/V fi/Np với/E i/M chạy/V từ/E 1/M đến/E n/Ny ./CH\nVới/E mỗi/L i/M ,/CH để/E kiểm_tra/V mọi/L đoạn/Nc j/Np ./CH ./CH i/M có/V là/V một/M từ/E cho/E trước/E không/R ,/CH chú_ý/V là/V khi/N giảm/V j/Np ,/CH các/L từ/E này/P có/V độ_dài/Np tăng/V lên/V ,/CH và/Cc từ/E trước/E là/V hậu_tố/Np của/E từ/E sau/E ,/CH các/L từ/E có/V độ_dài/Np hơn/A kém/A nhau/N một/M đơn_vị/N ./CH\nDo_đó/C ,/CH trên/E cây/N trie/Np ,/CH ta/P có_thể/R đi/V từ/E gốc/N xuống/V các/L nút/N thể_hiện/V các/L xâu/Np này/P ,/CH nếu_không/Np đi/V được/V nữa/R ,/CH tức_là/V không/R có/V từ/E nào/P thoả_mãn/V ./CH\nChú_ý/V là/V khi/N thêm/V các/L xâu/Np của/E tập/V đã/R cho/E ,/CH ta/P cần/V thêm/V các/L xâu/Np này/P theo/V chiều/N ngược/A (hoặc/Np một_cách/N xử_lý/V khác/A là/V ta/P tính/V hàm/Np f/Np từ/E n/Ny đến/E 1)/Np ./CH\nCài_đặt/V một_số/L phần/N quan_trọng/A f/Np 0/M =/CH 1/M ;/CH for/Np i/M :/CH =/CH 1/M to/A n/Ny do/E begin/Np j/Np :/CH =/CH i/M ;/CH p/Ny :/CH =/CH root/Np ;/CH while/Np (/CH j/Np gt;/Np 0/M )/CH and/Np (/CH p/Ny ./CH\nc/Ni s/Y j/Np lt;gt;/Np nil/Np )/CH do/E begin/Np p/Ny :/CH =/CH p/Ny ./CH\nc/Ni s/Y j/Np ;/CH dec/Np (/CH j/Np );/CH if/Np (/CH x/CH ./CH\nc/Ni =/CH 1/M )/CH then/Np inc/Np (/CH f/Np i/M ,/CH f/Np j/Np );/CH end/Np ;/CH end/Np ;/CH Bài_tập/Np áp_dụng/V :/CH VOJ/Np -/CH NKSEV_VOJ/Np -/CH SEC_VOJ/Np -/CH CHAIN2_A/Np lot/Np of_games/Np\n", "title": "Trie\n", "link": "http://vnoi.info/wiki/algo/data-structures/trie\n"}