{"content": "Giới_thiệu Ứng_dụng về sắp_xếp có ở khắp mọi nơi : Một danh_sách lớp với các học_sinh được sắp_xếp theo thứ_tự bảng_chữ_cái .\nMột_danh_bạ điện_thoại .\nDanh_sách các truy_vấn được tìm_kiếm nhiều nhất trên Google .\nThuật_toán sắp_xếp cũng được dùng kết_hợp với những thuật_toán khác , như tìm_kiếm nhị_phân , thuật_toán Kruskal để tìm cây khung nhỏ nhất của đồ_thị .\nVì_sao chúng_ta phải học nhiều thuật_toán sắp_xếp ?\nKhi code , bạn chỉ_cần biết cài một thuật_toán sắp_xếp là đủ .\nHoặc nếu bạn code C++ hay Java , bạn chỉ_cần biết cách gọi thư_viện .\nTuy_nhiên , các thuật_toán sắp_xếp khác_nhau cho ta nhiều ý_tưởng hay và độc_đáo - điều này vô_cùng hữu_ích khi các bạn_học các thuật_toán khác .\nNhững điểm cần chú_ý Hãy thử tưởng_tượng bạn có_một bộ bài đã được xáo , và bạn muốn sắp_xếp lại các lá_bài theo thứ_tự tăng dần .\nBạn sẽ làm như nào ?\nCó rất nhiều cách tiếp_cận khác_nhau : Chia bộ bài theo giá_trị : 2 , 3 , 4 . . .\nRồi gộp lại .\nTrải tất_cả các lá_bài ra , rồi lần_lượt lấy lá_bài nhỏ nhất .\nChia bộ bài ra thành nhiều nhóm nhỏ .\nVới mỗi nhóm , sắp_xếp lại , sau_đó gộp các nhóm lại với_nhau theo thứ_tự tăng dần .\nBạn sẽ thấy những cách tiếp_cận khác_nhau sẽ có thời_gian nhanh chậm khác_nhau .\nCác thuật_toán sắp_xếp cũng_vậy .\nCó rất nhiều cách tiếp_cận , với ưu , nhược_điểm khác_nhau .\nKhi so_sánh giữa các thuật_toán này với_nhau , có nhiều vấn_đề phải quan_tâm .\nThời_gian chạy .\nĐối_với các dữ_liệu rất lớn , các thuật_toán không hiệu_quả sẽ chạy rất chậm và không_thể ứng_dụng trong thực_tế .\nBộ_nhớ .\nCác thuật_toán nhanh đòi_hỏi đệ_quy sẽ có_thể phải tạo ra các bản copy của dữ_liệu đang xử_lí .\nVới những hệ_thống mà bộ_nhớ có giới_hạn (ví dụ embedded system) , một_vài thuật_toán sẽ không_thể chạy được .\nĐộ ổn_định ( stability ) .\nĐộ ổn_định được định_nghĩa dựa trên điều gì sẽ xảy_ra với các phần_tử có_giá trị giống nhau .\nĐối_với thuật_toán sắp_xếp ổn_định , các phần_tử bằng với giá_trị bằng_nhau sẽ giữ_nguyên thứ_tự trong mảng trước_khi sắp_xếp .\nĐối_với thuật_toán sắp_xếp không ổn_định , các phần_tử có_giá trị bằng_nhau sẽ có_thể có thứ_tự bất_kỳ .\nTrong bài viết này , ta giả_sử cần sắp_xếp tăng dần các phần_tử .\nĐể sắp_xếp giảm_dần , ta có nhiều cách : Sửa_đổi thuật_toán một_cách phù_hợp .\nSắp_xếp , sau_đó đảo_ngược thứ_tự các phần_tử .\nĐịnh_nghĩa lại việc so_sánh nhỏ hơn .\nSắp_xếp nổi_bọt (Bubble sort) Đây là thuật_toán cơ_bản nhất cho việc sắp_xếp .\nÝ_tưởng Xét lần_lượt các cặp 2 phần_tử liên_tiếp .\nNếu phần_tử đứng sau nhỏ hơn phần_tử đứng trước , ta đổi chỗ 2 phần_tử .\nNói_cách_khác , phần_tử nhỏ nhất sẽ nổi_lên trên .\nLặp_lại đến khi_không còn 2 phần_tử nào thỏa_mãn .\nCó_thể chứng_minh được số lần_lặp không quá N - 1 , do một phần_tử chỉ_có thể nổi_lên trên không quá N-1 lần .\nƯu_điểm Code đơn_giản , dễ_hiểu Không tốn thêm bộ_nhớ Nhược_điểm Độ phức_tạp \\mathcalO(N2) , không đủ nhanh với dữ_liệu lớn .\nCode for ( int i = 0 ; i lt; n ; i ++ ) for ( int j = 0 ; j lt; n - 1 ; j ++ ) if ( a j gt; a j + 1 ) swap ( a j , a j + 1 ); Minh_họa Bạn có_thể vào VisuAlgo .\nChọn_Bubble ở thanh menu bên_trên .\nẤn vào nút Create ở phía dưới trang để tạo một dãy mới Ấn vào Sort , rồi Go để chạy thuật_toán .\nSắp_xếp chèn (Insertion Sort) Ý_tưởng Ý_tưởng chính của thuật_toán là ta sẽ sắp_xếp lần_lượt từng đoạn gồm 1 phần_tử đầu_tiên , 2 phần_tử đầu_tiên , . . . , N phần_tử .\nGiả_sử_ta đã sắp_xếp xong i phần_tử của mảng .\nĐể sắp_xếp i+1 phần_tử đầu_tiên , ta tìm vị_trí phù_hợp của phần_tử thứ i+1 và \"chèn\" nó vào đó .\nƯu_điểm Nếu danh_sách đã gần đúng thứ_tự , Insertion_Sort sẽ chạy rất nhanh .\nVí_dụ bạn cần sắp_xếp Highscore trong game .\nNhược_điểm Độ phức_tạp \\mathcalO(N2) , không đủ nhanh với dữ_liệu lớn .\nCode for ( int i = 1 ; i lt; n ; i ++ ) // Tìm vị_trí phù_hợp cho i int j = i ; while ( j gt; 0 amp;amp; data i lt; data j - 1 ) -- j ; // Đưa i về đúng vị_trí int tmp = data i ; for ( int k = i ; k gt; j ; k -- ) data k = data k - 1 ; data j = tmp ; Minh_họa Bạn có_thể vào VisuAlgo .\nChọn_Insert ở thanh menu bên_trên .\nẤn vào nút Create ở phía dưới trang để tạo một dãy mới Ấn vào Sort , rồi Go để chạy thuật_toán .\nSắp_xếp trộn (Merge sort) Ý_tưởng Sắp_xếp trộn hoạt_động kiểu đệ_quy : Đầu_tiên chia dữ_liệu thành 2 phần , và sắp_xếp từng phần .\nSau_đó gộp 2 phần lại với_nhau .\nĐể gộp 2 phần , ta làm như_sau : Tạo một dãy A mới để chứa các phần_tử đã sắp_xếp .\nSo_sánh 2 phần_tử đầu_tiên của 2 phần .\nPhần_tử nhỏ hơn ta cho vào A và xóa_khỏi phần tương_ứng .\nTiếp_tục như_vậy đến khi ta cho hết các phần_tử vào dãy A .\nƯu_điểm Chạy nhanh , độ phức_tạp \\mathcalO(NlogN) .\nỔn_định Nhược_điểm Cần_dùng thêm bộ_nhớ để lưu_mảng A .\nCode int a MAXN ; // mảng trung_gian cho việc sắp_xếp // Sắp_xếp các phần_tử có chỉ_số từ left đến right của mảng data .\nvoid mergeSort ( int data MAXN , int left , int right ) if ( data .\nlength == 1 ) // Dãy chỉ gồm 1 phần_tử , ta không cần sắp_xếp .\nreturn ; int mid = ( left + right ) / 2 ; // Sắp_xếp 2 phần mergeSort ( data , left , mid ); mergeSort ( data , mid + 1 , right ); // Trộn 2 phần đã sắp_xếp lại int i = left , j = mid + 1 ; // phần_tử đang xét của mỗi nửa int cur = 0 ; // chỉ_số trên mảng a while ( i lt;= mid j lt;= right ) // chừng_nào còn 1 phần chưa hết phần_tử .\nif ( i gt; mid ) // bên trái không còn phần_tử nào a cur ++ = data j ++ ; else if ( j gt; right ) // bên phải không còn phần_tử nào a cur ++ = data i ++ ; else if ( data i lt; data j ) // phần_tử bên trái nhỏ hơn a cur ++ = data i ++ ; else a cur ++ = data j ++ ; // copy mảng a về mảng data for ( int i = 0 ; i lt; cur ; i ++ ) data left + i = a i ; Minh_họa Bạn có_thể vào VisuAlgo .\nChọn_Merge ở thanh menu bên_trên .\nẤn vào nút Create ở phía dưới trang để tạo một dãy mới Ấn vào Sort , rồi Go để chạy thuật_toán .\nSắp_xếp vun đống (HeapSort) Ý_tưởng Ta lưu_mảng vào CTDL_Heap .\nỞ mỗi bước , ta lấy ra phần_tử nhỏ nhất trong heap , cho vào mảng đã sắp_xếp .\nƯu_điểm Cài_đặt đơn_giản nếu đã có_sẵn thư_viện Heap .\nChạy nhanh , độ phức_tạp \\mathcalO(NlogN) .\nNhược_điểm Không ổn_định Code_Heap h = Heap (); for ( int i = 0 ; i lt; n ; i ++ ) // thêm phần_tử vào heap h .\npush ( data i ); int a MAXN ; for ( int i = 0 ; i lt; n ; i ++ ) // lấy phần_tử nhỏ nhất và cho vào mảng đã sắp_xếp a i = h .\npop (); Sắp_xếp nhanh (QuickSort) Ý_tưởng Chia dãy thành 2 phần , một phần \"lớn\" và một phần \"nhỏ\" .\nChọn một khóa pivot Những phần_tử lớn hơn pivot chia vào phần_lớn Những phần_tử nhỏ hơn hoặc bằng pivot chia vào phần nhỏ .\nGọi đệ_quy để sắp_xếp 2 phần .\nƯu_điểm Chạy nhanh (nhanh nhất trong các thuật_toán sắp_xếp dựa trên việc só sánh các phần tử) .\nDo_đó quicksort được sử_dụng trong nhiều thư_viện của các ngôn_ngữ như Java , C++ (hàm sort của C++ dùng Intro sort , là kết_hợp của Quicksort và Insertion_Sort) .\nNhược_điểm Tùy thuộc vào cách chia thành 2 phần , nếu chia không tốt , độ phức_tạp trong trường_hợp xấu nhất có_thể là \\mathcalO(N2) .\nNếu ta chọn pivot ngẫu_nhiên , thuật_toán chạy với độ phức_tạp trung_bình là \\mathcalO(NlogN) (trong trường_hợp xấu nhất vẫn là \\mathcalO(N2) , nhưng ta sẽ không bao_giờ gặp_phải trường_hợp đó) .\nKhông ổn_định .\nCode void quickSort ( int a , int left , int right ) int i = left , j = right ; int pivot = a left + rand () % ( right - left ); // chia dãy thành 2 phần while ( i lt;= j ) while ( a i lt; pivot ) ++ i ; while ( a j gt; pivot ) -- j ; if ( i lt;= j ) swap ( a i , a j ); ++ i ; -- j ; // Gọi đệ_quy để sắp_xếp các nửa if ( left lt; j ) quickSort ( a , left , j ); if ( i lt; right ) quickSort ( a , i , right ); Minh_họa Bạn có_thể vào VisuAlgo .\nChọn_Quick ở thanh menu bên_trên .\nẤn vào nút Create ở phía dưới trang để tạo một dãy mới Ấn vào Sort , rồi Go để chạy thuật_toán .\nSắp_xếp cơ_số (RadixSort) Ý_tưởng Khác với tất_cả các thuật_toán nêu trên , RadixSort không sử_dụng việc so_sánh 2 phần_tử .\nĐầu_tiên , thuật_toán sẽ chia các phần_tử thành các nhóm , dựa trên chữ_số cuối_cùng (hoặc dựa theo bit cuối_cùng , hoặc vài bit cuối cùng) .\nSau_đó ta đưa các nhóm lại với_nhau , và được danh_sách sắp_xếp theo chữ_số cuối của các phần_tử .\nQuá_trình này lặp_đi lặp_lại với chữ_số át cuối cho tới khi tất_cả vị_trí chữ_số đã sắp_xếp .\nƯu_điểm Có_thể chạy nhanh hơn các thuật_toán sắp_xếp sử_dụng so_sánh .\nVí_dụ nếu ta sắp_xếp các số_nguyên 32 bit , và chia nhóm theo 1 bit , thì độ phức_tạp là \\mathcalO(N) .\nTrong trường_hợp tổng_quát , độ phức_tạp là \\mathcalO(Nlog(max(a_i))) Nhược_điểm Không_thể sắp_xếp số_thực .\nMinh_họa Bạn có_thể vào VisuAlgo .\nChọn_Radix ở thanh menu bên_trên .\nẤn vào nút Create ở phía dưới trang để tạo một dãy mới Ấn vào Sort , rồi Go để chạy thuật_toán .\nNguồn tham_khảo Topcoder_VisuAlgo_Wikipedia\n", "tagged": "Giới_thiệu/V Ứng_dụng/V về/E sắp_xếp/V có/V ở/E khắp/A mọi/L nơi/N :/CH Một/M danh_sách/N lớp/N với/E các/L học_sinh/N được/V sắp_xếp/V theo/V thứ_tự/N bảng_chữ_cái/Np ./CH\nMột_danh_bạ/Np điện_thoại/N ./CH\nDanh_sách/N các/L truy_vấn/Np được/V tìm_kiếm/V nhiều/A nhất/A trên/E Google/Np ./CH\nThuật_toán/N sắp_xếp/V cũng/R được/V dùng/V kết_hợp/V với/E những/L thuật_toán/N khác/A ,/CH như/C tìm_kiếm/V nhị_phân/Np ,/CH thuật_toán/N Kruskal/Np để/E tìm/V cây/N khung/N nhỏ/A nhất/A của/E đồ_thị/Np ./CH\nVì_sao/X chúng_ta/P phải/V học/V nhiều/A thuật_toán/N sắp_xếp/V ?/CH\nKhi/N code/Np ,/CH bạn/N chỉ_cần/Np biết/V cài/V một/M thuật_toán/N sắp_xếp/V là/V đủ/A ./CH\nHoặc/Cc nếu/C bạn/N code/Np C++/Np hay/Cc Java/Np ,/CH bạn/N chỉ_cần/Np biết/V cách/N gọi/V thư_viện/N ./CH\nTuy_nhiên/C ,/CH các/L thuật_toán/N sắp_xếp/V khác_nhau/Np cho/E ta/P nhiều/A ý_tưởng/N hay/Cc và/Cc độc_đáo/A -/CH điều/N này/P vô_cùng/R hữu_ích/A khi/N các/L bạn_học/Np các/L thuật_toán/N khác/A ./CH\nNhững/L điểm/N cần/V chú_ý/V Hãy/R thử/V tưởng_tượng/V bạn/N có_một/Np bộ/N bài/N đã/R được/V xáo/V ,/CH và/Cc bạn/N muốn/V sắp_xếp/V lại/R các/L lá_bài/Np theo/V thứ_tự/N tăng/V dần/R ./CH\nBạn/N sẽ/R làm/V như/C nào/P ?/CH\nCó/V rất/R nhiều/A cách/N tiếp_cận/V khác_nhau/Np :/CH Chia/V bộ/N bài/N theo/V giá_trị/N :/CH 2/M ,/CH 3/M ,/CH 4/M ./CH ./CH ./CH\nRồi/C gộp/V lại/R ./CH\nTrải/V tất_cả/P các/L lá_bài/Np ra/V ,/CH rồi/C lần_lượt/R lấy/V lá_bài/Np nhỏ/A nhất/A ./CH\nChia/V bộ/N bài/N ra/V thành/V nhiều/A nhóm/N nhỏ/A ./CH\nVới/E mỗi/L nhóm/N ,/CH sắp_xếp/V lại/R ,/CH sau_đó/Np gộp/V các/L nhóm/N lại/R với_nhau/Np theo/V thứ_tự/N tăng/V dần/R ./CH\nBạn/N sẽ/R thấy/V những/L cách/N tiếp_cận/V khác_nhau/Np sẽ/R có/V thời_gian/N nhanh/A chậm/A khác_nhau/Np ./CH\nCác/L thuật_toán/N sắp_xếp/V cũng_vậy/Np ./CH\nCó/V rất/R nhiều/A cách/N tiếp_cận/V ,/CH với/E ưu/N ,/CH nhược_điểm/N khác_nhau/Np ./CH\nKhi/N so_sánh/V giữa/N các/L thuật_toán/N này/P với_nhau/Np ,/CH có/V nhiều/A vấn_đề/N phải/V quan_tâm/V ./CH\nThời_gian/N chạy/V ./CH\nĐối_với/E các/L dữ_liệu/N rất/R lớn/A ,/CH các/L thuật_toán/N không/R hiệu_quả/N sẽ/R chạy/V rất/R chậm/A và/Cc không_thể/R ứng_dụng/V trong/E thực_tế/N ./CH\nBộ_nhớ/Np ./CH\nCác/L thuật_toán/N nhanh/A đòi_hỏi/V đệ_quy/Np sẽ/R có_thể/R phải/V tạo/V ra/V các/L bản/Nc copy/Np của/E dữ_liệu/N đang/R xử_lí/V ./CH\nVới/E những/L hệ_thống/N mà/C bộ_nhớ/Np có/V giới_hạn/V (ví/Np dụ/V embedded/Np system)/Np ,/CH một_vài/L thuật_toán/N sẽ/R không_thể/R chạy/V được/V ./CH\nĐộ/N ổn_định/A (/CH stability/Np )/CH ./CH\nĐộ/N ổn_định/A được/V định_nghĩa/N dựa/V trên/E điều/N gì/P sẽ/R xảy_ra/Np với/E các/L phần_tử/N có_giá/Np trị/V giống/N nhau/N ./CH\nĐối_với/E thuật_toán/N sắp_xếp/V ổn_định/A ,/CH các/L phần_tử/N bằng/E với/E giá_trị/N bằng_nhau/Np sẽ/R giữ_nguyên/Np thứ_tự/N trong/E mảng/N trước_khi/Np sắp_xếp/V ./CH\nĐối_với/E thuật_toán/N sắp_xếp/V không/R ổn_định/A ,/CH các/L phần_tử/N có_giá/Np trị/V bằng_nhau/Np sẽ/R có_thể/R có/V thứ_tự/N bất_kỳ/A ./CH\nTrong/E bài/N viết/V này/P ,/CH ta/P giả_sử/Np cần/V sắp_xếp/V tăng/V dần/R các/L phần_tử/N ./CH\nĐể/E sắp_xếp/V giảm_dần/Np ,/CH ta/P có/V nhiều/A cách/N :/CH Sửa_đổi/V thuật_toán/N một_cách/N phù_hợp/V ./CH\nSắp_xếp/V ,/CH sau_đó/Np đảo_ngược/V thứ_tự/N các/L phần_tử/N ./CH\nĐịnh_nghĩa/N lại/R việc/N so_sánh/V nhỏ/A hơn/A ./CH\nSắp_xếp/V nổi_bọt/Np (Bubble/Np sort)/Np Đây/P là/V thuật_toán/N cơ_bản/A nhất/A cho/E việc/N sắp_xếp/V ./CH\nÝ_tưởng/N Xét/V lần_lượt/R các/L cặp/N 2/M phần_tử/N liên_tiếp/A ./CH\nNếu/C phần_tử/N đứng/V sau/E nhỏ/A hơn/A phần_tử/N đứng/V trước/E ,/CH ta/P đổi/V chỗ/N 2/M phần_tử/N ./CH\nNói_cách_khác/Np ,/CH phần_tử/N nhỏ/A nhất/A sẽ/R nổi_lên/Np trên/E ./CH\nLặp_lại/Np đến/E khi_không/N còn/R 2/M phần_tử/N nào/P thỏa_mãn/V ./CH\nCó_thể/R chứng_minh/V được/V số/N lần_lặp/Np không/R quá/R N/Ny -/CH 1/M ,/CH do/E một/M phần_tử/N chỉ_có/Np thể/N nổi_lên/Np trên/E không/R quá/R N-1/Np lần/N ./CH\nƯu_điểm/N Code/Np đơn_giản/A ,/CH dễ_hiểu/Np Không/R tốn/V thêm/V bộ_nhớ/Np Nhược_điểm/N Độ/N phức_tạp/A \\mathcalO(N2)/Np ,/CH không/R đủ/A nhanh/A với/E dữ_liệu/N lớn/A ./CH\nCode/Np for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;/Np n/Ny ;/CH i/M ++/Np )/CH for/Np (/CH int/Np j/Np =/CH 0/M ;/CH j/Np lt;/Np n/Ny -/CH 1/M ;/CH j/Np ++/Np )/CH if/Np (/CH a/Ni j/Np gt;/Np a/Ni j/Np +/CH 1/M )/CH swap/Np (/CH a/Ni j/Np ,/CH a/Ni j/Np +/CH 1/M );/CH Minh_họa/V Bạn/N có_thể/R vào/E VisuAlgo/Np ./CH\nChọn_Bubble/Np ở/E thanh/N menu/Np bên_trên/Np ./CH\nẤn/V vào/E nút/N Create/Np ở/E phía/N dưới/E trang/N để/E tạo/V một/M dãy/Nc mới/R Ấn/V vào/E Sort/Np ,/CH rồi/C Go/Np để/E chạy/V thuật_toán/N ./CH\nSắp_xếp/V chèn/V (Insertion/Np Sort)/Np Ý_tưởng/N Ý_tưởng/N chính/T của/E thuật_toán/N là/V ta/P sẽ/R sắp_xếp/V lần_lượt/R từng/R đoạn/Nc gồm/V 1/M phần_tử/N đầu_tiên/A ,/CH 2/M phần_tử/N đầu_tiên/A ,/CH ./CH ./CH ./CH ,/CH N/Ny phần_tử/N ./CH\nGiả_sử_ta/Np đã/R sắp_xếp/V xong/V i/M phần_tử/N của/E mảng/N ./CH\nĐể/E sắp_xếp/V i+1/Np phần_tử/N đầu_tiên/A ,/CH ta/P tìm/V vị_trí/N phù_hợp/V của/E phần_tử/N thứ/N i+1/Np và/Cc \"chèn\"/Np nó/P vào/E đó/P ./CH\nƯu_điểm/N Nếu/C danh_sách/N đã/R gần/A đúng/A thứ_tự/N ,/CH Insertion_Sort/Np sẽ/R chạy/V rất/R nhanh/A ./CH\nVí_dụ/C bạn/N cần/V sắp_xếp/V Highscore/Np trong/E game/N ./CH\nNhược_điểm/N Độ/N phức_tạp/A \\mathcalO(N2)/Np ,/CH không/R đủ/A nhanh/A với/E dữ_liệu/N lớn/A ./CH\nCode/Np for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;/Np n/Ny ;/CH i/M ++/Np )/CH //CH Tìm/V vị_trí/N phù_hợp/V cho/E i/M int/Np j/Np =/CH i/M ;/CH while/Np (/CH j/Np gt;/Np 0/M amp;amp;/Np data/Np i/M lt;/Np data/Np j/Np -/CH 1/M )/CH --/Np j/Np ;/CH //CH Đưa/V i/M về/E đúng/A vị_trí/N int/Np tmp/Np =/CH data/Np i/M ;/CH for/Np (/CH int/Np k/N =/CH i/M ;/CH k/N gt;/Np j/Np ;/CH k/N --/Np )/CH data/Np k/N =/CH data/Np k/N -/CH 1/M ;/CH data/Np j/Np =/CH tmp/Np ;/CH Minh_họa/V Bạn/N có_thể/R vào/E VisuAlgo/Np ./CH\nChọn_Insert/Np ở/E thanh/N menu/Np bên_trên/Np ./CH\nẤn/V vào/E nút/N Create/Np ở/E phía/N dưới/E trang/N để/E tạo/V một/M dãy/Nc mới/R Ấn/V vào/E Sort/Np ,/CH rồi/C Go/Np để/E chạy/V thuật_toán/N ./CH\nSắp_xếp/V trộn/V (Merge/Np sort)/Np Ý_tưởng/N Sắp_xếp/V trộn/V hoạt_động/N kiểu/N đệ_quy/Np :/CH Đầu_tiên/A chia/V dữ_liệu/N thành/V 2/M phần/N ,/CH và/Cc sắp_xếp/V từng/R phần/N ./CH\nSau_đó/Np gộp/V 2/M phần/N lại/R với_nhau/Np ./CH\nĐể/E gộp/V 2/M phần/N ,/CH ta/P làm/V như_sau/Np :/CH Tạo/V một/M dãy/Nc A/Ni mới/R để/E chứa/V các/L phần_tử/N đã/R sắp_xếp/V ./CH\nSo_sánh/V 2/M phần_tử/N đầu_tiên/A của/E 2/M phần/N ./CH\nPhần_tử/N nhỏ/A hơn/A ta/P cho/E vào/E A/Ni và/Cc xóa_khỏi/Np phần/N tương_ứng/V ./CH\nTiếp_tục/V như_vậy/X đến/E khi/N ta/P cho/E hết/V các/L phần_tử/N vào/E dãy/Nc A/Ni ./CH\nƯu_điểm/N Chạy/V nhanh/A ,/CH độ/N phức_tạp/A \\mathcalO(NlogN)/Np ./CH\nỔn_định/A Nhược_điểm/N Cần_dùng/Np thêm/V bộ_nhớ/Np để/E lưu_mảng/Np A/Ni ./CH\nCode/Np int/Np a/Ni MAXN/Np ;/CH //CH mảng/N trung_gian/N cho/E việc/N sắp_xếp/V //CH Sắp_xếp/V các/L phần_tử/N có/V chỉ_số/N từ/E left/Np đến/E right/Np của/E mảng/N data/Np ./CH\nvoid/Np mergeSort/Np (/CH int/Np data/Np MAXN/Np ,/CH int/Np left/Np ,/CH int/Np right/Np )/CH if/Np (/CH data/Np ./CH\nlength/Np ==/Np 1/M )/CH //CH Dãy/Nc chỉ/R gồm/V 1/M phần_tử/N ,/CH ta/P không/R cần/V sắp_xếp/V ./CH\nreturn/Np ;/CH int/Np mid/Np =/CH (/CH left/Np +/CH right/Np )/CH //CH 2/M ;/CH //CH Sắp_xếp/V 2/M phần/N mergeSort/Np (/CH data/Np ,/CH left/Np ,/CH mid/Np );/CH mergeSort/Np (/CH data/Np ,/CH mid/Np +/CH 1/M ,/CH right/Np );/CH //CH Trộn/V 2/M phần/N đã/R sắp_xếp/V lại/R int/Np i/M =/CH left/Np ,/CH j/Np =/CH mid/Np +/CH 1/M ;/CH //CH phần_tử/N đang/R xét/V của/E mỗi/L nửa/M int/Np cur/Np =/CH 0/M ;/CH //CH chỉ_số/N trên/E mảng/N a/Ni while/Np (/CH i/M lt;=/Np mid/Np j/Np lt;=/Np right/Np )/CH //CH chừng_nào/Np còn/R 1/M phần/N chưa/R hết/V phần_tử/N ./CH\nif/Np (/CH i/M gt;/Np mid/Np )/CH //CH bên/N trái/Nc không/R còn/R phần_tử/N nào/P a/Ni cur/Np ++/Np =/CH data/Np j/Np ++/Np ;/CH else/Np if/Np (/CH j/Np gt;/Np right/Np )/CH //CH bên/N phải/V không/R còn/R phần_tử/N nào/P a/Ni cur/Np ++/Np =/CH data/Np i/M ++/Np ;/CH else/Np if/Np (/CH data/Np i/M lt;/Np data/Np j/Np )/CH //CH phần_tử/N bên/N trái/Nc nhỏ/A hơn/A a/Ni cur/Np ++/Np =/CH data/Np i/M ++/Np ;/CH else/Np a/Ni cur/Np ++/Np =/CH data/Np j/Np ++/Np ;/CH //CH copy/Np mảng/N a/Ni về/E mảng/N data/Np for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;/Np cur/Np ;/CH i/M ++/Np )/CH data/Np left/Np +/CH i/M =/CH a/Ni i/M ;/CH Minh_họa/V Bạn/N có_thể/R vào/E VisuAlgo/Np ./CH\nChọn_Merge/Np ở/E thanh/N menu/Np bên_trên/Np ./CH\nẤn/V vào/E nút/N Create/Np ở/E phía/N dưới/E trang/N để/E tạo/V một/M dãy/Nc mới/R Ấn/V vào/E Sort/Np ,/CH rồi/C Go/Np để/E chạy/V thuật_toán/N ./CH\nSắp_xếp/V vun/V đống/N (HeapSort)/Np Ý_tưởng/N Ta/P lưu_mảng/Np vào/E CTDL_Heap/Np ./CH\nỞ/E mỗi/L bước/V ,/CH ta/P lấy/V ra/V phần_tử/N nhỏ/A nhất/A trong/E heap/Np ,/CH cho/E vào/E mảng/N đã/R sắp_xếp/V ./CH\nƯu_điểm/N Cài_đặt/V đơn_giản/A nếu/C đã/R có_sẵn/Np thư_viện/N Heap/Np ./CH\nChạy/V nhanh/A ,/CH độ/N phức_tạp/A \\mathcalO(NlogN)/Np ./CH\nNhược_điểm/N Không/R ổn_định/A Code_Heap/Np h/Ny =/CH Heap/Np ();/Np for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;/Np n/Ny ;/CH i/M ++/Np )/CH //CH thêm/V phần_tử/N vào/E heap/Np h/Ny ./CH\npush/Np (/CH data/Np i/M );/CH int/Np a/Ni MAXN/Np ;/CH for/Np (/CH int/Np i/M =/CH 0/M ;/CH i/M lt;/Np n/Ny ;/CH i/M ++/Np )/CH //CH lấy/V phần_tử/N nhỏ/A nhất/A và/Cc cho/E vào/E mảng/N đã/R sắp_xếp/V a/Ni i/M =/CH h/Ny ./CH\npop/Np ();/Np Sắp_xếp/V nhanh/A (QuickSort)/Np Ý_tưởng/N Chia/V dãy/Nc thành/V 2/M phần/N ,/CH một/M phần/N \"lớn\"/Np và/Cc một/M phần/N \"nhỏ\"/Np ./CH\nChọn/V một/M khóa/N pivot/Np Những/L phần_tử/N lớn/A hơn/A pivot/Np chia/V vào/E phần_lớn/N Những/L phần_tử/N nhỏ/A hơn/A hoặc/Cc bằng/E pivot/Np chia/V vào/E phần/N nhỏ/A ./CH\nGọi/V đệ_quy/Np để/E sắp_xếp/V 2/M phần/N ./CH\nƯu_điểm/N Chạy/V nhanh/A (nhanh/Np nhất/A trong/E các/L thuật_toán/N sắp_xếp/V dựa/V trên/E việc/N só/Np sánh/V các/L phần/N tử)/Np ./CH\nDo_đó/C quicksort/Np được/V sử_dụng/V trong/E nhiều/A thư_viện/N của/E các/L ngôn_ngữ/N như/C Java/Np ,/CH C++/Np (hàm/Np sort/Np của/E C++/Np dùng/V Intro/Np sort/Np ,/CH là/V kết_hợp/V của/E Quicksort/Np và/Cc Insertion_Sort)/Np ./CH\nNhược_điểm/N Tùy/V thuộc/V vào/E cách/N chia/V thành/V 2/M phần/N ,/CH nếu/C chia/V không/R tốt/A ,/CH độ/N phức_tạp/A trong/E trường_hợp/N xấu/A nhất/A có_thể/R là/V \\mathcalO(N2)/Np ./CH\nNếu/C ta/P chọn/V pivot/Np ngẫu_nhiên/A ,/CH thuật_toán/N chạy/V với/E độ/N phức_tạp/A trung_bình/A là/V \\mathcalO(NlogN)/Np (trong/Np trường_hợp/N xấu/A nhất/A vẫn/R là/V \\mathcalO(N2)/Np ,/CH nhưng/C ta/P sẽ/R không/R bao_giờ/P gặp_phải/Np trường_hợp/N đó)/Np ./CH\nKhông/R ổn_định/A ./CH\nCode/Np void/Np quickSort/Np (/CH int/Np a/Ni ,/CH int/Np left/Np ,/CH int/Np right/Np )/CH int/Np i/M =/CH left/Np ,/CH j/Np =/CH right/Np ;/CH int/Np pivot/Np =/CH a/Ni left/Np +/CH rand/Np ()/Np %/CH (/CH right/Np -/CH left/Np );/CH //CH chia/V dãy/Nc thành/V 2/M phần/N while/Np (/CH i/M lt;=/Np j/Np )/CH while/Np (/CH a/Ni i/M lt;/Np pivot/Np )/CH ++/Np i/M ;/CH while/Np (/CH a/Ni j/Np gt;/Np pivot/Np )/CH --/Np j/Np ;/CH if/Np (/CH i/M lt;=/Np j/Np )/CH swap/Np (/CH a/Ni i/M ,/CH a/Ni j/Np );/CH ++/Np i/M ;/CH --/Np j/Np ;/CH //CH Gọi/V đệ_quy/Np để/E sắp_xếp/V các/L nửa/M if/Np (/CH left/Np lt;/Np j/Np )/CH quickSort/Np (/CH a/Ni ,/CH left/Np ,/CH j/Np );/CH if/Np (/CH i/M lt;/Np right/Np )/CH quickSort/Np (/CH a/Ni ,/CH i/M ,/CH right/Np );/CH Minh_họa/V Bạn/N có_thể/R vào/E VisuAlgo/Np ./CH\nChọn_Quick/Np ở/E thanh/N menu/Np bên_trên/Np ./CH\nẤn/V vào/E nút/N Create/Np ở/E phía/N dưới/E trang/N để/E tạo/V một/M dãy/Nc mới/R Ấn/V vào/E Sort/Np ,/CH rồi/C Go/Np để/E chạy/V thuật_toán/N ./CH\nSắp_xếp/V cơ_số/N (RadixSort)/Np Ý_tưởng/N Khác/A với/E tất_cả/P các/L thuật_toán/N nêu/V trên/E ,/CH RadixSort/Np không/R sử_dụng/V việc/N so_sánh/V 2/M phần_tử/N ./CH\nĐầu_tiên/A ,/CH thuật_toán/N sẽ/R chia/V các/L phần_tử/N thành/V các/L nhóm/N ,/CH dựa/V trên/E chữ_số/Np cuối_cùng/A (hoặc/Np dựa/V theo/V bit/Np cuối_cùng/A ,/CH hoặc/Cc vài/L bit/Np cuối/N cùng)/Np ./CH\nSau_đó/Np ta/P đưa/V các/L nhóm/N lại/R với_nhau/Np ,/CH và/Cc được/V danh_sách/N sắp_xếp/V theo/V chữ_số/Np cuối/N của/E các/L phần_tử/N ./CH\nQuá_trình/N này/P lặp_đi/Np lặp_lại/Np với/E chữ_số/Np át/Np cuối/N cho/E tới/E khi/N tất_cả/P vị_trí/N chữ_số/Np đã/R sắp_xếp/V ./CH\nƯu_điểm/N Có_thể/R chạy/V nhanh/A hơn/A các/L thuật_toán/N sắp_xếp/V sử_dụng/V so_sánh/V ./CH\nVí_dụ/C nếu/C ta/P sắp_xếp/V các/L số_nguyên/Np 32/M bit/Np ,/CH và/Cc chia/V nhóm/N theo/V 1/M bit/Np ,/CH thì/C độ/N phức_tạp/A là/V \\mathcalO(N)/Np ./CH\nTrong/E trường_hợp/N tổng_quát/Np ,/CH độ/N phức_tạp/A là/V \\mathcalO(Nlog(max(a_i)))/Np Nhược_điểm/N Không_thể/R sắp_xếp/V số_thực/Np ./CH\nMinh_họa/V Bạn/N có_thể/R vào/E VisuAlgo/Np ./CH\nChọn_Radix/Np ở/E thanh/N menu/Np bên_trên/Np ./CH\nẤn/V vào/E nút/N Create/Np ở/E phía/N dưới/E trang/N để/E tạo/V một/M dãy/Nc mới/R Ấn/V vào/E Sort/Np ,/CH rồi/C Go/Np để/E chạy/V thuật_toán/N ./CH\nNguồn/N tham_khảo/V Topcoder_VisuAlgo_Wikipedia/Np\n", "title": "Thuật toán sắp xếp\n", "link": "http://vnoi.info/wiki/algo/basic/sorting\n"}