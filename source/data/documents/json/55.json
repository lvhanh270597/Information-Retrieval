{"content": "Bài viết gốc : The_Importance of_Algorithms - đăng bởi lbackstrom trên Topcoder Mở_đầu Để hiểu được tầm quan_trọng của việc học và hiểu về thuật_toán , đầu_tiên_ta cần_định_nghĩa chính_xác \"Thuật toán là gì ? \" .\nTheo_như cuốn sách nổi_tiếng Introduction to Algorithms (Mở đầu về thuật toán) , thì \"thuật toán\" là \"một quá_trình tính_toán cụ_thể , trong đó lấy một hay nhiều giá_trị làm_đầu vào ( input ) và cho ra một hay nhiều giá_trị kết_quả ( output )\" .\nNói_cách_khác , thuật_toán giống_như bản_đồ chỉ đường giúp ta giải_quyết một vấn_đề rõ_ràng , cụ_thể .\nVí_dụ , nhiều dòng code để tính dãy Fibonacci là một_cách cài_đặt của một thuật_toán nào_đó .\nMột hàm để cộng hai số cũng được gọi_là một thuật_toán , mặc_dù nó rất đơn_giản .\nMột_số thuật_toán , như thuật để tính dãy Fibonacci , khá trực_quan và ta có_thể suy ra nhờ vào suy_luận logic cũng_như kĩ_năng giải bài .\nTuy_nhiên , đối_với những thuật_toán phức_tạp hơn , chúng_ta cần học và hiểu , để làm nền_tảng cho việc giải_quyết những bài_toán khó hơn .\nTrong cuộc_sống hàng_ngày , những việc tưởng_chừng_như đơn_giản như kiểm_tra email hay nghe nhạc đều đòi_hỏi những thuật_toán rất phức_tạp .\nTrong bài viết này , chúng_ta sẽ cùng xem một_vài ví_dụ về cách áp_dụng thuật_toán .\nPhân_tích thời_gian_thực hiện thuật_toán Một trong những yếu_tố quan_trọng nhất của một thuật_toán là việc nó chạy nhanh hay chậm .\nNghĩ_ra một thuật để giải một bài_toán là việc dễ , nhưng để nó có_ý nghĩa trong thực_tế , thì thuật_toán phải chạy đủ nhanh .\nTốc_độ của một thuật tùy thuộc vào tốc_độ máy cũng_như chi_tiết cài_đặt , các nhà_khoa_học máy_tính thường đề_cập đến runtime (thời gian chạy) tương_ứng với kích_thước input .\nVí_dụ , nếu input gồm N số , một thuật_toán có thời_gian chạy tỉ_lệ_thuận với N2 được kí_hiệu là O(N2) .\nKý_hiệu này nghĩa_là , khi máy_tính chạy một chương_trình cài_đặt thuật_toán trên với độ lớn input là N , chương_trình sẽ tốn CN2 giây , với C là một hằng_số không phụ_thuộc vào kích_thước input .\nTuy_nhiên , thời_gian chạy thực_tế của nhiều thuật_toán phức_tạp còn phụ_thuộc nhiều yếu_tố khác ngoài độ lớn input .\nVí_dụ , một thuật_toán sắp_xếp sẽ chạy nhanh hơn nhiều khi được xử_lí một dãy_số đã sắp_xếp sẵn so_với khi phải giải_quyết một dãy_số lộn_xộn .\nTừ_đó sinh_ra hai khái_niệm : thời_gian chạy tối_đa và thời_gian chạy trung_bình .\nThời_gian chạy tối_đa là thời_gian thuật_toán cần để xử_lí input trong trường_hợp tồi nhất .\nThời_gian chạy trung_bình là thời_gian trung_bình cho mọi input có_thể xuất_hiện .\nTrong 2 thuật_ngữ , thời_gian tối_đa thường dễ phân_tích hơn , nên nó thường được sử_dụng để đánh_giá các thuật_toán .\nViệc tính_toán độ phức_tạp nhiều lúc không đơn_giản vì ta không_thể kiểm_tra được hết mọi trường_hợp .\nBạn có_thể tìm đọc thêm về một_số kĩ_năng tính_toán độ phức_tạp ở các nguồn khác .\nƯớc_tính thời_gian chạy_của các thuật , N = 100 O(Log(N)) : 10-7 giây O(N) : 10-6 giây O(NLog(N)) : 10-5 giây O(N2) : 10-4 giây O(N6) : 3 phút O(2N) : 1014 năm O(N ! ) : 10142 năm Sắp_xếp Thuật_toán sắp_xếp là một thuật_toán rất hay được sử_dụng trong khoa_học máy_tính .\nCách đơn_giản nhất để sắp_xếp một nhóm đồ_vật là lấy ra món đồ nhỏ nhất và đặt lên đầu .\nTa lại lấy ra món đồ nhỏ thứ_hai và đặt cạnh món đầu tiên; cứ thế tiếp_tục .\nĐáng_tiếc , độ phức_tạp của thuật_toán này là O(N2) , tức_thời gian chạy_của thuật sẽ tương_ứng với bình_phương độ lớn input .\nNếu_cần sắp_xếp 1 tỉ_số , thuật sẽ cần 1018 câu_lệnh máy_tính (instructions) .\nĐể dễ hình_dung thì một chiếc máy_tính hiện_đại mỗi giây chỉ giải_quyết được gần 109 câu_lệnh , và sẽ cần nhiều năm_mới sắp_xếp xong 1 tỉ con_số nói trên .\nMay_thay , có nhiều thuật_toán sắp_xếp khác hiệu_quả hơn như Quick_Sort , Heap_Sort , Merge_Sort , . . .\nNhiều thuật có độ phức_tạp chỉ O(NLog(N)) .\nĐộ phức_tạp nhỏ hơn rút_ngắn rất nhiều thời_gian để sắp_xếp 1 tỉ con_số , đến_mức một chiếc máy_tính bình_thường nhất cũng thực_hiện được trong chưa đến một phút .\nThay_vì 1018 câu_lệnh , máy chỉ phải thực_hiện 1010 .\nĐường_đi ngắn nhất Thuật_toán tìm đường_đi ngắn nhất giữa hai điểm đã được nghiên_cứu từ rất lâu .\nỨng_dụng của thuật_toán này rất nhiều , nhưng tạm_thời hãy xét bài_toán cơ_bản nhất : tìm đường_đi ngắn nhất từ A đến B trong một thành_phố với một_số con_đường và giao_lộ .\nCó rất nhiều thuật_toán được phát_triển để giải_quyết các bài kiểu này , với mỗi phương_pháp có ưu nhược_điểm riêng .\nTrước_khi tìm_hiểu về chúng , hãy xem thử \"thuật trâu\" - xét hết các khả_năng - sẽ mất bao_lâu để giải .\nĐáng_tiếc , ta sẽ không sống đủ lâu để biết kết_quả từ phương_pháp này - cho_dù A và B đều ở trong một thị_trấn nhỏ , bởi độ phức_tạp của thuật là O(C_N) , với C là hằng_số .\nDù_C có nhỏ , C_N sẽ trở_nên lớn khủng_khiếp ngay_cả với các giá_trị vừa_phải của N .\nMột trong những thuật_toán nhanh nhất để giải_quyết bài_toán này có độ phức_tạp O(E_Log(V)) , với E là số đường_đi , V là số giao_lộ .\nĐể dễ hình_dung , thuật_toán sẽ mất 2 giây để tìm đường_đi ngắn nhất trong thành_phố có 10000 giao_lộ và 20000 con_đường .\nThuật_toán này - Djikstra - khá phức_tạp và đòi_hỏi sử_dụng cấu_trúc dữ_liệu Hàng đợi ưu_tiên (Priority Queue) .\nTuy_nhiên có những trường_hợp mà ngay_cả Djisktra cũng trở_nên quá chậm (ví dụ đường_đi ngắn nhất từ Hà_Nội đến Sillicon_Valley - có đến hàng tỉ giao lộ) , các lập_trình_viên sẽ sử_dụng heuristics .\nHeuristics là một hàm xấp_xỉ của một tính_chất của bài_toán .\nVí_dụ , trong bài_toán này , 1 heuristic có_thể là khoảng_cách đường_chim_bay giữa 2 điểm .\nSử_dụng heuristic , chúng_ta có_thể tìm được_lời giải nhanh hơn , ví_dụ thuật_toán A có_thể chạy nhanh hơn Dijkstra trong nhiều trường_hợp .\nPhương_pháp này không_phải lúc nào cũng rút_ngắn thời_gian chạy_của thuật trong trường_hợp tệ nhất , nhưng nó hiệu_quả với phần_lớn trường_hợp trong thực_tế .\nThuật_toán xấp_xỉ Thế_nhưng đôi_khi , ngay_cả với thuật mạnh nhất , dùng heuristics tốt nhất , chạy trên máy_tính nhanh nhất cũng trở_nên quá chậm .\nĐối_với các trường_hợp này ta buộc phải hi_sinh phần_nào sự chính_xác của kết_quả .\nThay_vì cố đi tìm đường_đi ngắn nhất , ta đã có_thể thỏa_mãn với một con_đường không dài hơn 10% so_với kết_quả tối_ưu .\nThực_tế , có nhiều bài_toán quan_trọng mà thuật tối_ưu của chúng quá chậm và không sử_dụng được .\nNhóm bài nổi_tiếng nhất cho tính_cách này được gọi_là NP - non-deterministic polynomial .\nKhi một bài_toán nào_đó được cho_là NP-hard hay NP-complete , đồng_nghĩa không_ai biết thuật_toán tối_ưu của nó .\nHơn_nữa , nếu ai đó nghĩ_ra được thuật tối_ưu cho một bài_toán NP-complete , thuật đó cũng áp_dụng được cho mọi bài_toán NP-complete khác .\nMột ví_dụ nổi_tiếng của NP-hard là bài_toán Người bán_hàng (Traveling Salesman_Problem - TSP) .\nMột người bán_hàng cần đi đến N thành_phố , và anh ta biết cần bao_lâu để đi từ một thành_phố đến một thành_phố khác .\nCâu_hỏi đặt ra là , nhanh nhất_thì mất bao_lâu để anh ta đi hết N thành_phố ?\nBởi thuật_toán nhanh nhất cho TSP vẫn quá chậm - nhiều người tin là điều này sẽ luôn đúng - ta tìm đến những phương_pháp đủ nhanh mà đưa_ra được kết_quả gần đúng , thay_vì thuật_toán tối_ưu .\nThuật_toán ngẫu_nhiên Một_cách tiếp_cận vấn_đề khác đó là thử \"random\" theo một_cách nào_đó .\nTuy không cải_thiện tốc_độ trong trường_hợp xấu nhất , biện_pháp này sẽ có hiệu_quả với những trường_hợp bình_thường .\nQuickSort là một ví_dụ điển_hình cho việc random như_vậy .\nKhi \"suy biến\" , QuickSort sẽ sắp_xếp một dãy trong O(N2) , với N là số phần_tử của dãy .\nNhưng nếu áp_dụng random vào thuật_toán , xác_suất xảy_ra suy_biến là cực_kì thấp , và độ phức_tạp trung_bình của QuickSort trở_thành O(N_Log(N)) .\nCó những thuật có độ phức_tạp O(N\\_Log(N)) kể_cả ở trường_hợp xấu , nhưng chúng sẽ chậm hơn ở trường_hợp bình_thường .\nDù độ phức_tạp cùng là O(NLog(N)) , QuickSort có hằng_số C nhỏ hơn nhiều , tức số phép_tính cần thực_hiện nhỏ hơn .\nMột thuật_toán khác dùng random để tìm trung_vị của một dãy với độ phức_tạp trung_bình O(N) .\nĐây là cải_tiến rất lớn so_với việc sắp_xếp lại dãy và chọn ra phần_tử giữa vốn có độ phức_tạp O(NLog(N)) .\nThêm nữa , cho_dù vẫn có các thuật_toán tìm trung_vị không-random với độ phức_tạp O(N) , thuật_toán này vẫn được áp_dụng nhiều hơn nhờ cài_đặt giản và tốc_độ chạy nhanh hơn .\nÝ_tưởng chính của Thuật_toán trung_vị này là chọn ngẫu_nhiên một_số X bất_kì trong dãy , và đếm xem có bao_nhiêu số nhỏ hơn nó .\nGiả_sử dãy có N số , và có K số nhỏ hơn hoặc bằng X .\nNếu_Klt;N/2 , vậy_ta biết trung_vị sẽ là số thứ (N/2 - K) lớn hơn X .\nTa bỏ_đi K số nhỏ hơn hoặc bằng X .\nBây_giờ ta phải tìm số nhỏ thứ (N/2-K) , thay_vì số trung_vị .\nTa tiếp_tục random một_số X khác , và lặp_lại .\nCompression - Nén_Một lớp khác của thuật_toán sẽ xử_lí những vấn_đề như data compression (nén dữ liệu) .\nLoại thuật_toán này không có output xác_định mà thay vào đó cố_gắng tối_ưu ở những tiêu_chí khác .\nVới data compression , thuật (như LZW ) sẽ cố_gắng để_cho output nhỏ nhất có_thể , và vẫn có khả_năng phục_hồi lại trạng_thái ban_đầu .\nNhững thuật_toán kiểu này cho ra kết_quả có_thể chấp_nhận được , nhưng không_phải tối_ưu nhất .\nVí_dụ thuật_toán của JPG và MP3 , dù khiến dữ_liệu bị giảm chất_lượng đi_đôi chút , sẽ tạo ra những files nhỏ hơn files gốc rất nhiều .\nFiles_MP3 không cố_gắng giữ_lại mọi âm_thanh của bài_hát mà ghi vừa đủ thông_tin để chất_lượng vừa tốt , dung_lượng files lại nhỏ .\nFiles_JPG cũng dựa trên ý_tưởng tương_tự .\nTầm quan_trọng của thuật_toán Với một lập_trình_viên , hay một nhà_khoa_học máy_tính , hiểu rõ về các thuật_toán vừa nêu là rất quan_trọng để có_thể áp_dụng thực_tiễn .\nNếu ta viết một phần_mềm , ta sẽ phải đánh_giá được phần_mềm đó sẽ hoạt_động nhanh chậm ra_sao .\nNhững đánh_giá như_vậy sẽ kém chính_xác hơn nhiều nếu ta không có hiểu_biết về thời_gian chạy hay độ phức_tạp .\nThêm nữa , hiểu_biết về thuật_toán của những gì ta đang làm sẽ giúp ta dự_đoán những trường_hợp đặc_biệt khiến phần_mềm chạy chậm đi hay xảy_ra lỗi .\nTất_nhiên , ta sẽ thường_xuyên gặp những bài_toán chưa được nghiên_cứu trước đó .\nLúc_này ta phải tự nghĩ_ra thuật mới , hoặc áp_dụng thuật cũ một_cách sáng_tạo hơn .\nCàng có kiến_thức về thuật_toán , ta càng có khả_năng giải_quyết thành_công vấn_đề .\nTrong nhiều trường_hợp , một vấn_đề mới có_thể được đưa về một vấn_đề cũ hơn mà không cần quá nhiều sức_lực , với điều_kiện ta phải có kiến_thức đủ sâu về vấn_đề cũ này .\nĐể minh_họa , hãy tưởng_tượng về công_việc của một \"switch\" internet .\nMột switch có N sợi dây_cáp , và sẽ nhận các gói data từ các sợi cáp này .\nSwitch sẽ phải phân_tích các gói data này rồi trả chúng về đúng dây_cáp cũ .\nCái switch này cũng giống_như một chiếc máy_tính , làm_việc dựa trên các xung nhịp với các bước rành mạch; các gói dữ_liệu được gửi ra ở các quãng nghỉ - intervals - thay_vì liên_tục .\nỞ một switch nhanh , chúng_ta cần gửi các gói dữ_liệu này càng nhanh càng tốt ở mỗi quãng nghỉ để chúng không ứ_đọng và bị bỏ_qua .\nVậy mục_tiêu của thuật_toán là gửi càng nhiều gói data càng tốt ở mỗi quãng nghỉ , và gói nào đến trước thì được chuyển đi trước .\nHóa ra , một thuật_toán có tên \" stable matching \" có liên_hệ trực_tiếp tới vấn_đề này và hoàn_toàn có_thể áp_dụng , dù nhìn sơ mối tương_quan giữa vấn_đề và thuật_toán có_vẻ không rõ_ràng .\nChỉ_có nền_tảng thuật_toán vững_vàng mới giúp ta đi đến_lời giải cho những trường_hợp như_vậy .\nMột_vài ví_dụ thực_tế Có rất nhiều ví_dụ cho thấy các vấn_đề thực_tế đòi_hỏi hiểu_biết về thuật_toán .\nGần_như mọi thứ bạn đang làm với máy_tính được dựa trên một thuật_toán nào_đó mà có_người phải rất vất_vả mới tìm_ra .\nCho_dù là ứng_dụng đơn_giản nhất của máy_tính hiện_đại cũng cần đến thuật_toán để quản_lí dữ bộ_nhớ và truy_xuất thông_tin từ hard drive (ổ cứng) .\nCó rất nhiều ví_dụ trong đời_sống , ở đây tôi sẽ giới_thiệu 2 bài_toán thực_tế có cùng độ khó với các bài ở TopCoder .\nBài đầu là Maximum_Flow_Problem (Luồng Cực_Đại) , và bài sau có liên_quan đến Dynamic_Programming (Quy Hoạch_Động) - một kĩ_thuật giải_quyết được những vấn_đề tưởng như_không thể với tốc_độ cao .\nMaximum_Flow - Luồng cực_đại Bài_toán luồng cực_đại liên_quan đến bài_toán tìm đường_đi ngắn nhất đã được nói ở trên .\nVào những năm 1950 , bài_toán lần đầu được nghiên_cứu , để áp_dụng với mạng_lưới đường_sắt của Liên_Xô .\nMỹ muốn biết Liên_Xô có_thể tiếp_tế cho các nước vệ_tinh ở Đông_Âu thông_qua mạng_lưới đường_sắt nhanh như_thế nào .\nThêm vào đó , Mỹ còn muốn biết tuyến_đường nào có_thể bị phá_hoại dễ_dàng nhất nhằm chia_cắt các nước này khỏi Liên_Bang .\nHóa ra , 2 vấn_đề này liên_quan mật_thiết , và giải_quyết được bài_toán về tiếp_tế sẽ giải_quyết luôn vấn_đề thứ_hai .\nThuật_toán hiệu_quả đầu_tiên cho bài_toán tìm luồng cực_đại được phát_triển bởi Ford và Fulkerson; thuật_toán được đặt_tên 2 nhà_khoa_học máy_tính này và đã trở_thành một trong những thuật_toán nổi_tiếng nhất ngành .\nTrong 50 năm_qua , một_số cải_tiến đã được áp_dụng để thuật nhanh hơn , nhiều trong số đó vô_cùng tinh_tế .\nTừ lúc bài_toán được nghiên_cứu , có nhiều ứng_dụng đã được đưa_ra .\nVí_dụ trong mạng máy_tính , ta cần truyền thật nhiều dữ_liệu từ một điểm đến một điểm khác .\nTrong kinh_doanh , thuật_toán này được áp_dụng trong nghiên_cứu vận_hành (operations research) .\nVí_dụ , nếu bạn có N nhân_viên và N công_việc cần làm , nhưng không_phải ai cũng làm được tất_cả mọi công_việc , thuật_toán tìm luồng cực_đại sẽ chỉ ra cách giao việc để các công_việc đều hoàn_thành , miễn_là có phương_án khả_thi .\nSequence_Comparison - So_sánh chuỗi Nhiều coder đi_làm cả đời mà không từng phải cài một thuật_toán quy_hoạch_động nào .\nThế_nhưng quy_hoạch_động là cần_thiết cho nhiều thuật_toán quan_trọng .\nMột thuật_toán có_lẽ nhiều người đã từng sử_dụng qua mà không biết , là tìm khoảng_cách của 2 chuỗi .\nCụ_thể hơn , tính_toán xem sau bao_nhiêu lần thêm , xóa hay sửa thì xâu A sẽ trở_thành xâu B .\nVí_dụ , có 2 xâu \"AABAA\" và \"AAAB\" .\nĐể chuyển xâu đầu thành xâu sau , đơn_giản nhất_là xóa kí_tự B ở giữa rồi chuyển A cuối xâu thành B .\nThuật_toán này có rất nhiều ứng_dụng , ví_dụ như trong các vấn_đề liên_quan đến DNA hay chống đạo_văn .\nVới các lập_trình_viên , thuật_toán này thường được dùng trong việc so_sánh 2 phiên_bản source code (mã nguồn) của cùng 1 file .\nNếu các phần_tử của chuỗi là các dòng của file , thuật sẽ cho ta biết dòng code nào bị xóa , dòng nào bị thêm vào hay sửa đi trong các phiên_bản đó .\nKhông có quy_hoạch_động , ta sẽ phải xét các trường_hợp theo cấp_số mũ để biến một xâu thành xâu khác .\nVới quy_hoạch_động , bài_toán này được giải_quyết với độ phức_tạp chỉ O(NM) , trong đó N và M là số phần_tử của mỗi xâu .\nKết_luận Số thuật_toán khác_nhau mà con_người học cũng nhiều như số bài_toán khác_nhau mà ta cần giải .\nThế_nhưng khả_năng cao là bài_toán bạn đang cố_gắng giải có liên_quan đến một bài_toán khác , theo một_cách nào_đó .\nCó_một vốn hiểu_biết sâu và rộng về các thuật_toán sẽ giúp bạn chọn_lựa được hướng đi đúng và áp_dụng thành_công .\nKhi nghiên_cứu thuật_toán , nhiều bài_toán nhìn có_vẻ không thực_tế , nhưng kĩ_năng giải_quyết đó lại được áp_dụng trong những bài_toán mà chúng_ta gặp hàng_ngày .\n\n", "tagged": "Bài/N viết/V gốc/N :/CH The_Importance/Np of_Algorithms/Np -/CH đăng/V bởi/E lbackstrom/Np trên/E Topcoder/Np Mở_đầu/V Để/E hiểu/V được/V tầm/N quan_trọng/A của/E việc/N học/V và/Cc hiểu/V về/E thuật_toán/N ,/CH đầu_tiên_ta/Np cần_định_nghĩa/Np chính_xác/A \"Thuật/Np toán/N là/V gì/P ?/CH \"/CH ./CH\nTheo_như/Np cuốn/Nc sách/N nổi_tiếng/A Introduction/Np to/A Algorithms/Np (Mở/Np đầu/N về/E thuật/Np toán)/Np ,/CH thì/C \"thuật/Np toán\"/Np là/V \"một/Np quá_trình/N tính_toán/V cụ_thể/A ,/CH trong/E đó/P lấy/V một/M hay/Cc nhiều/A giá_trị/N làm_đầu/Np vào/E (/CH input/Np )/CH và/Cc cho/E ra/V một/M hay/Cc nhiều/A giá_trị/N kết_quả/N (/CH output/Np )\"/Np ./CH\nNói_cách_khác/Np ,/CH thuật_toán/N giống_như/Np bản_đồ/N chỉ/R đường/N giúp/V ta/P giải_quyết/V một/M vấn_đề/N rõ_ràng/A ,/CH cụ_thể/A ./CH\nVí_dụ/C ,/CH nhiều/A dòng/N code/Np để/E tính/V dãy/Nc Fibonacci/Np là/V một_cách/N cài_đặt/V của/E một/M thuật_toán/N nào_đó/P ./CH\nMột/M hàm/Np để/E cộng/V hai/M số/N cũng/R được/V gọi_là/V một/M thuật_toán/N ,/CH mặc_dù/C nó/P rất/R đơn_giản/A ./CH\nMột_số/L thuật_toán/N ,/CH như/C thuật/Np để/E tính/V dãy/Nc Fibonacci/Np ,/CH khá/R trực_quan/Np và/Cc ta/P có_thể/R suy/V ra/V nhờ/V vào/E suy_luận/N logic/Np cũng_như/C kĩ_năng/N giải/N bài/N ./CH\nTuy_nhiên/C ,/CH đối_với/E những/L thuật_toán/N phức_tạp/A hơn/A ,/CH chúng_ta/P cần/V học/V và/Cc hiểu/V ,/CH để/E làm/V nền_tảng/N cho/E việc/N giải_quyết/V những/L bài_toán/N khó/A hơn/A ./CH\nTrong/E cuộc_sống/N hàng_ngày/Np ,/CH những/L việc/N tưởng_chừng_như/Np đơn_giản/A như/C kiểm_tra/V email/Nb hay/Cc nghe/V nhạc/N đều/R đòi_hỏi/V những/L thuật_toán/N rất/R phức_tạp/A ./CH\nTrong/E bài/N viết/V này/P ,/CH chúng_ta/P sẽ/R cùng/A xem/V một_vài/L ví_dụ/C về/E cách/N áp_dụng/V thuật_toán/N ./CH\nPhân_tích/V thời_gian_thực/Np hiện/N thuật_toán/N Một/M trong/E những/L yếu_tố/N quan_trọng/A nhất/A của/E một/M thuật_toán/N là/V việc/N nó/P chạy/V nhanh/A hay/Cc chậm/A ./CH\nNghĩ_ra/Np một/M thuật/Np để/E giải/N một/M bài_toán/N là/V việc/N dễ/A ,/CH nhưng/C để/E nó/P có_ý/Np nghĩa/N trong/E thực_tế/N ,/CH thì/C thuật_toán/N phải/V chạy/V đủ/A nhanh/A ./CH\nTốc_độ/N của/E một/M thuật/Np tùy/V thuộc/V vào/E tốc_độ/N máy/N cũng_như/C chi_tiết/N cài_đặt/V ,/CH các/L nhà_khoa_học/N máy_tính/N thường/R đề_cập/V đến/E runtime/Np (thời/Np gian/N chạy)/Np tương_ứng/V với/E kích_thước/N input/Np ./CH\nVí_dụ/C ,/CH nếu/C input/Np gồm/V N/Ny số/N ,/CH một/M thuật_toán/N có/V thời_gian/N chạy/V tỉ_lệ_thuận/A với/E N2/Np được/V kí_hiệu/Np là/V O(N2)/Np ./CH\nKý_hiệu/Np này/P nghĩa_là/V ,/CH khi/N máy_tính/N chạy/V một/M chương_trình/N cài_đặt/V thuật_toán/N trên/E với/E độ/N lớn/A input/Np là/V N/Ny ,/CH chương_trình/N sẽ/R tốn/V CN2/Np giây/Nu ,/CH với/E C/Ni là/V một/M hằng_số/Np không/R phụ_thuộc/V vào/E kích_thước/N input/Np ./CH\nTuy_nhiên/C ,/CH thời_gian/N chạy/V thực_tế/N của/E nhiều/A thuật_toán/N phức_tạp/A còn/R phụ_thuộc/V nhiều/A yếu_tố/N khác/A ngoài/E độ/N lớn/A input/Np ./CH\nVí_dụ/C ,/CH một/M thuật_toán/N sắp_xếp/V sẽ/R chạy/V nhanh/A hơn/A nhiều/A khi/N được/V xử_lí/V một/M dãy_số/Np đã/R sắp_xếp/V sẵn/A so_với/Np khi/N phải/V giải_quyết/V một/M dãy_số/Np lộn_xộn/Np ./CH\nTừ_đó/Np sinh_ra/V hai/M khái_niệm/N :/CH thời_gian/N chạy/V tối_đa/A và/Cc thời_gian/N chạy/V trung_bình/A ./CH\nThời_gian/N chạy/V tối_đa/A là/V thời_gian/N thuật_toán/N cần/V để/E xử_lí/V input/Np trong/E trường_hợp/N tồi/A nhất/A ./CH\nThời_gian/N chạy/V trung_bình/A là/V thời_gian/N trung_bình/A cho/E mọi/L input/Np có_thể/R xuất_hiện/V ./CH\nTrong/E 2/M thuật_ngữ/N ,/CH thời_gian/N tối_đa/A thường/R dễ/A phân_tích/V hơn/A ,/CH nên/C nó/P thường/R được/V sử_dụng/V để/E đánh_giá/V các/L thuật_toán/N ./CH\nViệc/N tính_toán/V độ/N phức_tạp/A nhiều/A lúc/N không/R đơn_giản/A vì/E ta/P không_thể/R kiểm_tra/V được/V hết/V mọi/L trường_hợp/N ./CH\nBạn/N có_thể/R tìm/V đọc/V thêm/V về/E một_số/L kĩ_năng/N tính_toán/V độ/N phức_tạp/A ở/E các/L nguồn/N khác/A ./CH\nƯớc_tính/V thời_gian/N chạy_của/Np các/L thuật/Np ,/CH N/Ny =/CH 100/M O(Log(N))/Np :/CH 10-7/Np giây/Nu O(N)/Np :/CH 10-6/Np giây/Nu O(NLog(N))/Np :/CH 10-5/Np giây/Nu O(N2)/Np :/CH 10-4/Np giây/Nu O(N6)/Np :/CH 3/M phút/Nu O(2N)/Np :/CH 1014/Np năm/N O(N/Np !/CH )/CH :/CH 10142/Np năm/N Sắp_xếp/V Thuật_toán/N sắp_xếp/V là/V một/M thuật_toán/N rất/R hay/Cc được/V sử_dụng/V trong/E khoa_học/N máy_tính/N ./CH\nCách/N đơn_giản/A nhất/A để/E sắp_xếp/V một/M nhóm/N đồ_vật/N là/V lấy/V ra/V món/N đồ/N nhỏ/A nhất/A và/Cc đặt/V lên/V đầu/N ./CH\nTa/P lại/R lấy/V ra/V món/N đồ/N nhỏ/A thứ_hai/N và/Cc đặt/V cạnh/N món/N đầu/N tiên;/Np cứ/R thế/P tiếp_tục/V ./CH\nĐáng_tiếc/Np ,/CH độ/N phức_tạp/A của/E thuật_toán/N này/P là/V O(N2)/Np ,/CH tức_thời/R gian/N chạy_của/Np thuật/Np sẽ/R tương_ứng/V với/E bình_phương/Np độ/N lớn/A input/Np ./CH\nNếu_cần/Np sắp_xếp/V 1/M tỉ_số/N ,/CH thuật/Np sẽ/R cần/V 1018/Np câu_lệnh/Np máy_tính/N (instructions)/Np ./CH\nĐể/E dễ/A hình_dung/V thì/C một/M chiếc/Nc máy_tính/N hiện_đại/A mỗi/L giây/Nu chỉ/R giải_quyết/V được/V gần/A 109/M câu_lệnh/Np ,/CH và/Cc sẽ/R cần/V nhiều/A năm_mới/Np sắp_xếp/V xong/V 1/M tỉ/M con_số/N nói/V trên/E ./CH\nMay_thay/Np ,/CH có/V nhiều/A thuật_toán/N sắp_xếp/V khác/A hiệu_quả/N hơn/A như/C Quick_Sort/Np ,/CH Heap_Sort/Np ,/CH Merge_Sort/Np ,/CH ./CH ./CH ./CH\nNhiều/A thuật/Np có/V độ/N phức_tạp/A chỉ/R O(NLog(N))/Np ./CH\nĐộ/N phức_tạp/A nhỏ/A hơn/A rút_ngắn/Np rất/R nhiều/A thời_gian/N để/E sắp_xếp/V 1/M tỉ/M con_số/N ,/CH đến_mức/Np một/M chiếc/Nc máy_tính/N bình_thường/A nhất/A cũng/R thực_hiện/V được/V trong/E chưa/R đến/E một/M phút/Nu ./CH\nThay_vì/X 1018/Np câu_lệnh/Np ,/CH máy/N chỉ/R phải/V thực_hiện/V 1010/Np ./CH\nĐường_đi/Np ngắn/A nhất/A Thuật_toán/N tìm/V đường_đi/Np ngắn/A nhất/A giữa/N hai/M điểm/N đã/R được/V nghiên_cứu/V từ/E rất/R lâu/A ./CH\nỨng_dụng/V của/E thuật_toán/N này/P rất/R nhiều/A ,/CH nhưng/C tạm_thời/A hãy/R xét/V bài_toán/N cơ_bản/A nhất/A :/CH tìm/V đường_đi/Np ngắn/A nhất/A từ/E A/Ni đến/E B/Ni trong/E một/M thành_phố/N với/E một_số/L con_đường/Np và/Cc giao_lộ/N ./CH\nCó/V rất/R nhiều/A thuật_toán/N được/V phát_triển/V để/E giải_quyết/V các/L bài/N kiểu/N này/P ,/CH với/E mỗi/L phương_pháp/N có/V ưu/N nhược_điểm/N riêng/A ./CH\nTrước_khi/Np tìm_hiểu/V về/E chúng/P ,/CH hãy/R xem/V thử/V \"thuật/Np trâu\"/Np -/CH xét/V hết/V các/L khả_năng/N -/CH sẽ/R mất/V bao_lâu/P để/E giải/N ./CH\nĐáng_tiếc/Np ,/CH ta/P sẽ/R không/R sống/V đủ/A lâu/A để/E biết/V kết_quả/N từ/E phương_pháp/N này/P -/CH cho_dù/C A/Ni và/Cc B/Ni đều/R ở/E trong/E một/M thị_trấn/N nhỏ/A ,/CH bởi/E độ/N phức_tạp/A của/E thuật/Np là/V O(C_N)/Np ,/CH với/E C/Ni là/V hằng_số/Np ./CH\nDù_C/Np có/V nhỏ/A ,/CH C_N/Np sẽ/R trở_nên/V lớn/A khủng_khiếp/V ngay_cả/Np với/E các/L giá_trị/N vừa_phải/A của/E N/Ny ./CH\nMột/M trong/E những/L thuật_toán/N nhanh/A nhất/A để/E giải_quyết/V bài_toán/N này/P có/V độ/N phức_tạp/A O(E_Log(V))/Np ,/CH với/E E/Ni là/V số/N đường_đi/Np ,/CH V/Nu là/V số/N giao_lộ/N ./CH\nĐể/E dễ/A hình_dung/V ,/CH thuật_toán/N sẽ/R mất/V 2/M giây/Nu để/E tìm/V đường_đi/Np ngắn/A nhất/A trong/E thành_phố/N có/V 10000/M giao_lộ/N và/Cc 20000/Np con_đường/Np ./CH\nThuật_toán/N này/P -/CH Djikstra/Np -/CH khá/R phức_tạp/A và/Cc đòi_hỏi/V sử_dụng/V cấu_trúc/N dữ_liệu/N Hàng/N đợi/V ưu_tiên/V (Priority/Np Queue)/Np ./CH\nTuy_nhiên/C có/V những/L trường_hợp/N mà/C ngay_cả/Np Djisktra/Np cũng/R trở_nên/V quá/R chậm/A (ví/Np dụ/V đường_đi/Np ngắn/A nhất/A từ/E Hà_Nội/N đến/E Sillicon_Valley/Np -/CH có/V đến/E hàng/N tỉ/M giao/V lộ)/Np ,/CH các/L lập_trình_viên/Np sẽ/R sử_dụng/V heuristics/Np ./CH\nHeuristics/Np là/V một/M hàm/Np xấp_xỉ/A của/E một/M tính_chất/N của/E bài_toán/N ./CH\nVí_dụ/C ,/CH trong/E bài_toán/N này/P ,/CH 1/M heuristic/Np có_thể/R là/V khoảng_cách/N đường_chim_bay/Np giữa/N 2/M điểm/N ./CH\nSử_dụng/V heuristic/Np ,/CH chúng_ta/P có_thể/R tìm/V được_lời/Np giải/N nhanh/A hơn/A ,/CH ví_dụ/C thuật_toán/N A/Ni có_thể/R chạy/V nhanh/A hơn/A Dijkstra/Np trong/E nhiều/A trường_hợp/N ./CH\nPhương_pháp/N này/P không_phải/Np lúc/N nào/P cũng/R rút_ngắn/Np thời_gian/N chạy_của/Np thuật/Np trong/E trường_hợp/N tệ/Nu nhất/A ,/CH nhưng/C nó/P hiệu_quả/N với/E phần_lớn/N trường_hợp/N trong/E thực_tế/N ./CH\nThuật_toán/N xấp_xỉ/A Thế_nhưng/C đôi_khi/R ,/CH ngay_cả/Np với/E thuật/Np mạnh/A nhất/A ,/CH dùng/V heuristics/Np tốt/A nhất/A ,/CH chạy/V trên/E máy_tính/N nhanh/A nhất/A cũng/R trở_nên/V quá/R chậm/A ./CH\nĐối_với/E các/L trường_hợp/N này/P ta/P buộc/V phải/V hi_sinh/V phần_nào/L sự/N chính_xác/A của/E kết_quả/N ./CH\nThay_vì/X cố/V đi/V tìm/V đường_đi/Np ngắn/A nhất/A ,/CH ta/P đã/R có_thể/R thỏa_mãn/V với/E một/M con_đường/Np không/R dài/A hơn/A 10%/M so_với/Np kết_quả/N tối_ưu/A ./CH\nThực_tế/N ,/CH có/V nhiều/A bài_toán/N quan_trọng/A mà/C thuật/Np tối_ưu/A của/E chúng/P quá/R chậm/A và/Cc không/R sử_dụng/V được/V ./CH\nNhóm/N bài/N nổi_tiếng/A nhất/A cho/E tính_cách/N này/P được/V gọi_là/V NP/Np -/CH non-deterministic/Np polynomial/Np ./CH\nKhi/N một/M bài_toán/N nào_đó/P được/V cho_là/Np NP-hard/Np hay/Cc NP-complete/Np ,/CH đồng_nghĩa/A không_ai/Np biết/V thuật_toán/N tối_ưu/A của/E nó/P ./CH\nHơn_nữa/C ,/CH nếu/C ai/P đó/P nghĩ_ra/Np được/V thuật/Np tối_ưu/A cho/E một/M bài_toán/N NP-complete/Np ,/CH thuật/Np đó/P cũng/R áp_dụng/V được/V cho/E mọi/L bài_toán/N NP-complete/Np khác/A ./CH\nMột/M ví_dụ/C nổi_tiếng/A của/E NP-hard/Np là/V bài_toán/N Người/N bán_hàng/Np (Traveling/Np Salesman_Problem/Np -/CH TSP)/Np ./CH\nMột/M người/N bán_hàng/Np cần/V đi/V đến/E N/Ny thành_phố/N ,/CH và/Cc anh/N ta/P biết/V cần/V bao_lâu/P để/E đi/V từ/E một/M thành_phố/N đến/E một/M thành_phố/N khác/A ./CH\nCâu_hỏi/N đặt/V ra/V là/V ,/CH nhanh/A nhất_thì/Np mất/V bao_lâu/P để/E anh/N ta/P đi/V hết/V N/Ny thành_phố/N ?/CH\nBởi/E thuật_toán/N nhanh/A nhất/A cho/E TSP/Np vẫn/R quá/R chậm/A -/CH nhiều/A người/N tin/N là/V điều/N này/P sẽ/R luôn/R đúng/A -/CH ta/P tìm/V đến/E những/L phương_pháp/N đủ/A nhanh/A mà/C đưa_ra/Np được/V kết_quả/N gần/A đúng/A ,/CH thay_vì/X thuật_toán/N tối_ưu/A ./CH\nThuật_toán/N ngẫu_nhiên/A Một_cách/N tiếp_cận/V vấn_đề/N khác/A đó/P là/V thử/V \"random\"/Np theo/V một_cách/N nào_đó/P ./CH\nTuy/C không/R cải_thiện/V tốc_độ/N trong/E trường_hợp/N xấu/A nhất/A ,/CH biện_pháp/N này/P sẽ/R có/V hiệu_quả/N với/E những/L trường_hợp/N bình_thường/A ./CH\nQuickSort/Np là/V một/M ví_dụ/C điển_hình/N cho/E việc/N random/Np như_vậy/X ./CH\nKhi/N \"suy/Np biến\"/Np ,/CH QuickSort/Np sẽ/R sắp_xếp/V một/M dãy/Nc trong/E O(N2)/Np ,/CH với/E N/Ny là/V số/N phần_tử/N của/E dãy/Nc ./CH\nNhưng/C nếu/C áp_dụng/V random/Np vào/E thuật_toán/N ,/CH xác_suất/N xảy_ra/Np suy_biến/Np là/V cực_kì/R thấp/A ,/CH và/Cc độ/N phức_tạp/A trung_bình/A của/E QuickSort/Np trở_thành/V O(N_Log(N))/Np ./CH\nCó/V những/L thuật/Np có/V độ/N phức_tạp/A O(N\\_Log(N))/Np kể_cả/X ở/E trường_hợp/N xấu/A ,/CH nhưng/C chúng/P sẽ/R chậm/A hơn/A ở/E trường_hợp/N bình_thường/A ./CH\nDù/C độ/N phức_tạp/A cùng/A là/V O(NLog(N))/Np ,/CH QuickSort/Np có/V hằng_số/Np C/Ni nhỏ/A hơn/A nhiều/A ,/CH tức/V số/N phép_tính/Np cần/V thực_hiện/V nhỏ/A hơn/A ./CH\nMột/M thuật_toán/N khác/A dùng/V random/Np để/E tìm/V trung_vị/Np của/E một/M dãy/Nc với/E độ/N phức_tạp/A trung_bình/A O(N)/Np ./CH\nĐây/P là/V cải_tiến/V rất/R lớn/A so_với/Np việc/N sắp_xếp/V lại/R dãy/Nc và/Cc chọn/V ra/V phần_tử/N giữa/N vốn/N có/V độ/N phức_tạp/A O(NLog(N))/Np ./CH\nThêm/V nữa/R ,/CH cho_dù/C vẫn/R có/V các/L thuật_toán/N tìm/V trung_vị/Np không-random/Np với/E độ/N phức_tạp/A O(N)/Np ,/CH thuật_toán/N này/P vẫn/R được/V áp_dụng/V nhiều/A hơn/A nhờ/V cài_đặt/V giản/Np và/Cc tốc_độ/N chạy/V nhanh/A hơn/A ./CH\nÝ_tưởng/N chính/T của/E Thuật_toán/N trung_vị/Np này/P là/V chọn/V ngẫu_nhiên/A một_số/L X/CH bất_kì/R trong/E dãy/Nc ,/CH và/Cc đếm/V xem/V có/V bao_nhiêu/P số/N nhỏ/A hơn/A nó/P ./CH\nGiả_sử/Np dãy/Nc có/V N/Ny số/N ,/CH và/Cc có/V K/N số/N nhỏ/A hơn/A hoặc/Cc bằng/E X/CH ./CH\nNếu_Klt;N/Np ,/CH vậy_ta/Np biết/V trung_vị/Np sẽ/R là/V số/N thứ/N (N/Np -/CH K)/Np lớn/A hơn/A X/CH ./CH\nTa/P bỏ_đi/Np K/N số/N nhỏ/A hơn/A hoặc/Cc bằng/E X/CH ./CH\nBây_giờ/P ta/P phải/V tìm/V số/N nhỏ/A thứ/N (N/Np ,/CH thay_vì/X số/N trung_vị/Np ./CH\nTa/P tiếp_tục/V random/Np một_số/L X/CH khác/A ,/CH và/Cc lặp_lại/Np ./CH\nCompression/Np -/CH Nén_Một/Np lớp/N khác/A của/E thuật_toán/N sẽ/R xử_lí/V những/L vấn_đề/N như/C data/Np compression/Np (nén/Np dữ/A liệu)/Np ./CH\nLoại/N thuật_toán/N này/P không/R có/V output/Np xác_định/V mà/C thay/V vào/E đó/P cố_gắng/V tối_ưu/A ở/E những/L tiêu_chí/N khác/A ./CH\nVới/E data/Np compression/Np ,/CH thuật/Np (như/Np LZW/Np )/CH sẽ/R cố_gắng/V để_cho/Np output/Np nhỏ/A nhất/A có_thể/R ,/CH và/Cc vẫn/R có/V khả_năng/N phục_hồi/V lại/R trạng_thái/N ban_đầu/N ./CH\nNhững/L thuật_toán/N kiểu/N này/P cho/E ra/V kết_quả/N có_thể/R chấp_nhận/V được/V ,/CH nhưng/C không_phải/Np tối_ưu/A nhất/A ./CH\nVí_dụ/C thuật_toán/N của/E JPG/Np và/Cc MP3/Np ,/CH dù/C khiến/V dữ_liệu/N bị/V giảm/V chất_lượng/N đi_đôi/Np chút/L ,/CH sẽ/R tạo/V ra/V những/L files/Np nhỏ/A hơn/A files/Np gốc/N rất/R nhiều/A ./CH\nFiles_MP3/Np không/R cố_gắng/V giữ_lại/Np mọi/L âm_thanh/N của/E bài_hát/Np mà/C ghi/V vừa/R đủ/A thông_tin/N để/E chất_lượng/N vừa/R tốt/A ,/CH dung_lượng/Np files/Np lại/R nhỏ/A ./CH\nFiles_JPG/Np cũng/R dựa/V trên/E ý_tưởng/N tương_tự/A ./CH\nTầm/N quan_trọng/A của/E thuật_toán/N Với/E một/M lập_trình_viên/Np ,/CH hay/Cc một/M nhà_khoa_học/N máy_tính/N ,/CH hiểu/V rõ/A về/E các/L thuật_toán/N vừa/R nêu/V là/V rất/R quan_trọng/A để/E có_thể/R áp_dụng/V thực_tiễn/N ./CH\nNếu/C ta/P viết/V một/M phần_mềm/N ,/CH ta/P sẽ/R phải/V đánh_giá/V được/V phần_mềm/N đó/P sẽ/R hoạt_động/N nhanh/A chậm/A ra_sao/X ./CH\nNhững/L đánh_giá/V như_vậy/X sẽ/R kém/A chính_xác/A hơn/A nhiều/A nếu/C ta/P không/R có/V hiểu_biết/N về/E thời_gian/N chạy/V hay/Cc độ/N phức_tạp/A ./CH\nThêm/V nữa/R ,/CH hiểu_biết/N về/E thuật_toán/N của/E những/L gì/P ta/P đang/R làm/V sẽ/R giúp/V ta/P dự_đoán/V những/L trường_hợp/N đặc_biệt/A khiến/V phần_mềm/N chạy/V chậm/A đi/V hay/Cc xảy_ra/Np lỗi/N ./CH\nTất_nhiên/A ,/CH ta/P sẽ/R thường_xuyên/A gặp/V những/L bài_toán/N chưa/R được/V nghiên_cứu/V trước/E đó/P ./CH\nLúc_này/Np ta/P phải/V tự/P nghĩ_ra/Np thuật/Np mới/R ,/CH hoặc/Cc áp_dụng/V thuật/Np cũ/A một_cách/N sáng_tạo/V hơn/A ./CH\nCàng/R có/V kiến_thức/N về/E thuật_toán/N ,/CH ta/P càng/R có/V khả_năng/N giải_quyết/V thành_công/V vấn_đề/N ./CH\nTrong/E nhiều/A trường_hợp/N ,/CH một/M vấn_đề/N mới/R có_thể/R được/V đưa/V về/E một/M vấn_đề/N cũ/A hơn/A mà/C không/R cần/V quá/R nhiều/A sức_lực/N ,/CH với/E điều_kiện/N ta/P phải/V có/V kiến_thức/N đủ/A sâu/A về/E vấn_đề/N cũ/A này/P ./CH\nĐể/E minh_họa/V ,/CH hãy/R tưởng_tượng/V về/E công_việc/N của/E một/M \"switch\"/Np internet/Nb ./CH\nMột/M switch/Np có/V N/Ny sợi/Nc dây_cáp/N ,/CH và/Cc sẽ/R nhận/V các/L gói/V data/Np từ/E các/L sợi/Nc cáp/N này/P ./CH\nSwitch/Np sẽ/R phải/V phân_tích/V các/L gói/V data/Np này/P rồi/C trả/V chúng/P về/E đúng/A dây_cáp/N cũ/A ./CH\nCái/Nc switch/Np này/P cũng/R giống_như/Np một/M chiếc/Nc máy_tính/N ,/CH làm_việc/V dựa/V trên/E các/L xung/Np nhịp/N với/E các/L bước/V rành/V mạch;/Np các/L gói/V dữ_liệu/N được/V gửi/V ra/V ở/E các/L quãng/N nghỉ/V -/CH intervals/Np -/CH thay_vì/X liên_tục/A ./CH\nỞ/E một/M switch/Np nhanh/A ,/CH chúng_ta/P cần/V gửi/V các/L gói/V dữ_liệu/N này/P càng/R nhanh/A càng/R tốt/A ở/E mỗi/L quãng/N nghỉ/V để/E chúng/P không/R ứ_đọng/Np và/Cc bị/V bỏ_qua/V ./CH\nVậy/P mục_tiêu/N của/E thuật_toán/N là/V gửi/V càng/R nhiều/A gói/V data/Np càng/R tốt/A ở/E mỗi/L quãng/N nghỉ/V ,/CH và/Cc gói/V nào/P đến/E trước/E thì/C được/V chuyển/V đi/V trước/E ./CH\nHóa/Z ra/V ,/CH một/M thuật_toán/N có/V tên/N \"/CH stable/Np matching/Np \"/CH có/V liên_hệ/V trực_tiếp/A tới/E vấn_đề/N này/P và/Cc hoàn_toàn/A có_thể/R áp_dụng/V ,/CH dù/C nhìn/V sơ/Np mối/N tương_quan/N giữa/N vấn_đề/N và/Cc thuật_toán/N có_vẻ/X không/R rõ_ràng/A ./CH\nChỉ_có/Np nền_tảng/N thuật_toán/N vững_vàng/A mới/R giúp/V ta/P đi/V đến_lời/Np giải/N cho/E những/L trường_hợp/N như_vậy/X ./CH\nMột_vài/L ví_dụ/C thực_tế/N Có/V rất/R nhiều/A ví_dụ/C cho/E thấy/V các/L vấn_đề/N thực_tế/N đòi_hỏi/V hiểu_biết/N về/E thuật_toán/N ./CH\nGần_như/R mọi/L thứ/N bạn/N đang/R làm/V với/E máy_tính/N được/V dựa/V trên/E một/M thuật_toán/N nào_đó/P mà/C có_người/Np phải/V rất/R vất_vả/A mới/R tìm_ra/Np ./CH\nCho_dù/C là/V ứng_dụng/V đơn_giản/A nhất/A của/E máy_tính/N hiện_đại/A cũng/R cần/V đến/E thuật_toán/N để/E quản_lí/V dữ/A bộ_nhớ/Np và/Cc truy_xuất/Np thông_tin/N từ/E hard/Np drive/Np (ổ/Np cứng)/Np ./CH\nCó/V rất/R nhiều/A ví_dụ/C trong/E đời_sống/N ,/CH ở/E đây/P tôi/P sẽ/R giới_thiệu/V 2/M bài_toán/N thực_tế/N có/V cùng/A độ/N khó/A với/E các/L bài/N ở/E TopCoder/Np ./CH\nBài/N đầu/N là/V Maximum_Flow_Problem/Np (Luồng/Np Cực_Đại)/Np ,/CH và/Cc bài/N sau/E có/V liên_quan/V đến/E Dynamic_Programming/Np (Quy/Np Hoạch_Động)/Np -/CH một/M kĩ_thuật/N giải_quyết/V được/V những/L vấn_đề/N tưởng/V như_không/Np thể/N với/E tốc_độ/N cao/A ./CH\nMaximum_Flow/Np -/CH Luồng/N cực_đại/A Bài_toán/N luồng/N cực_đại/A liên_quan/V đến/E bài_toán/N tìm/V đường_đi/Np ngắn/A nhất/A đã/R được/V nói/V ở/E trên/E ./CH\nVào/E những/L năm/N 1950/M ,/CH bài_toán/N lần/N đầu/N được/V nghiên_cứu/V ,/CH để/E áp_dụng/V với/E mạng_lưới/N đường_sắt/N của/E Liên_Xô/Np ./CH\nMỹ/Np muốn/V biết/V Liên_Xô/Np có_thể/R tiếp_tế/V cho/E các/L nước/N vệ_tinh/N ở/E Đông_Âu/Np thông_qua/V mạng_lưới/N đường_sắt/N nhanh/A như_thế/X nào/P ./CH\nThêm/V vào/E đó/P ,/CH Mỹ/Np còn/R muốn/V biết/V tuyến_đường/Np nào/P có_thể/R bị/V phá_hoại/V dễ_dàng/A nhất/A nhằm/V chia_cắt/V các/L nước/N này/P khỏi/V Liên_Bang/Np ./CH\nHóa/Z ra/V ,/CH 2/M vấn_đề/N này/P liên_quan/V mật_thiết/A ,/CH và/Cc giải_quyết/V được/V bài_toán/N về/E tiếp_tế/V sẽ/R giải_quyết/V luôn/R vấn_đề/N thứ_hai/N ./CH\nThuật_toán/N hiệu_quả/N đầu_tiên/A cho/E bài_toán/N tìm/V luồng/N cực_đại/A được/V phát_triển/V bởi/E Ford/Np và/Cc Fulkerson;/Np thuật_toán/N được/V đặt_tên/Np 2/M nhà_khoa_học/N máy_tính/N này/P và/Cc đã/R trở_thành/V một/M trong/E những/L thuật_toán/N nổi_tiếng/A nhất/A ngành/N ./CH\nTrong/E 50/M năm_qua/Np ,/CH một_số/L cải_tiến/V đã/R được/V áp_dụng/V để/E thuật/Np nhanh/A hơn/A ,/CH nhiều/A trong/E số/N đó/P vô_cùng/R tinh_tế/A ./CH\nTừ/E lúc/N bài_toán/N được/V nghiên_cứu/V ,/CH có/V nhiều/A ứng_dụng/V đã/R được/V đưa_ra/Np ./CH\nVí_dụ/C trong/E mạng/N máy_tính/N ,/CH ta/P cần/V truyền/V thật/R nhiều/A dữ_liệu/N từ/E một/M điểm/N đến/E một/M điểm/N khác/A ./CH\nTrong/E kinh_doanh/V ,/CH thuật_toán/N này/P được/V áp_dụng/V trong/E nghiên_cứu/V vận_hành/V (operations/Np research)/Np ./CH\nVí_dụ/C ,/CH nếu/C bạn/N có/V N/Ny nhân_viên/N và/Cc N/Ny công_việc/N cần/V làm/V ,/CH nhưng/C không_phải/Np ai/P cũng/R làm/V được/V tất_cả/P mọi/L công_việc/N ,/CH thuật_toán/N tìm/V luồng/N cực_đại/A sẽ/R chỉ/R ra/V cách/N giao/V việc/N để/E các/L công_việc/N đều/R hoàn_thành/V ,/CH miễn_là/E có/V phương_án/N khả_thi/A ./CH\nSequence_Comparison/Np -/CH So_sánh/V chuỗi/N Nhiều/A coder/Np đi_làm/Np cả/P đời/N mà/C không/R từng/R phải/V cài/V một/M thuật_toán/N quy_hoạch_động/Np nào/P ./CH\nThế_nhưng/C quy_hoạch_động/Np là/V cần_thiết/A cho/E nhiều/A thuật_toán/N quan_trọng/A ./CH\nMột/M thuật_toán/N có_lẽ/X nhiều/A người/N đã/R từng/R sử_dụng/V qua/V mà/C không/R biết/V ,/CH là/V tìm/V khoảng_cách/N của/E 2/M chuỗi/N ./CH\nCụ_thể/A hơn/A ,/CH tính_toán/V xem/V sau/E bao_nhiêu/P lần/N thêm/V ,/CH xóa/V hay/Cc sửa/V thì/C xâu/Np A/Ni sẽ/R trở_thành/V xâu/Np B/Ni ./CH\nVí_dụ/C ,/CH có/V 2/M xâu/Np \"AABAA\"/Np và/Cc \"AAAB\"/Np ./CH\nĐể/E chuyển/V xâu/Np đầu/N thành/V xâu/Np sau/E ,/CH đơn_giản/A nhất_là/X xóa/V kí_tự/Np B/Ni ở/E giữa/N rồi/C chuyển/V A/Ni cuối/N xâu/Np thành/V B/Ni ./CH\nThuật_toán/N này/P có/V rất/R nhiều/A ứng_dụng/V ,/CH ví_dụ/C như/C trong/E các/L vấn_đề/N liên_quan/V đến/E DNA/Np hay/Cc chống/V đạo_văn/Np ./CH\nVới/E các/L lập_trình_viên/Np ,/CH thuật_toán/N này/P thường/R được/V dùng/V trong/E việc/N so_sánh/V 2/M phiên_bản/N source/Np code/Np (mã/Np nguồn)/Np của/E cùng/A 1/M file/Np ./CH\nNếu/C các/L phần_tử/N của/E chuỗi/N là/V các/L dòng/N của/E file/Np ,/CH thuật/Np sẽ/R cho/E ta/P biết/V dòng/N code/Np nào/P bị/V xóa/V ,/CH dòng/N nào/P bị/V thêm/V vào/E hay/Cc sửa/V đi/V trong/E các/L phiên_bản/N đó/P ./CH\nKhông/R có/V quy_hoạch_động/Np ,/CH ta/P sẽ/R phải/V xét/V các/L trường_hợp/N theo/V cấp_số/Np mũ/N để/E biến/V một/M xâu/Np thành/V xâu/Np khác/A ./CH\nVới/E quy_hoạch_động/Np ,/CH bài_toán/N này/P được/V giải_quyết/V với/E độ/N phức_tạp/A chỉ/R O(NM)/Np ,/CH trong/E đó/P N/Ny và/Cc M/Nu là/V số/N phần_tử/N của/E mỗi/L xâu/Np ./CH\nKết_luận/V Số/N thuật_toán/N khác_nhau/Np mà/C con_người/N học/V cũng/R nhiều/A như/C số/N bài_toán/N khác_nhau/Np mà/C ta/P cần/V giải/N ./CH\nThế_nhưng/C khả_năng/N cao/A là/V bài_toán/N bạn/N đang/R cố_gắng/V giải/N có/V liên_quan/V đến/E một/M bài_toán/N khác/A ,/CH theo/V một_cách/N nào_đó/P ./CH\nCó_một/Np vốn/N hiểu_biết/N sâu/A và/Cc rộng/A về/E các/L thuật_toán/N sẽ/R giúp/V bạn/N chọn_lựa/V được/V hướng/N đi/V đúng/A và/Cc áp_dụng/V thành_công/V ./CH\nKhi/N nghiên_cứu/V thuật_toán/N ,/CH nhiều/A bài_toán/N nhìn/V có_vẻ/X không/R thực_tế/N ,/CH nhưng/C kĩ_năng/N giải_quyết/V đó/P lại/R được/V áp_dụng/V trong/E những/L bài_toán/N mà/C chúng_ta/P gặp/V hàng_ngày/Np ./CH\n\n", "title": "Tầm Quan Trọng Của Thuật Toán\n", "link": "http://vnoi.info/wiki/translate/topcoder/The-Importance-of-Algorithm\n"}