{"content": "Nơi tổng_hợp và chia_sẻ những kiến_thức liên_quan tới giải_thuật nói_chung và lý_thuyết khoa_học máy_tính nói_riêng .\nin Ngăn_xếp (Stack) là cấu_trúc dữ_liệu trong đó phần_tử nào được đưa_vào sau cũng sẽ được lấy ra trước .\nHàng đợi (Queue) là cấu_trúc dữ_liệu trong đó phần từ nào được đưa_vào trước sẽ được lấy ra trước .\nTưởng_tượng ngăn_xếp giống_như một chồng sách; cuốn sách trên đầu của chồng sách là cuốn sách được đưa_vào cuối_cùng , khi bạn lấy một cuốn sách ra khỏi chồng thì bạn nên lấy cuốn ở trên cùng .\nHàng đợi thì giống_như khi bạn xếp_hàng trong siêu thị; ai xếp_hàng trước sẽ được thanh_toán (đi ra khỏi hàng đợi) trước .\nĐó là tất_cả những gì bạn cần biết về ngăn_xếp và hàng đợi .\n(a) Minh_hoạ ngăn_xếp .\nCác phần_tử được đưa_vào (push) đỉnh ngăn_xếp và cũng được lấy ra (pop) từ đỉnh của ngăn_xếp .\n(b) Minh_họa hàng đợi .\nCác phần_tử được đưa_vào (enqueue) cuối hàng đợi và cũng được lấy ra (dequeue) từ_đầu của hàng đợi . Thực_thi ngăn_xếp có hai cách : sử_dụng mảng hoặc sử_dụng .\nNếu thực_hiện bằng mảng , kí_hiệu là , ta cần một biến , kí_hiệu là , để xác_định phần_tử đầu_tiên của ngăn_xếp .\nPhần_tử chính là phần_tử trên cùng của ngăn_xếp (phần tử được đưa_vào ngăn_xếp gần_đây nhất) .\nMỗi khi chèn vào ngăn_xếp dữ_liệu , ta thực_hiện hai bước : Khi lấy phần_tử ra khỏi ngăn_xếp , ta sẽ copy dữ_liệu từ ra một biến , giảm 1 đơn_vị và trả_lại giá_trị của biến .\nNếu thực_hiện ngăn_xếp bằng DSLK , mỗi khi thêm vào ngăn_xếp , ta luôn chèn vào đầu của DSLK ( chúng_ta đã có nhận_xét là chèn vào đầu DSLK luôn hiệu_quả và sạch_sẽ hơn chèn vào đuôi) .\nKhi lấy dữ_liệu ra khỏi ngăn_xếp , ta lấy dữ_liệu ra từ mắt_xích đầu_tiên của DSLK . Thực_thi hàng đợi , ta cũng có hai cách tương_tự như ngăn_xếp , chỉ_có thứ_tự lấy ra và đưa_vào là khác .\nKhi đưa_vào hàng đợi , bạn nên đưa_vào đuôi của DSLK và lấy ra từ_đầu của DSLK nếu cấu_trúc bạn sử_dụng là DSLK_đơn (tại sao_không làm ngược_lại ? ) .\nNếu bạn sử_dụng DSLK đôi thì bạn có_thể làm ngược_lại , lấy ra từ đuôi và chèn vào đầu của DSLK .\nDo thực_thi ngăn_xếp và hàng đợi có nhiều điểm tương_tự nhau , từ_đây trở_đi mình chỉ nói về thực_thi ngăn_xếp .\nTrong hai cách thực_thi trên , mỗi cách_đều có_một điểm yếu riêng .\nTrong phương_pháp thực_thi bằng mảng , ta cần phải_biết trước lượng bộ_nhớ tối_đa của hàng đợi tại một_thời điểm bất_kì để khai_báo và cấp_phát bộ_nhớ cho mảng .\nTrong một_số trường_hợp , ví_dụ , ta có_thể ước_lượng được lượng bộ_nhớ này một_cách khá chính_xác .\nTuy_nhiên , trong hầu_hết các trường_hợp khác , rất khó để biết trước .\nCho_dù biết trước lượng bộ_nhớ tối_đa này , không_phải tại thời_điểm nào ta cũng cần_dùng hết lượng bộ_nhớ khai_báo .\nĐiều này dẫn đến .\nNếu thực_thi bằng DSLK , ta có_thể khắc_phục dư_thừa bộ_nhớ , nhưng mỗi lần thêm một mắt_xích mới ta lại phải thực_hiện cấp_phát bộ_nhớ cho mắt_xích đó .\nCác hàm_cấp_phát bộ_nhớ (ví dụ hàm_malloc trong C) nói_chung đều liên_quan đến một chuỗi các thủ_tục khác để quản_lí bộ_nhớ .\nDo_đó , mỗi lần cấp_phát bộ_nhớ như_vậy cũng không_hề rẻ .\nNếu coi cách thực_thi mảng là một_cách thực_thi đổi bộ_nhớ lấy tốc_độ thì cấu_trúc mảng mở_rộng (extendable array) ta nói tới ở đây cũng có tính_chất tương_tự .\nTuy_nhiên , mảng mở_rộng cho_phép ta kiểm_soát được lượng bộ_nhớ hi_sinh để đổi lại thời_gian_thực thi , do_đó , nó phù_hợp trong ứng_dụng thực_thi ngăn_xếp (hàng đợi) .\nVector trong C++ chính là cấu_trúc mảng mở_rộng .\nMảng mở_rộng còn được biết tới một cái tên khác là (dynamic array) .\nMình không thích từ \"động\" lắm nên dùng từ mở_rộng .\nCái tên chuẩn hơn có_lẽ là mảng tự mở_rộng hoặc mảng tự điều chính kích_thước .\nTất_cả đều dài nên tạm_thời dùng từ mảng mở_rộng vậy .\nBạn nào có tên hay thì comment xuống dưới giúp mình .\nVề cơ_bản , mảng mở_rộng (extendable array) là một cấu_trúc dựa trên mảng .\nMảng này , gọi_là , ban_đầu được cấp_phát một lượng bộ_nhớ nhỏ (10 phần_tử chẳng_hạn như trong ) .\nĐể đơn_giản , ta giả_sử chỉ_thực hiện chèn (vào cuối) mảng mở_rộng .\nThao_tác xóa sẽ được bàn thêm ở phần dưới . Mỗi lần chèn một phần_tử vào cuối mảng (ta sẽ đề_cập đến xóa sau) , nếu mảng đã đầy thì ta : Ba thao_tác trên có_vẻ rất tốn_kém (và thực_sự là nó tốn kém) vì phải xóa toàn_bộ mảng cũ và tạo một mảng mới .\nĐiểm mấu_chốt ở đây là ta sẽ phải thường_xuyên thực_hiện ba thao_tác trên vì ta chỉ_thực hiện khi_nào mảng đầy .\nNhận_xét , mỗi lần thực_hiện ba thao_tác trên , ta tăng bộ_nhớ lên lần .\nDo_đó , nếu bộ_nhớ hiện_tại của mảng là thì tổng_số lần thực_hiện ba thao_tác là .\nMỗi lần thực_hiện ba thao_tác trên , ta trả thời_gian để khởi tạo và copy , do_đó , tổng thời_gian là .\nPhân_tích kĩ hơn trình_bày dưới_đây cho thấy tổng thời_gian phải trả vẫn chỉ là , hay nói_cách_khác , thời_gian (armotized time) cho mỗi thao_tác chèn là .\nChú_ý ở đây ta vân chưa xét phép xóa_khỏi mảng . Để thực_thi các thao_tác trên , ta cần thêm hai biến : (i) biến lưu_trữ dung_lượng (capacity) của mảng hiện_tại và (ii) biến để lưu_số phần_tử hiện_tại lưu_trữ trong mảng , hay lượng dữ_liệu của mảng .\nTa sẽ kí_hiệu mảng mở_rộng bằng bộ_ba biến .\nBan_đầu khởi tạo mảng , ta cấp_phát một mảng kích_thước hằng_số .\nỞ đây ta khởi tạo là để dễ phân_tích .\nTa có : Để trình_bày được đơn_giản , ta giả_sử nguyên .\nDễ thấy , nếu bỏ_qua thao_tác mở_rộng thì tổng thời_gian chèn phần_tử là .\nTa chỉ_cần đếm_số thao_tác xảy_ra trong quá_trình mở_rộng .\nGọi .\nDo ta chỉ_thực hiện mở_rộng mảng mỗi khi số phần_tử của mảng là với , và mỗi lần mở_rộng , ta mất thời_gian là kích_thước của mảng , i . e , thời_gian .\nTa có tổng thời_gian mở_rộng mảng là : Từ (1) , ta suy ra tổng thời_gian chèn là Bằng một_chút phân_tích nhỏ (coi như bài_tập cho bạn đọc) , ta thấy lượng bộ_nhớ dư_thừa là tối_đa là .\nTheorem 1 cho ta thấy rõ : nếu ta cần tiết_kiệm bộ_nhớ ( càng gần 1) , thì ta cần phải trả nhiều thời_gian cho mỗi thao_tác chèn và ngược_lại , ta càng cấp_phát nhiều bộ_nhớ sau mỗi lần bị đầy ( lớn) thì khả_năng dư_thừa bộ_nhớ càng cao , nhưng thời_gian mỗi thao_tác chèn lại càng nhỏ . Điểm chính ở đây là ta muốn thu_hồi phần bộ_nhớ dư_thừa sau khi xóa (rất nhiều) phần_tử khỏi mảng , để đảm_bảo dung_lượng của mảng không quá lớn so_với lượng dữ_liệu lưu_trữ trong mảng , i . e , .\nNếu ta không nhất_thiết phải thu_hồi bộ_nhớ thì chỉ việc xóa_khỏi mảng bình_thường .\nTa muốn đảm_bảo , ngoài việc cho_phép thu_hồi bộ_nhớ , trung_bình mỗi thao_tác xóa và chèn có thời_gian .\nXét ý_tưởng sau mở_rộng từ ý_tưởng ở trên : Giả_sử hiện_tại dung_lượng của mảng là .\nNếu khi ta xóa_một phần_tử khỏi mảng , số phần_tử trong mảng còn_lại là , ta sẽ \"co\" bộ_nhớ của mảng về bằng cách tương_tự như khi chèn : (i) cấp_phát mảng mới kích_thước , (ii) copy toàn_bộ sang mảng mới , và (iii) giải_phóng bộ_nhớ của .\nVấn_đề của ý_tưởng này ở chỗ nếu và nếu ta cứ thêm một phần_tử mới , sau_đó lại lấy ra , sau_đó lại thêm mới .\nThao_tác thêm và xóa xảy_ra liên_tiếp nhau , thì ta phải thực_hiện thao_tác mở_rộng và co rất nhiều lần , mỗi lần có độ phức_tạp .\nChúng_ta sẽ đi lạc_đề một_chút : tìm_hiểu một_cách khác để chứng_minh Theorem 1 vì cách này cho chúng_ta ý_tưởng để (phân tích và) giải_quyết trường_hợp xóa_khỏi mảng .\nKhi số phần_tử của mảng đạt ngưỡng , lần mở_rộng gần nhất_là khi .\nĐiều đó có_nghĩa giữa hai lần mở_rộng , ta đã chèn : vào mảng .\nMở_rộng mảng mất thời_gian , do_đó , chia trung_bình cho các phần_tử vừa chèn vào giữa hai lần mở_rộng liên_tiếp , ta có : Phân_tích trên có điểm hay_là ta chỉ_cần nhìn vào các phần_tử giữa hai lần mở_rộng liên_tiếp để phân_tích mà không cần quan_tâm đến toàn_bộ mảng hiện_tại .\nNhận_xét này cho ta cách giải_quyết xóa vào cuối mảng như_sau : ta chỉ giải_phóng bộ_nhớ khi (thay vì như_ý_tưởng trên) .\nNếu xóa_một phần_tử khỏi mảng mà số dữ_liệu còn_lại trong mảng , ta sẽ : (i) cấp_phát mảng mới kích_thước (chú ý ở đây) , (ii) copy toàn_bộ sang mảng mới , và (iii) giải_phóng bộ_nhớ của .\nNhư_vậy , lượng bộ_nhớ dư_thừa tối_đa là .\nGọi_là số thao_tác xóa trước_khi ta thực_hiện co mảng .\nTheo cách mở_rộng mảng , ta chỉ mở_rộng mảng đến dung_lượng khi và chỉ khi dữ_liệu trong mảng có kích_thước .\nDo ta chỉ co mảng khi , ta phải xóa ít_nhất : phần_tử ra khỏi mảng .\nPhép co mất thời_gian , do_đó , trung_bình mỗi thao_tác xóa mất tối_đa : Phần bộ_nhớ dư_thừa trong cấu_trúc mảng mở_rộng trình_bày ở trên là .\nVề_mặt lí_thuyết , ta có_thể giảm phần bộ_nhớ dư_thừa này xuống còn 2 .\nMình khuyến_khích bạn_đọc đọc thêm tại 2 .\n1 T .\nH .\nCormen , C .\nE .\nLeiserson , R .\nL .\nRivest , C .\nStein (2001) 1990 .\n.\nIntroduction to Algorithms (2nd ed . ) .\nMIT_Press and McGraw-Hill .\npp .\n416–424 .\nISBN 0-262-03293-7 .\n2 A .\nBrodnik , S .\nCarlsson , R .\nSedgewick , J .\nMunro , E .\nD .\nDemaine (1999) .\n(Technical Report_CS-99-09) (PDF) , Department of Computer_Science , University of Waterloo .\n, , , , Trackback link : Powered by and\n", "tagged": "Nơi/N tổng_hợp/V và/Cc chia_sẻ/V những/L kiến_thức/N liên_quan/V tới/E giải_thuật/Np nói_chung/X và/Cc lý_thuyết/Np khoa_học/N máy_tính/N nói_riêng/X ./CH\nin/V Ngăn_xếp/Np (Stack)/Np là/V cấu_trúc/N dữ_liệu/N trong/E đó/P phần_tử/N nào/P được/V đưa_vào/Np sau/E cũng/R sẽ/R được/V lấy/V ra/V trước/E ./CH\nHàng/N đợi/V (Queue)/Np là/V cấu_trúc/N dữ_liệu/N trong/E đó/P phần/N từ/E nào/P được/V đưa_vào/Np trước/E sẽ/R được/V lấy/V ra/V trước/E ./CH\nTưởng_tượng/V ngăn_xếp/Np giống_như/Np một/M chồng/N sách;/Np cuốn/Nc sách/N trên/E đầu/N của/E chồng/N sách/N là/V cuốn/Nc sách/N được/V đưa_vào/Np cuối_cùng/A ,/CH khi/N bạn/N lấy/V một/M cuốn/Nc sách/N ra/V khỏi/V chồng/N thì/C bạn/N nên/C lấy/V cuốn/Nc ở/E trên/E cùng/A ./CH\nHàng/N đợi/V thì/C giống_như/Np khi/N bạn/N xếp_hàng/V trong/E siêu/Z thị;/Np ai/P xếp_hàng/V trước/E sẽ/R được/V thanh_toán/V (đi/Np ra/V khỏi/V hàng/N đợi)/Np trước/E ./CH\nĐó/P là/V tất_cả/P những/L gì/P bạn/N cần/V biết/V về/E ngăn_xếp/Np và/Cc hàng/N đợi/V ./CH\n(a)/Np Minh_hoạ/V ngăn_xếp/Np ./CH\nCác/L phần_tử/N được/V đưa_vào/Np (push)/Np đỉnh/N ngăn_xếp/Np và/Cc cũng/R được/V lấy/V ra/V (pop)/Np từ/E đỉnh/N của/E ngăn_xếp/Np ./CH\n(b)/Np Minh_họa/V hàng/N đợi/V ./CH\nCác/L phần_tử/N được/V đưa_vào/Np (enqueue)/Np cuối/N hàng/N đợi/V và/Cc cũng/R được/V lấy/V ra/V (dequeue)/Np từ_đầu/Np của/E hàng/N đợi/V ./CH Thực_thi/V ngăn_xếp/Np có/V hai/M cách/N :/CH sử_dụng/V mảng/N hoặc/Cc sử_dụng/V ./CH\nNếu/C thực_hiện/V bằng/E mảng/N ,/CH kí_hiệu/Np là/V ,/CH ta/P cần/V một/M biến/V ,/CH kí_hiệu/Np là/V ,/CH để/E xác_định/V phần_tử/N đầu_tiên/A của/E ngăn_xếp/Np ./CH\nPhần_tử/N chính/T là/V phần_tử/N trên/E cùng/A của/E ngăn_xếp/Np (phần/Np tử/V được/V đưa_vào/Np ngăn_xếp/Np gần_đây/Np nhất)/Np ./CH\nMỗi/L khi/N chèn/V vào/E ngăn_xếp/Np dữ_liệu/N ,/CH ta/P thực_hiện/V hai/M bước/V :/CH Khi/N lấy/V phần_tử/N ra/V khỏi/V ngăn_xếp/Np ,/CH ta/P sẽ/R copy/Np dữ_liệu/N từ/E ra/V một/M biến/V ,/CH giảm/V 1/M đơn_vị/N và/Cc trả_lại/Np giá_trị/N của/E biến/V ./CH\nNếu/C thực_hiện/V ngăn_xếp/Np bằng/E DSLK/Np ,/CH mỗi/L khi/N thêm/V vào/E ngăn_xếp/Np ,/CH ta/P luôn/R chèn/V vào/E đầu/N của/E DSLK/Np (/CH chúng_ta/P đã/R có/V nhận_xét/N là/V chèn/V vào/E đầu/N DSLK/Np luôn/R hiệu_quả/N và/Cc sạch_sẽ/A hơn/A chèn/V vào/E đuôi)/Np ./CH\nKhi/N lấy/V dữ_liệu/N ra/V khỏi/V ngăn_xếp/Np ,/CH ta/P lấy/V dữ_liệu/N ra/V từ/E mắt_xích/Np đầu_tiên/A của/E DSLK/Np ./CH Thực_thi/V hàng/N đợi/V ,/CH ta/P cũng/R có/V hai/M cách/N tương_tự/A như/C ngăn_xếp/Np ,/CH chỉ_có/Np thứ_tự/N lấy/V ra/V và/Cc đưa_vào/Np là/V khác/A ./CH\nKhi/N đưa_vào/Np hàng/N đợi/V ,/CH bạn/N nên/C đưa_vào/Np đuôi/N của/E DSLK/Np và/Cc lấy/V ra/V từ_đầu/Np của/E DSLK/Np nếu/C cấu_trúc/N bạn/N sử_dụng/V là/V DSLK_đơn/Np (tại/Np sao_không/Np làm/V ngược_lại/X ?/CH )/CH ./CH\nNếu/C bạn/N sử_dụng/V DSLK/Np đôi/M thì/C bạn/N có_thể/R làm/V ngược_lại/X ,/CH lấy/V ra/V từ/E đuôi/N và/Cc chèn/V vào/E đầu/N của/E DSLK/Np ./CH\nDo/E thực_thi/V ngăn_xếp/Np và/Cc hàng/N đợi/V có/V nhiều/A điểm/N tương_tự/A nhau/N ,/CH từ_đây/Np trở_đi/Np mình/P chỉ/R nói/V về/E thực_thi/V ngăn_xếp/Np ./CH\nTrong/E hai/M cách/N thực_thi/V trên/E ,/CH mỗi/L cách_đều/Np có_một/Np điểm/N yếu/A riêng/A ./CH\nTrong/E phương_pháp/N thực_thi/V bằng/E mảng/N ,/CH ta/P cần/V phải_biết/N trước/E lượng/N bộ_nhớ/Np tối_đa/A của/E hàng/N đợi/V tại/E một_thời/Np điểm/N bất_kì/R để/E khai_báo/V và/Cc cấp_phát/V bộ_nhớ/Np cho/E mảng/N ./CH\nTrong/E một_số/L trường_hợp/N ,/CH ví_dụ/C ,/CH ta/P có_thể/R ước_lượng/Np được/V lượng/N bộ_nhớ/Np này/P một_cách/N khá/R chính_xác/A ./CH\nTuy_nhiên/C ,/CH trong/E hầu_hết/R các/L trường_hợp/N khác/A ,/CH rất/R khó/A để/E biết/V trước/E ./CH\nCho_dù/C biết/V trước/E lượng/N bộ_nhớ/Np tối_đa/A này/P ,/CH không_phải/Np tại/E thời_điểm/N nào/P ta/P cũng/R cần_dùng/Np hết/V lượng/N bộ_nhớ/Np khai_báo/V ./CH\nĐiều/N này/P dẫn/V đến/E ./CH\nNếu/C thực_thi/V bằng/E DSLK/Np ,/CH ta/P có_thể/R khắc_phục/V dư_thừa/N bộ_nhớ/Np ,/CH nhưng/C mỗi/L lần/N thêm/V một/M mắt_xích/Np mới/R ta/P lại/R phải/V thực_hiện/V cấp_phát/V bộ_nhớ/Np cho/E mắt_xích/Np đó/P ./CH\nCác/L hàm_cấp_phát/Np bộ_nhớ/Np (ví/Np dụ/V hàm_malloc/Np trong/E C)/Np nói_chung/X đều/R liên_quan/V đến/E một/M chuỗi/N các/L thủ_tục/N khác/A để/E quản_lí/V bộ_nhớ/Np ./CH\nDo_đó/C ,/CH mỗi/L lần/N cấp_phát/V bộ_nhớ/Np như_vậy/X cũng/R không_hề/Np rẻ/A ./CH\nNếu/C coi/V cách/N thực_thi/V mảng/N là/V một_cách/N thực_thi/V đổi/V bộ_nhớ/Np lấy/V tốc_độ/N thì/C cấu_trúc/N mảng/N mở_rộng/V (extendable/Np array)/Np ta/P nói/V tới/E ở/E đây/P cũng/R có/V tính_chất/N tương_tự/A ./CH\nTuy_nhiên/C ,/CH mảng/N mở_rộng/V cho_phép/V ta/P kiểm_soát/V được/V lượng/N bộ_nhớ/Np hi_sinh/V để/E đổi/V lại/R thời_gian_thực/Np thi/V ,/CH do_đó/C ,/CH nó/P phù_hợp/V trong/E ứng_dụng/V thực_thi/V ngăn_xếp/Np (hàng/Np đợi)/Np ./CH\nVector/Np trong/E C++/Np chính/T là/V cấu_trúc/N mảng/N mở_rộng/V ./CH\nMảng/N mở_rộng/V còn/R được/V biết/V tới/E một/M cái/Nc tên/N khác/A là/V (dynamic/Np array)/Np ./CH\nMình/P không/R thích/V từ/E \"động\"/Np lắm/R nên/C dùng/V từ/E mở_rộng/V ./CH\nCái/Nc tên/N chuẩn/N hơn/A có_lẽ/X là/V mảng/N tự/P mở_rộng/V hoặc/Cc mảng/N tự/P điều/N chính/T kích_thước/N ./CH\nTất_cả/P đều/R dài/A nên/C tạm_thời/A dùng/V từ/E mảng/N mở_rộng/V vậy/P ./CH\nBạn/N nào/P có/V tên/N hay/Cc thì/C comment/Np xuống/V dưới/E giúp/V mình/P ./CH\nVề/E cơ_bản/A ,/CH mảng/N mở_rộng/V (extendable/Np array)/Np là/V một/M cấu_trúc/N dựa/V trên/E mảng/N ./CH\nMảng/N này/P ,/CH gọi_là/V ,/CH ban_đầu/N được/V cấp_phát/V một/M lượng/N bộ_nhớ/Np nhỏ/A (10/Np phần_tử/N chẳng_hạn/X như/C trong/E )/CH ./CH\nĐể/E đơn_giản/A ,/CH ta/P giả_sử/Np chỉ_thực/Np hiện/N chèn/V (vào/Np cuối)/Np mảng/N mở_rộng/V ./CH\nThao_tác/V xóa/V sẽ/R được/V bàn/N thêm/V ở/E phần/N dưới/E ./CH Mỗi/L lần/N chèn/V một/M phần_tử/N vào/E cuối/N mảng/N (ta/Np sẽ/R đề_cập/V đến/E xóa/V sau)/Np ,/CH nếu/C mảng/N đã/R đầy/A thì/C ta/P :/CH Ba/M thao_tác/V trên/E có_vẻ/X rất/R tốn_kém/V (và/Np thực_sự/A là/V nó/P tốn/V kém)/Np vì/E phải/V xóa/V toàn_bộ/L mảng/N cũ/A và/Cc tạo/V một/M mảng/N mới/R ./CH\nĐiểm/N mấu_chốt/Np ở/E đây/P là/V ta/P sẽ/R phải/V thường_xuyên/A thực_hiện/V ba/M thao_tác/V trên/E vì/E ta/P chỉ_thực/Np hiện/N khi_nào/Np mảng/N đầy/A ./CH\nNhận_xét/N ,/CH mỗi/L lần/N thực_hiện/V ba/M thao_tác/V trên/E ,/CH ta/P tăng/V bộ_nhớ/Np lên/V lần/N ./CH\nDo_đó/C ,/CH nếu/C bộ_nhớ/Np hiện_tại/N của/E mảng/N là/V thì/C tổng_số/N lần/N thực_hiện/V ba/M thao_tác/V là/V ./CH\nMỗi/L lần/N thực_hiện/V ba/M thao_tác/V trên/E ,/CH ta/P trả/V thời_gian/N để/E khởi/V tạo/V và/Cc copy/Np ,/CH do_đó/C ,/CH tổng/N thời_gian/N là/V ./CH\nPhân_tích/V kĩ/A hơn/A trình_bày/V dưới_đây/Np cho/E thấy/V tổng/N thời_gian/N phải/V trả/V vẫn/R chỉ/R là/V ,/CH hay/Cc nói_cách_khác/Np ,/CH thời_gian/N (armotized/Np time)/Np cho/E mỗi/L thao_tác/V chèn/V là/V ./CH\nChú_ý/V ở/E đây/P ta/P vân/N chưa/R xét/V phép/N xóa_khỏi/Np mảng/N ./CH Để/E thực_thi/V các/L thao_tác/V trên/E ,/CH ta/P cần/V thêm/V hai/M biến/V :/CH (i)/Np biến/V lưu_trữ/Np dung_lượng/Np (capacity)/Np của/E mảng/N hiện_tại/N và/Cc (ii)/Np biến/V để/E lưu_số/Np phần_tử/N hiện_tại/N lưu_trữ/Np trong/E mảng/N ,/CH hay/Cc lượng/N dữ_liệu/N của/E mảng/N ./CH\nTa/P sẽ/R kí_hiệu/Np mảng/N mở_rộng/V bằng/E bộ_ba/Np biến/V ./CH\nBan_đầu/N khởi/V tạo/V mảng/N ,/CH ta/P cấp_phát/V một/M mảng/N kích_thước/N hằng_số/Np ./CH\nỞ/E đây/P ta/P khởi/V tạo/V là/V để/E dễ/A phân_tích/V ./CH\nTa/P có/V :/CH Để/E trình_bày/V được/V đơn_giản/A ,/CH ta/P giả_sử/Np nguyên/A ./CH\nDễ/A thấy/V ,/CH nếu/C bỏ_qua/V thao_tác/V mở_rộng/V thì/C tổng/N thời_gian/N chèn/V phần_tử/N là/V ./CH\nTa/P chỉ_cần/Np đếm_số/Np thao_tác/V xảy_ra/Np trong/E quá_trình/N mở_rộng/V ./CH\nGọi/V ./CH\nDo/E ta/P chỉ_thực/Np hiện/N mở_rộng/V mảng/N mỗi/L khi/N số/N phần_tử/N của/E mảng/N là/V với/E ,/CH và/Cc mỗi/L lần/N mở_rộng/V ,/CH ta/P mất/V thời_gian/N là/V kích_thước/N của/E mảng/N ,/CH i/M ./CH e/Ni ,/CH thời_gian/N ./CH\nTa/P có/V tổng/N thời_gian/N mở_rộng/V mảng/N là/V :/CH Từ/E (1)/Np ,/CH ta/P suy/V ra/V tổng/N thời_gian/N chèn/V là/V Bằng/E một_chút/L phân_tích/V nhỏ/A (coi/Np như/C bài_tập/Np cho/E bạn/N đọc)/Np ,/CH ta/P thấy/V lượng/N bộ_nhớ/Np dư_thừa/N là/V tối_đa/A là/V ./CH\nTheorem/Np 1/M cho/E ta/P thấy/V rõ/A :/CH nếu/C ta/P cần/V tiết_kiệm/V bộ_nhớ/Np (/CH càng/R gần/A 1)/Np ,/CH thì/C ta/P cần/V phải/V trả/V nhiều/A thời_gian/N cho/E mỗi/L thao_tác/V chèn/V và/Cc ngược_lại/X ,/CH ta/P càng/R cấp_phát/V nhiều/A bộ_nhớ/Np sau/E mỗi/L lần/N bị/V đầy/A (/CH lớn)/Np thì/C khả_năng/N dư_thừa/N bộ_nhớ/Np càng/R cao/A ,/CH nhưng/C thời_gian/N mỗi/L thao_tác/V chèn/V lại/R càng/R nhỏ/A ./CH Điểm/N chính/T ở/E đây/P là/V ta/P muốn/V thu_hồi/V phần/N bộ_nhớ/Np dư_thừa/N sau/E khi/N xóa/V (rất/Np nhiều)/Np phần_tử/N khỏi/V mảng/N ,/CH để/E đảm_bảo/V dung_lượng/Np của/E mảng/N không/R quá/R lớn/A so_với/Np lượng/N dữ_liệu/N lưu_trữ/Np trong/E mảng/N ,/CH i/M ./CH e/Ni ,/CH ./CH\nNếu/C ta/P không/R nhất_thiết/R phải/V thu_hồi/V bộ_nhớ/Np thì/C chỉ/R việc/N xóa_khỏi/Np mảng/N bình_thường/A ./CH\nTa/P muốn/V đảm_bảo/V ,/CH ngoài/E việc/N cho_phép/V thu_hồi/V bộ_nhớ/Np ,/CH trung_bình/A mỗi/L thao_tác/V xóa/V và/Cc chèn/V có/V thời_gian/N ./CH\nXét/V ý_tưởng/N sau/E mở_rộng/V từ/E ý_tưởng/N ở/E trên/E :/CH Giả_sử/Np hiện_tại/N dung_lượng/Np của/E mảng/N là/V ./CH\nNếu/C khi/N ta/P xóa_một/Np phần_tử/N khỏi/V mảng/N ,/CH số/N phần_tử/N trong/E mảng/N còn_lại/Np là/V ,/CH ta/P sẽ/R \"co\"/Np bộ_nhớ/Np của/E mảng/N về/E bằng/E cách/N tương_tự/A như/C khi/N chèn/V :/CH (i)/Np cấp_phát/V mảng/N mới/R kích_thước/N ,/CH (ii)/Np copy/Np toàn_bộ/L sang/V mảng/N mới/R ,/CH và/Cc (iii)/Np giải_phóng/V bộ_nhớ/Np của/E ./CH\nVấn_đề/N của/E ý_tưởng/N này/P ở/E chỗ/N nếu/C và/Cc nếu/C ta/P cứ/R thêm/V một/M phần_tử/N mới/R ,/CH sau_đó/Np lại/R lấy/V ra/V ,/CH sau_đó/Np lại/R thêm/V mới/R ./CH\nThao_tác/V thêm/V và/Cc xóa/V xảy_ra/Np liên_tiếp/A nhau/N ,/CH thì/C ta/P phải/V thực_hiện/V thao_tác/V mở_rộng/V và/Cc co/V rất/R nhiều/A lần/N ,/CH mỗi/L lần/N có/V độ/N phức_tạp/A ./CH\nChúng_ta/P sẽ/R đi/V lạc_đề/Np một_chút/L :/CH tìm_hiểu/V một_cách/N khác/A để/E chứng_minh/V Theorem/Np 1/M vì/E cách/N này/P cho/E chúng_ta/P ý_tưởng/N để/E (phân/Np tích/N và)/Np giải_quyết/V trường_hợp/N xóa_khỏi/Np mảng/N ./CH\nKhi/N số/N phần_tử/N của/E mảng/N đạt/V ngưỡng/Np ,/CH lần/N mở_rộng/V gần/A nhất_là/X khi/N ./CH\nĐiều/N đó/P có_nghĩa/A giữa/N hai/M lần/N mở_rộng/V ,/CH ta/P đã/R chèn/V :/CH vào/E mảng/N ./CH\nMở_rộng/V mảng/N mất/V thời_gian/N ,/CH do_đó/C ,/CH chia/V trung_bình/A cho/E các/L phần_tử/N vừa/R chèn/V vào/E giữa/N hai/M lần/N mở_rộng/V liên_tiếp/A ,/CH ta/P có/V :/CH Phân_tích/V trên/E có/V điểm/N hay_là/Cc ta/P chỉ_cần/Np nhìn/V vào/E các/L phần_tử/N giữa/N hai/M lần/N mở_rộng/V liên_tiếp/A để/E phân_tích/V mà/C không/R cần/V quan_tâm/V đến/E toàn_bộ/L mảng/N hiện_tại/N ./CH\nNhận_xét/N này/P cho/E ta/P cách/N giải_quyết/V xóa/V vào/E cuối/N mảng/N như_sau/Np :/CH ta/P chỉ/R giải_phóng/V bộ_nhớ/Np khi/N (thay/Np vì/E như_ý_tưởng/Np trên)/Np ./CH\nNếu/C xóa_một/Np phần_tử/N khỏi/V mảng/N mà/C số/N dữ_liệu/N còn_lại/Np trong/E mảng/N ,/CH ta/P sẽ/R :/CH (i)/Np cấp_phát/V mảng/N mới/R kích_thước/N (chú/Np ý/N ở/E đây)/Np ,/CH (ii)/Np copy/Np toàn_bộ/L sang/V mảng/N mới/R ,/CH và/Cc (iii)/Np giải_phóng/V bộ_nhớ/Np của/E ./CH\nNhư_vậy/X ,/CH lượng/N bộ_nhớ/Np dư_thừa/N tối_đa/A là/V ./CH\nGọi_là/V số/N thao_tác/V xóa/V trước_khi/Np ta/P thực_hiện/V co/V mảng/N ./CH\nTheo/V cách/N mở_rộng/V mảng/N ,/CH ta/P chỉ/R mở_rộng/V mảng/N đến/E dung_lượng/Np khi/N và/Cc chỉ/R khi/N dữ_liệu/N trong/E mảng/N có/V kích_thước/N ./CH\nDo/E ta/P chỉ/R co/V mảng/N khi/N ,/CH ta/P phải/V xóa/V ít_nhất/A :/CH phần_tử/N ra/V khỏi/V mảng/N ./CH\nPhép/N co/V mất/V thời_gian/N ,/CH do_đó/C ,/CH trung_bình/A mỗi/L thao_tác/V xóa/V mất/V tối_đa/A :/CH Phần/N bộ_nhớ/Np dư_thừa/N trong/E cấu_trúc/N mảng/N mở_rộng/V trình_bày/V ở/E trên/E là/V ./CH\nVề_mặt/Np lí_thuyết/Np ,/CH ta/P có_thể/R giảm/V phần/N bộ_nhớ/Np dư_thừa/N này/P xuống/V còn/R 2/M ./CH\nMình/P khuyến_khích/V bạn_đọc/N đọc/V thêm/V tại/E 2/M ./CH\n1/M T/Nu ./CH\nH/Ny ./CH\nCormen/Np ,/CH C/Ni ./CH\nE/Ni ./CH\nLeiserson/Np ,/CH R/Np ./CH\nL/Ny ./CH\nRivest/Np ,/CH C/Ni ./CH\nStein/Np (2001)/Np 1990/M ./CH\n./CH\nIntroduction/Np to/A Algorithms/Np (2nd/Np ed/Np ./CH )/CH ./CH\nMIT_Press/Np and/Np McGraw-Hill/Np ./CH\npp/Ni ./CH\n416–424/Np ./CH\nISBN/Np 0-262-03293-7/Np ./CH\n2/M A/Ni ./CH\nBrodnik/Np ,/CH S/Y ./CH\nCarlsson/Np ,/CH R/Np ./CH\nSedgewick/Np ,/CH J/Np ./CH\nMunro/Np ,/CH E/Ni ./CH\nD/Ny ./CH\nDemaine/Np (1999)/Np ./CH\n(Technical/Np Report_CS-99-09)/Np (PDF)/Np ,/CH Department/Np of/E Computer_Science/Np ,/CH University/Np of/E Waterloo/Np ./CH\n,/CH ,/CH ,/CH ,/CH Trackback/Np link/Np :/CH Powered/Np by/Np and/Np\n", "title": "Mảng mở rộng và ứng dụng trong ngăn xếp, hàng đợi --- Extendable Array, Stack and Queue\n", "link": "http://www.giaithuatlaptrinh.com/?p=1883\n"}