Thuật toán Rabin-Karp--- Rabin-Karp algorithm
http://www.giaithuatlaptrinh.com/?p=290
Nơi tổng hợp và chia sẻ những kiến thức liên quan tới giải thuật nói chung và lý thuyết khoa học máy tính nói riêng.   in  | Trong bài này chúng ta sẽ tìm hiểu thuật toán Rabin-Karp áp dụng trong bài toán tìm kiếm xâu. Thuật toán được phát triển bởi Richard Karp và Michael Rabin [1] vào  năm 1987. Ý tưởng trung tâm của thuật toán là coi  và phép toán so sánh hai xâu được đưa về phép toán so sánh các số nguyên. Trước hết ta nhắc lại bài tìm kiếm xâu: Trước hết chúng ta xét ví dụ: văn bản  và xâu mẫu . Coi xâu mẫu  là một số nguyên, và thực hiện so sánh  với  theo thứ tự từ trái sang phải. Khi so sánh  với , ta sẽ so sánh hai số nguyên  và , thay vì so sánh hai xâu. Tương tự như vậy với các bước tiếp theo. Cuối cùng ta sẽ tìm được .Tổng quát hóa, giả sử , gọi  là số nguyên ứng với mẫu :  và  là số nguyên ứng với xâu con .  Bài toán tìm kiếm xâu trở thành: Để chuyển  thành 1 số nguyên, thay vì tính các lũy thừa của 10, ta sẽ sử dụng . Ta có:  Đặt:  Suy ra . Dựa vào định nghĩa đệ quy của , ta có thể tính  sử dụng , phép toán cơ bản (cộng, trừ, nhân, chia), ta có thể tính được  sử dụng  phép toán cơ bản.Tương tự, với mỗi chỉ số , sử dụng phương pháp Horner, ta có thể tính được  sử dụng  phép toán cơ bản. Do đó, ta có thể tính tất cả các số  sử dụng  phép toán cơ bản. Tuy nhiên, đó chưa phải là cách tốt nhất. Nhận thấy  chữ số cuối của  và  chữ số đầu của  giống nhau. Do đó ta có:  Do đó, có thể tính  từ  sử dụng  phép toán cơ bản. Giả mã của thuật toán:  Để tính , ta sử dụng  phép toán cơ bản. Tính tất cả các gía trị , ta sử dụng  phép toán cơ bản. Do đó số phép toán cơ bản là . Tuy nhiên, do các số  có độ dài  chữ số. Do đó, để thực hiện các phép toán cơ bản, ta phải sử dụng  thao tác bít. Do đó tổng thời gian của thuật toán vẫn là , không tốt hơn thuật toán trâu bò.Vấn đề của thuật toán  nằm ở chỗ các số biểu diễn xâu  và các xâu con độ dài  của là các số qúa lớn. Dưới góc nhìn của hàm băm, hàm chuyển đổi xâu  và các xâu con của  thành các số ở trên là một hàm băm. Hàm băm này luôn đảm bảo các xâu con khác nhau độ dài  luôn được băm về các giá trị khác nha. Do đó, giá trị đầu ra của hàm băm là các số rất lớn. Do đó, Karp và Rabin đề xuất nới lỏng tính chất của hàm băm trên:: Chọn một hàm băm  sao cho  các thao tác cơ bản được thực hiện hiệu quả và  khi băm hai xâu con khác nhau có cùng độ dài , xác suất hai giá trị băm giống nhau là nhỏ.Để các thao tác cơ bản được thực hiện hiệu qủa, đầu ra của hàm băm phải là các số nguyên không quá lớn. Thông thường các số nguyên đầu ra có độ lớn được biểu diễn bởi  bít được coi là không quá lớn. Trong thực tế, các giá trị này sẽ được chọn sao cho đầu ra có thể biểu diễn được bằng số nguyên  hoặc  bít, do đó các thao tác cơ bản coi như hằng số.Xác xuất trùng nhau (còn gọi là xác suất đụng độ) của hai giá tri băm của hai xâu con khác nhau độ dài , gọi là , được coi là nhỏ nếu:  Giả sử chúng ta đã tìm được hàm băm  tốt, gọi:   là tập các xâu con của  độ dài  có cùng giá trị băm với . Với mỗi xâu con trong tập , ta sẽ phải so sánh với  (mất thời gian ) để kiểm tra xâu con đó có thực sự là  hay không. Do đó, tổng thời gian của thuật toán là  trong đó  là thời gian để tính  và  là thời gian so sánh  với các xâu con  trong . Theo , về mặt kì vọng, số lượng các xâu con trong  là: Do đó, ta có:   Gọi  là hàm băm modulo  trong đó  là một số nguyên tố.  Karp-Rabin đề xuất chọn hàm băm  một cách ngẫu nhiên từ một họ các hàm băm: .
 Do đầu ra của hàm băm là một số nguyên , do đó có thể biểu diễn bằng  bít, thỏa mãn tính chất  của hàm băm tốt. Áp dụng hàm băm , các thao tác cơ bản đều được lấy theo modulo . Giả mã của thuật toán như sau: 
Code của giả mã bằng C:Tính  có thể thực hiện nhanh bằng hàm  () trong .  Hàm băm chọn theo thuật toán Rabin-Karp thỏa mãn tính chất . Ta chỉ cần chứng minh tính chất . Trước hết ta có 2 Claim sau: Số ước số nguyên tố của một số nguyên  ít hơn Thật vậy, gọi  là các ước nguyên tố của , ta có . Từ đó dễ dàng suy ra Claim 1. Gọi  là số lượng các số nguyên tố có độ lớn , ta có .Gọi  là gía trị (khi chưa lấy modulo) tương ứng với hai xâu kí tự  độ dài . Do , ta có . Hay nói cách khác,  là một ước nguyên tố của . Do , theo Claim 1, số ước nguyên tố của  nhỏ hơn . Theo Claim 2, có  lựa chọn của  vì  là số nguyên tố . Do đó, xác suất chọn  là ước của  là:  Như vậy, hàm băm chọn ngẫu nhiên từ họ  thỏa mãn tính chất , do đó theo Theorem 1, thời gian kì vọng của thuật toán Rabin-Karp là .Sinh số nguyên tố  trong đoạn  không phải là vấn đề đơn giản. Trong thực tế thực thi, để đơn giản, chúng ta có thể thay bước sinh số nguyên tố  bằng cách chọn cố định một số nguyên tố  đủ lớn. Tất nhiên với cách này về mặt lý thuyết, chúng ta không thể đảm bảo thời gian kì vọng của thuật toán là tuyến tính.Về mặt lý  thuyết, chúng ta có thể sinh số nguyên tố ngẫu nhiên bằng cách sinh một số ngẫu nhiên, kiểm tra nó có phải là số nguyên tố hay không. Nếu không phải là số nguyên tố, ta sẽ thử lại:Code của giả mã bằng C:Trước hết phân tích xem thuật toán  sẽ dừng sau bao nhiêu phép chọn ngẫu nhiên. Theo Claim 2 (Prime Number Theorem), trong mỗi bước chọn ngẫu nhiên, xác suất chọn được một số nguyên tố là:  Do đó, sau   bước, xác suất chọn được một số nguyên tố là:  Ở công thức trên ta sử dụng xấp xỉ . Để kiểm tra  có phải là số nguyên tố hay không, ta có thể sử dụng thuật toán . Thuật toán Rabin-Miller có độ phức tạp , do đó, thuật toán () có thời gian . Với ,  ta có thể sinh số nguyên tố ngẫu nhiên với thời gian . Trong trường hợp các kí tự không phải là các số từ  đến , ta có thể sử dụng cơ số  thay vì , trong đó  là số lượng các kí tự trong bảng chữ cái . Mọi phân tích với cơ số khác  vẫn không thay đổi.Nếu áp dụng thuật toán Rabin-Karp để tìm kiếm tất cả các vị trí xuất hiện của  trong , thuật toán Rabin-Karp có thời gian kì vọng là  trong đó  là số lần  xuất hiện trong  do mỗi lần so sánh hai giá trị băm, nếu bằng nhau ta phải mất thời gian  để kiểm tra xem hai xâu có bằng nhau hay không. Trong trường hợp , thuật toán mất thời gian . Do đó, để thuật toán có thể được thực hiện nhanh, ta phải chấp nhận lỗi. Có nghĩa là mỗi lần thấy hai gía trị băm bằng nhau, chúng ta sẽ trả về vị trí xuất hiện mà không kiểm tra lại xem hai xâu có bằng nhau thật không. Để thuật toán có độ chính xác cao , chúng ta phải giảm thiểu lỗi. Một cách để  giảm thiểu lỗi là tăng tập lựa chọn của . Ví dụ thay vì chọn  ngẫu nhiên trong khoảng , ta chọn  trong khoảng  trong đó . Bằng phân tích như trên, ta sẽ có xác suất đụng độ là  và do đó, số lượng xâu con của  khác  mà có cùng giá trị băm sẽ là . Cách khác là ta có thể áp dụng vài hàm băm khác nhau cùng một lúc.  Mình khuyến khích bạn đọc thử thực thi thuật toán và nộp bài . Code submit cho bài này mình đính ở cuối bài.Code:, .[1] Karp, Richard M., and Michael O. Rabin.  IBM Journal of Research and Development 31.2 (1987): 249-260.
[2] Jeff Erickson, , UIUC, 2015.
[3]  Cormen, Thomas H.; Leiserson, Charles E., Rivest, Ronald L., Stein, Clifford. , Chapter 32. MIT Press and McGraw-Hill (2001). ISBN 0-262-03293-7 , , Trackback link: Powered by  and 