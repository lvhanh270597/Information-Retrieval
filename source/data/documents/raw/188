Sắp xếp-- quicksort and merge sort
http://www.giaithuatlaptrinh.com/?p=41
Nơi tổng hợp và chia sẻ những kiến thức liên quan tới giải thuật nói chung và lý thuyết khoa học máy tính nói riêng.   in  | Trong bài này chúng ta sẽ áp dụng phương pháp  trong bài toán sắp xếp.  Hai phương pháp sắp xếp đặc trưng dựa trên chia để trị là  và . 

 
Quick Sort được phát minh bởi  1959. Quick Sort là một thuật toán sắp xếp khá nhanh trong thực tế, mặc dù trong trường hợp tồi nhất là .  có thời gian  là , với hằng số đằng sau  khá nhỏ. Điều đó giải thich một phần vì sao Quick Sort cũng hay được dùng trong thực tế. Tư tưởng của quick sort khá đơn giản và gồm hai bước chính:Dưới đây là giả mã của thuật toán. Hàm () chia mảng  thành hai phần với pivot được chọn là , và trả lại vị trí mới của  trong mảng sau khi đã chia. 
Dưới đây là code C của giả mã trên:Giả mã của thuật toán chia mảng với phân tử chọn (pivot) là , trả lại vị trí mới cuả phần tử có giá trị  trong mảng.  
Dưới đây là code C của giả mã trên. Có đôi chút khác biệt khi ta thực thi bằng C vì mảng bắt đầu từ phần tử 0 và mình dùng while (do đã quen) thay vì do while để thực hiện giả mã repeat. Code đầy đủ bằng C sẽ được cho ở cuối bài.
Nhìn vào giả mã cho thuật toán thực hiện (): dễ thấy thời gian thực hiện là . Như vậy, thời gian tính của Quick Sort là:    
Ở đây  phụ thuộc vào việc chọn phần tử pivot . Trong trường hợp tồi nhất, trong mỗi lần đệ quy, phần tử pivot chi mảng thành một phần có 1 phần tử và phần còn lại có n-2 phần tử.  Như vậy thời gian là  (xem  để biết tại sao). Như vậy các bạn có thể ghi nhớ, trong trường hợp tồi nhất, Quick Sort có thời gian chạy là .Trong trường hợp lí tưởng, phần tử pivot chọn luôn chia mảng thành hai phần xấp xỉ như nhau. Như vậy ta có . Như đã nói đến trong bài n, trong những trường hợp không biết chọn phần tử nào là pivot tốt, cách đầu tiên có thể nghĩ tời là chọn  một phần tử của mảng làm pivot, với xác suất như nhau. Với Quick Sort, chọn ngẫu nhiên sẽ cho ta thuật toán với thời gian kì vọng (expected) là . Chi tiết sẽ thảo luận trong phần thuật toán ngẫu nhiên. Cách khác là có thể áp dụng thuật toán  với thời gian tuyến tính để chọn pivot. Về mặt lí thuyết, thời gian tính là  như hằng số trong biều thức  sẽ khá cao. Nếu thực thi thực tế sử dụng cách này sẽ rất chậm.  Merge Sort được phát minh bởi  vào năm 1945 là một thuật toán sắp xếp luôn đảm bảo thời gian chạy tồi nhất là  dựa trên kĩ thuật chia để trị. Ý tưởng cơ bản của Merge Sort gồm hai bước:Dưới đây là giả mã của thuật toán. Hàm () trộn hai mảng con ,  đã sắp xếp thành mảng  đã xắp xếp.  
Code của giả mã bằng C: Giả mã của hàm () 
Code của giả mã bằng C: 
Nhìn vào giả mã ta có thể thấy hàm  có thể thực hiện trong thời gian tuyến tính . Như vậy thời gian thực hiện của Merge Sort là    
Để đơn giản, ta có thể bỏ dấu phần nguyên trên và dưới.  Như vậy thời gian thực hiện của Merge Sort là .Code: Bài viết dự chủ yêu trên notes của Jeff Erickson
 , , , Trackback link:  on                     Mình có một nhận xét thế này đúng ko ạ: giả sử đầu vào là dãy có n số bằng nhau hết, n rất lớn, lúc đấy thời gian sắp xếp của Q - sort luôn là O(n^2) cho dù có sử dụng thuật chọn trung vị đi nữa. on                     Nhận xét của bạn hoàn toàn đúng. Có nhiều cách để giải quyết trường hợp này. Ví dụ khi bạn so sánh pivot với một phần tử bằng nó, bạn sử dụng một counter để đếm xem bao nhiêu phần tử bằng với pivot mà ta đã so sánh, rồi quyết định đưa phần tử này sang trái hay sang phải. Cách này không làm tăng thời gian tiệm cận của Quicksort. Thông thường, để phân tích đơn giản, ta sẽ giả sử các phần tử luôn khác nhau.Powered by  and 