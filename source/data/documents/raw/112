Quy hoạch động -- Dynamic Programming III
http://www.giaithuatlaptrinh.com/?p=99
Nơi tổng hợp và chia sẻ những kiến thức liên quan tới giải thuật nói chung và lý thuyết khoa học máy tính nói riêng.   in  | Trong bài này chúng ta xem xét 2 bài toán khác nhap áp dụng phương pháp quy hoạch động. 
Cho hai chuỗi (string)  và  có chiều dài lần lượt là  và . Khoảng cách edit distance(ED), hay còn gọi là khoảng cách , là số nhỏ nhất các thao tác: chèn một kí tự (letter insertion), xóa kí tự (letter deletion), và đổi kí tự (letter substitution) để biến chuỗi này thành chuỗi kia. Ví dụ: khoảng cách giữa FOOD và MONEY tối đa là 4 vì: OOD  MOD  MOND  MONE  MONEY  
Trong bài này chúng ta sẽ thiết kế thuật toán với thời gian  cho bài toán này dựa trên quy hoạch động. Điều thú vị là thuật toán quy hoạch động cho bài toán này là  về mặt thời gian, theo nghĩa nếu , không tồn tại thuật toán chạy với thời gian ít hơn  với mọi  trừ khi Giả Thiết Thời Gian Lũy Thừa () là sai [].   Để nhận biết bài toán con ta hãy suy nghĩ câu hỏi sau: liệu ta có thể tính khoảng cách ED giữa hai chuỗi con  và  nếu ta biết khoảng cách giữa các chuỗi  và  với  và , trong đó ít nhất một trong hai  hoặc . Trả lời được câu hỏi như vậy có nghĩa là bạn có thể tính được ED giữa  và  dựa vào các bài toán con nhỏ hơn. Gọi  là khoảng cách ED giữa hai dãy con  và .Nếu ta có hai chuỗi con  và , ta có ba lựa chọn để áp dụng ba thao tác với :Trường hợp một trong hai số  hoặc , khoảng cách tương ứng là  hoặc .  Định nghĩa:  Ta có giả mã sau: 
Code của thuật toán bằng C. Code đầy đủ được cho ở cuối bài. In ra các chuỗi trung gian trong quá trình chuyển  thành  như ở trong ví dụ FOOD - MONEY bằng cách truy vết thuật toán  (có thể tham khảo thêm ở ). Thời gian tính của thuật toán  bằng thời gian cần thiết để cập nhật mảng . Mỗi phần tử của mảng mất thời gian  để cập nhật. Do đó thời gian tính của thuật toán là . Bộ nhớ của thuật toán cũng là  để lưu bảng. Nếu để ý kĩ ta sẽ thấy trong thuật toán , phần tử mảng  chỉ phụ thuộc và 3 phần tử liền kề trong bảng. Như vậy ta chỉ cần lưu hàng  của bảng , phần tử liền kề bên trái (left) và liền kề đường chéo (dag) của . Do đó, ta giảm bộ nhớ xuống còn .

Giả mã như sau: 
Vì  và  có vai trò như nhau, thay đổi một chút ta có thể giảm bộ nhớ xuống còn . Code của giả mã bằng C:
Trong bài , chúng ta đã phát triển thuật toán quay lui với thời gian  cho bài toán Subset Sum. Ý tưởng đệ quy là xét một phần tử , tồn tại một dãy con có tổng bằng  nếu một trong hai điều kiện sau là đúng:Như vậy ta có công thức đệ quy:  Như vậy nếu ta đặt  nếu tồn tại một dãy con của  có tổng bằng , ta có  và  đều là các bài toán con. Ta có giải thuật quy hoạc động sau: 
Code của giả mã bằng C: Thời gian tính toán của thuật toán  có thể được quy về thời gian cập nhật các phần tử của mảng . Vì mỗi phần tử của mảng được cập nhật trong thời gian , thời gian tính toán của thuật toán là . Dễ thấy thuật toán sử dụng  bộ nhớ để lưu mảng . Code:  and , 

[1]  Jeff Erickson,  , UIUC.
 Backurs, Arturs, and Piotr Indyk. "Edit Distance Cannot Be Computed in Strongly Subquadratic Time (unless SETH is false)."  (2014).
[3] Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. 1st Edition). McGraw-Hill Higher Education, (2008). , , , Trackback link: Powered by  and 