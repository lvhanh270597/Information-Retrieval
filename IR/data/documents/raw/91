Thuật toán Kosaraju tìm thành phần liên thông mạnh -- Kosaraju's Algorithm
http://www.giaithuatlaptrinh.com/?p=1680
Nơi tổng hợp và chia sẻ những kiến thức liên quan tới giải thuật nói chung và lý thuyết khoa học máy tính nói riêng.   in  | Trong bài này, chúng ta sẽ tìm hiểu thuật toán Kosaraju; thuật toán dễ hiểu nhất trong số các thuật toán tìm thành phần liên thông mạnh. Thuật toán này về cơ bản sẽ duyệt qua đồ thị 2 lần, do đó có thời gian tiệm cận  . So với các thuật toán tìm thành phần liên thông mạnh khác như thuật toán cầu-khớp của Tarjan thì thuật toán Kosaraju chậm hơn, nhưng có cùng thời gian tiệm cận.Đồ thị trong phần này của chúng ta là đồ thị có hướng và có thể có cung song song ngược chiều. Mình khuyến khích bạn đọc xem lại một số khái niệm  có hướng. Ta sẽ kí hiệu đồ thị đầu vào là  và  kí hiệu đồ thị có hướng thu được bằng cách đảo chiều các cạnh của đồ thị . là . Ta gọi  là đồ thị ngược (reversed graph) của đồ thị .Một đồ thị có hướng được gọi là  (strongly connected) nếu tồn tại một đường đi có hướng từ  tới , với mọi cặp đỉnh  của đồ thị. Một đồ thị con  của đồ thị có hướng   được gọi là một thành phần liên thông mạnh (strongly connected component) nếu nó liên thông mạnh và tối đại (maximal), i.e,  tồn tại một đồ thị con liên thông mạnh  của  mà  là đồ thị con của . Xem ví dụ minh họa trong Figure 1.
 Ba đỉnh  tạo nên một thành phần liên thông mạnh của đồ thị. Ba đỉnh  không tạo nên thành phần liên thông mạnh vì tồn tại một đồ thị con liên thông mạnh lớn hơn chứa ba đỉnh này. Trong nhận xét trên, không thay đổi được hiểu theo nghĩa là  của thành phần liên thông mạnh không thay đổi. Hay nói cách khác, nếu  là tập đỉnh của một thành phần liên thông mạnh trong    thì tập đỉnh này cũng là tập đỉnh của một thành phần liên thông mạnh trong . Chứng minh nhận xét trên coi như bài tập cho bạn đọc. Thuật toán Kosaraju gồm hai bước chính (xem thêm giả mã dưới đây): , , , Trackback link: Powered by  and 