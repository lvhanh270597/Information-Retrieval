{"content": "Nơi tổng_hợp và chia_sẻ những kiến_thức liên_quan tới giải_thuật nói_chung và lý_thuyết khoa_học máy_tính nói_riêng .\nin Bài này mình lượt qua cấu_trúc dữ_liệu bảng_băm (hash table) , hàm_băm (hash functions) và một_số cơ_chế giải_quyết xung_đột (collision handling) .\nMục_tiêu của bài này là đưa_ra một_cách nhìn tổng_quan về cách_thức thiết_kế bảng_băm .\nMọi cơ_sở toán_học mình sẽ viết và link trong các bài sau .\nMột cấu_trúc dữ_liệu mà chúng_ta cũng thường_xuyên áp_dụng cho thao_tác tìm_kiếm đó là cây cân_bằng (ví dụ hoặc ) .\ntrong Java chính là sử_dụng cây Red-Black để hỗ_trợ tìm_kiếm .\nDo tính cân_bằng , cấu_trúc dữ_liệu cây này sẽ cho_phép chúng_ta thực_hiện tìm_kiếm trong thời_gian .\nBảng_băm chúng_ta sẽ thảo_luận trong bài này sẽ cho_phép chúng_ta thực_hiện thao_tác tìm_kiếm trong thời_gian kì_vọng .\nGọi_là tập phần_tử ta muốn lưu_trữ trong bảng_băm .\nCác phần_tử của tập_hợp mà chúng_ta lưu_trữ thường từ một_tập lớn hơn mà ta gọi_là (ground set) .\nTập gốc ta xét ở đây có lực_lượng hữu_hạn nhưng rất lớn so_với và .\nVí_dụ : nếu tập gốc là tập các tên người với tối_đa là kí_tự thì kích_thước tối_đa của tập gốc là (ta sử_dụng bảng_chữ_cái tiếng Việt) .\nNếu giả_sử tập dữ_liệu trong bảng_băm là tên của người thực thì con_số lớn hơn rất nhiều so_với (dân số Việt_Nam) .\nBảng_băm là một mảng có kích_thước .\nĐể lưu_trữ dữ_liệu vào bảng_băm , ta sẽ dùng một (hash function) .\nMột hàm_băm : là một ánh_xạ gán cho mỗi phần_tử của tập một vị_trí trong bảng .\nCụ_thể , phần_tử sẽ được lưu tại ô của bảng và ta nói được băm vào vị_trí và được gọi_là (hash code) của .\nXem hình minh_họa dưới_đây . Hai thao_tác chính của bảng_băm đó là : đưa một phần_tử mới vào bảng_băm và tìm xem một phần_tử có nằm ở trong bảng_băm hay_không .\nGiả mã : Do lớn hơn , theo nguyên_lí , một hoặc nhiều phần_tử của tập có_thể sẽ được băm vào cùng một vị_trí của bảng .\nTa gọi hiện_tượng đó là (collision) .\nDo xung_đột làm quá_trình tìm_kiếm trở_nên phức_tạp hơn , ta sẽ cần một chiến_lược để đối_phó với nó mà ta gọi_là chiến_lược giải_quyết xung_đột .\nTrước_khi thảo_luận các cách chiến_lược này , ta sẽ thảo_luận về cách chọn hàm_băm trước vì xung_đột nhiều hay ít đều phụ_thuộc vào hăm băm mà ta chọn . Tuy xung_đột không_thể tránh được , ta có_thể làm giảm được xung_đột bằng cách chọn một hàm_băm tốt .\nChú_ý ta chỉ lưu phần_tử của tập gốc vào bảng .\nDo ta có_thể không có bất_kì thông_tin nào về các phần_tử mà ta sẽ lưu trong bảng , ta chọn một hàm_băm tất_định được vì theo nguyên_lí nhốt chim , với bất_kì hàm_băm nào , ít_nhất phần_tử trong tập sẽ có cùng một mã_băm .\nDo_đó , nếu phần_tử của tập_hợp ta muốn lưu trong bảng đều có cùng mã_băm thì sẽ là một điều vô_cùng tồi_tệ .\nĐây chính là lúc ta cần đến .\nThay_vì sử_dụng một hàm_băm cố_định , ta sẽ chọn ra ngẫu_nhiên một hàm_băm từ một họ các hàm_băm mà ta thiết_kế từ trước sao_cho khi chọn ngẫu_nhiên như_vậy , xác_suất đụng_độ là nhỏ : Ta dùng dấu xấp_xỉ ở trên vì các phân_tích dưới_đây sẽ không thay_đổi nhiều nếu thay 1 bằng một hằng_số bất_kì .\n(băm nhân-multiplicative hashing) Ta chọn một_số nguyên_tố lớn hơn và định định_nghĩa : Họ hàm_băm ta xây_dựng là .\n(băm nhân nhị phân-binary multiplicative hashing) Gọi_là số_nguyên_dương nhỏ nhấ tsao cho .\nChọn .\nVới mỗi số_nguyên_dương không lớn quá , ta định_nghĩa : Họ hàm_băm ta xây_dựng là .\nTrong bài , nếu chọn ngẫu_nhiên một hàm_băm (hoặc ) từ ( hoặc từ ) để thực_hiện băm thì xác_suất đụng_độ sẽ là cỡ . Hàm_băm tốt , bên_cạnh tính_chất làm giảm sự đụng_độ , phải là một hàm có_thể nhanh_chóng tính được mã_băm với một khóa cho trước .\nRõ_ràng một hàm_băm có xác xuất đụng_độ nhỏ nhưng mỗi lần tính mã_băm của một khóa mất đến vài giây thì ta không nên chọn .\nDo_đó , việc thiết_kế hàm_băm tốt sẽ là một bài_toán cực_kì khó .\nTrong hai họ hàm_băm ở hai ví_dụ trên , họ hàm_băm trong ví_dụ 2 có_thể được tính nhanh hơn rất nhiều họ hàm_băm trong ví_dụ 1 vì các thao_tác mod và chia_đều được thực_hiện tương_đương bằng thao_tác và dịch phải (shift-right) : Xem thêm tại các .\nCó_lẽ nhiều bạn_đọc biết một_cách chọn hàm_băm rất phổ_biến đó là .\nNhư đã nói ở trên , đây là một ý_tưởng tồi_tệ vì hàm_băm này là một hàm_băm tất_định .\nNếu các khóa đều có cùng đồng dư với thì đụng_độ sẽ rất lớn .\ncủa Java jdk-7 sử_dụng hàm_băm này với .\nƯu_điểm khi chọn chính là : , do_đó , hàm_băm được tính rất hiệu_quả bằng các phép_toán bit .\nĐiểm yếu , như đã nói ở trên , là nếu các giá_trị đầu_vào có cùng bít cuối (cùng đồng dư với ) thì sẽ được băm vào cùng một vị_trí .\nĐể tránh điều này , trước_khi băm , HashMap của java sẽ dùng một hàm để \"băm lại\" hashcode đầu_vào .\nMục_đích của băm lại là làm_cho đầu_vào trông giống ngẫu_nhiên .\nDù như_vậy thì về_mặt lý_thuyết , đây cũng không_phải cách tốt .\nBạn_đọc nếu có sử_dụng HashMap của Java thì cũng_nên biết rõ những vấn_đề này .\nTóm_lại hai điều cần nhớ khi thiết_kế hàm_băm tốt : Giả_sử_ta đã có_một hàm_băm tốt (thỏa mãn ) , sau_đây ta sẽ thảo_luận các chiến_lược giải_quyết xung_đột . Ta sẽ nghiên_cứu ba phương_pháp giải_quyết xung_đột chủ_yếu : xích ngăn_cách (separate chaining) , băm địa_chỉ mở (open addressing) và băm hoàn_hảo (perfect hashing) .\nĐây có_lẽ là cách_thức giải_quyết xung_đột đơn_giản nhất và trực_quan nhất .\nTa sẽ dùng một danh_sách liên_kết , gọi_là xích ngăn_cách , để liên_kết các phần_tử có cùng mã_băm (xem hình dưới đây) .\nHashMap trong Java sử_dụng ý_tưởng này .\nGiả mã : Code_C : Gọi_là biến ngẫu_nhiên chiều_dài của danh_sách chứa khóa .\nTrong bài cơ_sở toán_học của , ta sẽ chứng_minh : Như_vậy , theo , kì_vọng thời_gian để tìm_kiếm một_số tỉ_lệ với hệ_số tải .\nĐiều này cũng khá trực_quan vì nếu bảng càng lớn thì khả_năng đụng_độ càng nhỏ .\nHệ_số tải mặc_định trong HashMap của Java là 0 . 75 .\nPhương_trình cho chúng_ta biết kì_vọng chiều_dài của danh_sách là (giả sử hệ_số tải là ) .\nTuy_nhiên , mình muốn lưu_ý bạn_đọc , trong tất_cả các danh_sách của bảng là cỡ (chứng minh sử_dụng mô_hình ném , chi_tiết bạn_đọc xem thêm tại bài cơ_sở toán_học của xích ngăn cách) .\nĐiều đó cho thấy trong trường_hợp xấu nhất , ta có_thể phải trả một_thời gian tìm_kiếm xấp_xỉ .\nMay_mắn là sẽ không có nhiều danh_sách trong bảng có chiều_dài lớn như_vậy vì kì_vọng chiều_dài chỉ là hằng_số mà_thôi . Một ý_tưởng khác để giảm chiều_dài của danh_sách dài nhất đó là sử_dụng hai hàm_băm để băm vào hai vị_trí khác_nhau của bảng .\nTrong hai danh_sách , nếu danh_sách nào ngắn hơn thì ta sẽ đặt phần_tử vào đó .\nKhi tìm_kiếm thì ta phải duyệt cả hai danh_sách để tìm .\nCũng theo mô_hình ném bóng vào rổ (phân tích phức_tạp hơn rất nhiều , xem thêm tại bài cơ_sở toán_học của xích ngăn cách) , danh_sách dài nhất có kì_vọng chiều_dài cỡ .\nHàm này gần_như có_thể coi là hằng_số . Trong phương_pháp giải_quyết xung_đột bằng xích ngăn_cách , khá nhiều ô của bảng rỗng trong_khi một_số ô khác lại chứa khá nhiều phần_tử .\nNgoài_ra , ta cần duy_trì một danh_sách các con_trỏ để liên_kết các phần_tử lại với_nhau .\nCác liên_kết này đương_nhiên là sẽ tốn thêm bộ_nhớ . Ý_tưởng của (open addressing) là mỗi ô của bảng chỉ lưu , do_đó ta không cần danh_sách móc_nối .\nChú_ý : Xung_đột sẽ được băm địa_chỉ mở giải_quyết bằng cách sử_dụng hàm_băm độc_lập , sao_cho : Khi băm một khóa , ta sẽ lần_lượt kiểm_tra từ ô của bảng cho_đến .\nNếu tìm_thấy một ô trống đầu_tiên thì lưu vào đó .\nDo là một hoán_vị của , quá_trình tìm_kiếm ô trống luôn kết_thúc sau tối_đa bước .\nGiả mã : Hình ví_dụ dưới_đây minh_họa băm 4 khóa vào bảng sử_dụng địa_chỉ mở .\nNgay lần đầu_tiên băm khoá \"Huy\" sử_dụng , ta tìm được ô trống , do_đó , ta đặt khóa \"Huy\" vào ô trống này .\nKhi băm khóa \"Hà\" lần đầu_tiên (sử dụng ) vào ô 7 , ta thấy ô này đã có khóa .\nDo_đó , ta băm lần hai (sử dụng ) vào ô 5 .\nÔ 5 cũng đã có khóa , do_đó , ta phải băm lần ba (sử dụng ) vào ô 2 .\nVì ô 2 trống , ta đặt khóa \"Hà\" vào đó .\nHình chính là trạng_thái của bảng_băm sau khi đã băm 4 khóa . Để tìm_kiếm bảng_băm địa_chỉ mở_ta sẽ thực_hiện dò bảng (probing) : bắt_đầu_từ vị_trí cho_đến vị_trí .\nNếu có trong bảng thì ta sẽ tìm được ở một ô nào_đó .\nNếu_không chứa trong bảng , trong quá_trình dò , ta sẽ bắt_gặp một ô rỗng hoặc duyệt qua đến mà vẫn chưa tìm được .\nGiả mã : Code_C : Trong phần cơ_sở toán_học của băm địa_chỉ mở () , ta sẽ chứng_minh hai định_lý sau : Hai định_lý trên cho chúng_ta biết thời_gian khi dò một khóa trong bảng .\nTuy_nhiên , trong trường_hợp xấu nhất , số phép dò kì_vọng là .\nChúng_ta sẽ tìm_hiểu thêm tại phần cơ_sở toán_học . Trong thực_tế , việc thiết_kế hàm_băm ngẫu_nhiên thỏa_mãn mã_băm đôi một khác_nhau với một khóa cho trước là việc vô_cùng khó .\nCho_dù ta có thực_hiện được thì chi_phí thời_gian có_lẽ cũng không nhỏ .\nDo_đó , trong thực_tế , ta chấp_nhận các hàm_băm \"phụ thuộc\" với_nhau ở một_mức độ_nào đó , mỗi mức_độ cho chúng_ta một_phép dò khác_nhau .\nTa sẽ nghiên_cứu : dò tuyến_tính , dò nhị_phân , dò bậc hai và băm_kép . Trong phép dò tuyến_tính (linear probing) , ta sẽ chỉ sử_dụng hàm_băm tốt để định_nghĩa hàm_băm như_sau : Điểm mạnh_của phương_pháp dò tuyến_tính này là thực_thi đơn_giản .\nTuy_nhiên , các giá_trị băm sẽ có xu_hướng tụm lại với_nhau thành một dãy con liên_tục của .\nNgoài_ra , khi hệ_số tải gần bằng 1 thì tìm_kiếm với dò tuyến_tính cực_kì kém hiệu_quả .\nDò nhị_phân (binary probing) vừa lợi_dụng điểm mạnh_của dò tuyến_tính , vừa có_thể tính nhanh được trong thực_tế .\nNhư đã nhắc đến ở trên , chọn cho_phép chúng_ta chuyển các thao_tác nhân , chia , mod về các thao_tác xử_lí bít .\nDo_đó , ta có_thể tính được hàm_băm rất nhanh .\nDò nhị_phân cũng sử_dụng tư_tưởng này .\nChọn và sử_dụng một hàm_băm tốt để định_nghĩa hàm_băm : Trong đó là phép XOR bít . Tương_tự như trong phép dò tuyến_tính , nhưng thay_vì sử_dụng hàm tuyến_tính , trong phép dò bậc hai (quadratic probing) , ta sẽ dùng hàm bậc 2 để thiết_kế hàm_băm : Phương_pháp dò bậc hai về_mặt lý_thuyết tốt hơn dò tuyến_tính .\nTa sẽ đi_sâu chi_tiết trong bài sau . Băm_kép (double hashing) sử_dụng hai hàm_băm độc_lập để định_nghĩa hàm_băm : Cũng_như dò bậc hai , phương_pháp này tốt hơn về_mặt lý_thuyết .\nTuy_nhiên , trong thực_tế , phương_pháp này sẽ hơi chậm hơn . Như chúng_ta thảo_luận ở phần xích ngăn_cách , mặc_dù kì_vọng thời_gian tìm_kiếm là (giả sử hệ_số tải là hằng số) , trong trường_hợp xấu nhất , thời_gian tìm_kiếm có_thể lên tới gần xấp_xỉ .\nĐôi_khi là một con_số không_hề nhỏ .\nTa có_thể làm giảm hiệu_ứng xấu nhất đó bằng cách giảm hệ_số tải (tăng kích_thước của bảng băm) .\nGiả_sử chúng_ta sử_dụng bảng_băm với số_lượng ô .\nTa sẽ chứng_minh ngắn_gọn , nếu ta chọn như_vậy , số_lượng đụng_độ chỉ là hằng_số .\nNếu số_lượng đụng_độ là hằng_số thì đương_nhiên danh_sách dài nhất trong bảng cũng có kì_vọng chiều_dài là hằng_số . Gọi_là biến ngẫu_nhiên 0/1 trong đó nếu hai khóa xảy_ra đụng_độ , i . e , , và nếu ngược_lại .\nTheo , .\nGọi_là tổng_số đụng_độ trong bảng_băm .\nTa có : Do là biến ngẫu_nhiên 0/1 , .\nTa có : Tuy_nhiên , là một con_số quá lớn và không thực_tế .\nTưởng_tượng ta chỉ băm 1000 phần_tử mà cần tới 1 triệu bộ_nhớ .\nBăm hoàn kết_hợp cả nhận_xét trên và ý_tưởng của xích ngăn_cách để làm giảm thời_gian tìm_kiếm xấu nhất xuống mà bảng chỉ_cần bộ_nhớ (nó được gọi_là băm hoành hảo là_vì thế) .\nBăm hoàn_hảo sẽ sử_dụng hai hàm_băm tốt và bảng_băm hai chiều .\nMỗi hàng của bảng_băm sẽ được coi_như một bảng_băm phụ , có kích_thước phụ_thuộc vào đầu_vào .\nKhi băm vào bảng , ta thực_hiện băm theo 2 pha : Pha đầu_tiên , sử_dụng để băm vào của bảng .\nGọi_là số_lượng phần_tử được băm cùng vào hàng thứ sau pha đầu_tiên .\nTrong pha thứ 2 , với mỗi hàng , ta cấp_phát một bộ_nhớ cho hàng .\nSau_đó , ta coi hàng này như một bảng_băm và dùng để băm các phần_tử có cùng mã_băm vào ô của hàng này .\nĐụng_độ lần 2 này sẽ được giải_quyết sử_dụng xích ngăn_cách .\nXem hình minh_họa dưới_đây .\nNhư phân_tích ở trên , do bảng_băm phụ này có kích_thước là bình_phương số_lượng phần_tử được lưu trong hàng , đụng_độ khi băm lần 2 này là .\nDo_đó , tìm_kiếm có_thể được thực_hiện trong .\nMột điểm cần lưu_ý nữa_là kích_thước của các bảng_băm con tương_ứng với các hàng khác_nhau có_thể khác_nhau .\nCụ_thể , bảng_băm con_thứ (là ) có kích_thước .\nDo_đó , khi băm vào bảng_băm con trong pha 2 sử_dụng hàm_băm , địa_chỉ thực_sự trong bảng_băm con là . Giả mã : Để tìm một khóa , theo định_nghĩa , khóa này nằm trong danh_sách .\nDo_đó , ta chỉ_cần duyệt qua danh_sách đó .\nTheo phân_tích ở trên , thời_gian duyệt qua danh_sách trong trường_hợp xấu nhất_là .\nCode_C : Vấn_đề quan tam_còn lại của chúng_ta là bảng_băm hoàn_hảo sẽ cần_dùng đến bao_nhiêu bộ_nhớ .\nTrong phần cơ_sở toán_học của băm hoàn_hảo , chúng_ta sẽ chứng_minh kì_vọng bộ_nhớ của băm hoàn_hảo là khi : Chúng_ta đã tìm_hiểu 3 phương_pháp chính để giải_quyết xung_đột : xích ngăn_cách , địa_chỉ mở và băm hoàn_hảo .\nTrong thực_tế thiết_kế bảng_băm , iên ta nên chọn phương_pháp nào ?\nSau_đây là một_số yếu_tố có_thể giúp ta chọn được phương_án giải_quyết xung_đột tốt nhất . Trong các ứng_dụng mà chúng_ta phải thường_xuyên thêm và xóa phần_tử khỏi bảng , xích ngăn_cách sẽ là một lựa_chọn tốt .\nBăm hoàn_hảo , bên_cạnh việc khó thực_thi , có_lẽ không phù_hợp với các ứng_dụng này .\nNhư mô_tả ở trên , khi băm trong pha 2 , chúng_ta cần phải_biết trước_số lượng phần_tử xung_đột trong một ô để cấp_phát bộ_nhớ .\nViệc cấp_phát này sẽ rất mất thời_gian nếu ta liên_tục thêm và xóa phần_tử khỏi bảng .\nĐịnh địa_chỉ mở cũng khó áp_dụng trong trường_hợp này vì nếu hệ_số tải lên tới xấp_xỉ 1 thì tìm_kiếm trong định địa_chỉ mở cực_kì chậm (xem công_thức và ) .\nVới xích ngăn_cách , ngay_cả khi , danh_sách dài nhất cũng chỉ khoảng .\nNgược_lại , trong các ứng_dụng mà chúng_ta chủ_yếu thực_hiện tìm_kiếm , ít_khi phải thêm hay xóa phần_tử khỏi bảng (ví dụ ứng_dụng từ_điển chẳng hạn) thì băm hoàn_hảo sẽ là một lựa_chọn tốt .\nNhư đã nhắc đến ở trên , băm hoàn_hảo có thời_gian kì_vọng trong trường_hợp cũng chỉ là và bộ_nhớ kì_vọng là .\nTương_tự như băm hoàn_hảo , nếu ứng_dụng của chúng_ta chủ_yếu thực_hiện tìm_kiếm nhưng chúng_ta lại có thêm thông_tin về tần_suất truy_nhập khóa , thì ta có_thể sử_dụng băm địa_chỉ mở .\nCơ_chế của băm địa_chỉ mở cho ta thấy các khóa băm càng sớm thì số bước dò trong tìm_kiếm càng ngắn .\nDo_đó , ta có_thể băm các khóa theo thứ_tự giảm_dần của tần_suất truy_nhập .\nMột điểm chú_ý duy_nhất với băm địa_chỉ mở là không nên để hệ_số tải vượt qúa . Trong code dưới_đây , mình sử_dụng hàm_băm nhân nhị_phân (họ hàm_băm trong ví_dụ 2)Code : , , .\n1 Donald_E .\nKnuth .\n, Volume 3 : (2nd Ed . ) Sorting and Searching .\nAddison_Wesley_Longman_Publishing_Co . , Inc . , Redwood_City , CA , USA , 1998 .\n2 Jeff_Erickson .\n.\nUIUC , 2013 .\n3 Thomas_H .\nCormen , Clifford_Stein , Ronald_L .\nRivest , and Charles_E .\nLeiserson .\n(2nd ed . ) .\nChapter 12 .\nMcGraw-Hill_Higher_Education , 2001 .\n, , , , , , , Trackback link : Powered by and\n", "tagged": "Nơi/N tổng_hợp/V và/Cc chia_sẻ/V những/L kiến_thức/N liên_quan/V tới/E giải_thuật/Np nói_chung/X và/Cc lý_thuyết/Np khoa_học/N máy_tính/N nói_riêng/X ./CH\nin/V Bài/N này/P mình/P lượt/N qua/V cấu_trúc/N dữ_liệu/N bảng_băm/Np (hash/Np table)/Np ,/CH hàm_băm/Np (hash/Np functions)/Np và/Cc một_số/L cơ_chế/N giải_quyết/V xung_đột/V (collision/Np handling)/Np ./CH\nMục_tiêu/N của/E bài/N này/P là/V đưa_ra/Np một_cách/N nhìn/V tổng_quan/V về/E cách_thức/N thiết_kế/V bảng_băm/Np ./CH\nMọi/L cơ_sở/N toán_học/N mình/P sẽ/R viết/V và/Cc link/Np trong/E các/L bài/N sau/E ./CH\nMột/M cấu_trúc/N dữ_liệu/N mà/C chúng_ta/P cũng/R thường_xuyên/A áp_dụng/V cho/E thao_tác/V tìm_kiếm/V đó/P là/V cây/N cân_bằng/A (ví/Np dụ/V hoặc/Cc )/CH ./CH\ntrong/E Java/Np chính/T là/V sử_dụng/V cây/N Red-Black/Np để/E hỗ_trợ/V tìm_kiếm/V ./CH\nDo/E tính/V cân_bằng/A ,/CH cấu_trúc/N dữ_liệu/N cây/N này/P sẽ/R cho_phép/V chúng_ta/P thực_hiện/V tìm_kiếm/V trong/E thời_gian/N ./CH\nBảng_băm/Np chúng_ta/P sẽ/R thảo_luận/V trong/E bài/N này/P sẽ/R cho_phép/V chúng_ta/P thực_hiện/V thao_tác/V tìm_kiếm/V trong/E thời_gian/N kì_vọng/V ./CH\nGọi_là/V tập/V phần_tử/N ta/P muốn/V lưu_trữ/Np trong/E bảng_băm/Np ./CH\nCác/L phần_tử/N của/E tập_hợp/N mà/C chúng_ta/P lưu_trữ/Np thường/R từ/E một_tập/Np lớn/A hơn/A mà/C ta/P gọi_là/V (ground/Np set)/Np ./CH\nTập/V gốc/N ta/P xét/V ở/E đây/P có/V lực_lượng/N hữu_hạn/Np nhưng/C rất/R lớn/A so_với/Np và/Cc ./CH\nVí_dụ/C :/CH nếu/C tập/V gốc/N là/V tập/V các/L tên/N người/N với/E tối_đa/A là/V kí_tự/Np thì/C kích_thước/N tối_đa/A của/E tập/V gốc/N là/V (ta/Np sử_dụng/V bảng_chữ_cái/Np tiếng/N Việt)/Np ./CH\nNếu/C giả_sử/Np tập/V dữ_liệu/N trong/E bảng_băm/Np là/V tên/N của/E người/N thực/A thì/C con_số/N lớn/A hơn/A rất/R nhiều/A so_với/Np (dân/Np số/N Việt_Nam)/Np ./CH\nBảng_băm/Np là/V một/M mảng/N có/V kích_thước/N ./CH\nĐể/E lưu_trữ/Np dữ_liệu/N vào/E bảng_băm/Np ,/CH ta/P sẽ/R dùng/V một/M (hash/Np function)/Np ./CH\nMột/M hàm_băm/Np :/CH là/V một/M ánh_xạ/Np gán/V cho/E mỗi/L phần_tử/N của/E tập/V một/M vị_trí/N trong/E bảng/N ./CH\nCụ_thể/A ,/CH phần_tử/N sẽ/R được/V lưu/V tại/E ô/N của/E bảng/N và/Cc ta/P nói/V được/V băm/Np vào/E vị_trí/N và/Cc được/V gọi_là/V (hash/Np code)/Np của/E ./CH\nXem/V hình/N minh_họa/V dưới_đây/Np ./CH Hai/M thao_tác/V chính/T của/E bảng_băm/Np đó/P là/V :/CH đưa/V một/M phần_tử/N mới/R vào/E bảng_băm/Np và/Cc tìm/V xem/V một/M phần_tử/N có/V nằm/V ở/E trong/E bảng_băm/Np hay_không/Np ./CH\nGiả/A mã/N :/CH Do/E lớn/A hơn/A ,/CH theo/V nguyên_lí/N ,/CH một/M hoặc/Cc nhiều/A phần_tử/N của/E tập/V có_thể/R sẽ/R được/V băm/Np vào/E cùng/A một/M vị_trí/N của/E bảng/N ./CH\nTa/P gọi/V hiện_tượng/N đó/P là/V (collision)/Np ./CH\nDo/E xung_đột/V làm/V quá_trình/N tìm_kiếm/V trở_nên/V phức_tạp/A hơn/A ,/CH ta/P sẽ/R cần/V một/M chiến_lược/N để/E đối_phó/V với/E nó/P mà/C ta/P gọi_là/V chiến_lược/N giải_quyết/V xung_đột/V ./CH\nTrước_khi/Np thảo_luận/V các/L cách/N chiến_lược/N này/P ,/CH ta/P sẽ/R thảo_luận/V về/E cách/N chọn/V hàm_băm/Np trước/E vì/E xung_đột/V nhiều/A hay/Cc ít/A đều/R phụ_thuộc/V vào/E hăm/Np băm/Np mà/C ta/P chọn/V ./CH Tuy/C xung_đột/V không_thể/R tránh/V được/V ,/CH ta/P có_thể/R làm/V giảm/V được/V xung_đột/V bằng/E cách/N chọn/V một/M hàm_băm/Np tốt/A ./CH\nChú_ý/V ta/P chỉ/R lưu/V phần_tử/N của/E tập/V gốc/N vào/E bảng/N ./CH\nDo/E ta/P có_thể/R không/R có/V bất_kì/R thông_tin/N nào/P về/E các/L phần_tử/N mà/C ta/P sẽ/R lưu/V trong/E bảng/N ,/CH ta/P chọn/V một/M hàm_băm/Np tất_định/Np được/V vì/E theo/V nguyên_lí/N nhốt/V chim/N ,/CH với/E bất_kì/R hàm_băm/Np nào/P ,/CH ít_nhất/A phần_tử/N trong/E tập/V sẽ/R có/V cùng/A một/M mã_băm/Np ./CH\nDo_đó/C ,/CH nếu/C phần_tử/N của/E tập_hợp/N ta/P muốn/V lưu/V trong/E bảng/N đều/R có/V cùng/A mã_băm/Np thì/C sẽ/R là/V một/M điều/N vô_cùng/R tồi_tệ/A ./CH\nĐây/P chính/T là/V lúc/N ta/P cần/V đến/E ./CH\nThay_vì/X sử_dụng/V một/M hàm_băm/Np cố_định/A ,/CH ta/P sẽ/R chọn/V ra/V ngẫu_nhiên/A một/M hàm_băm/Np từ/E một/M họ/P các/L hàm_băm/Np mà/C ta/P thiết_kế/V từ/E trước/E sao_cho/Np khi/N chọn/V ngẫu_nhiên/A như_vậy/X ,/CH xác_suất/N đụng_độ/V là/V nhỏ/A :/CH Ta/P dùng/V dấu/N xấp_xỉ/A ở/E trên/E vì/E các/L phân_tích/V dưới_đây/Np sẽ/R không/R thay_đổi/V nhiều/A nếu/C thay/V 1/M bằng/E một/M hằng_số/Np bất_kì/R ./CH\n(băm/Np nhân-multiplicative/Np hashing)/Np Ta/P chọn/V một_số/L nguyên_tố/N lớn/A hơn/A và/Cc định/V định_nghĩa/N :/CH Họ/P hàm_băm/Np ta/P xây_dựng/V là/V ./CH\n(băm/Np nhân/N nhị/M phân-binary/Np multiplicative/Np hashing)/Np Gọi_là/V số_nguyên_dương/Np nhỏ/A nhấ/Np tsao/Np cho/E ./CH\nChọn/V ./CH\nVới/E mỗi/L số_nguyên_dương/Np không/R lớn/A quá/R ,/CH ta/P định_nghĩa/N :/CH Họ/P hàm_băm/Np ta/P xây_dựng/V là/V ./CH\nTrong/E bài/N ,/CH nếu/C chọn/V ngẫu_nhiên/A một/M hàm_băm/Np (hoặc/Np )/CH từ/E (/CH hoặc/Cc từ/E )/CH để/E thực_hiện/V băm/Np thì/C xác_suất/N đụng_độ/V sẽ/R là/V cỡ/N ./CH Hàm_băm/Np tốt/A ,/CH bên_cạnh/R tính_chất/N làm/V giảm/V sự/N đụng_độ/V ,/CH phải/V là/V một/M hàm/Np có_thể/R nhanh_chóng/A tính/V được/V mã_băm/Np với/E một/M khóa/N cho/E trước/E ./CH\nRõ_ràng/A một/M hàm_băm/Np có/V xác/N xuất/V đụng_độ/V nhỏ/A nhưng/C mỗi/L lần/N tính/V mã_băm/Np của/E một/M khóa/N mất/V đến/E vài/L giây/Nu thì/C ta/P không/R nên/C chọn/V ./CH\nDo_đó/C ,/CH việc/N thiết_kế/V hàm_băm/Np tốt/A sẽ/R là/V một/M bài_toán/N cực_kì/R khó/A ./CH\nTrong/E hai/M họ/P hàm_băm/Np ở/E hai/M ví_dụ/C trên/E ,/CH họ/P hàm_băm/Np trong/E ví_dụ/C 2/M có_thể/R được/V tính/V nhanh/A hơn/A rất/R nhiều/A họ/P hàm_băm/Np trong/E ví_dụ/C 1/M vì/E các/L thao_tác/V mod/Np và/Cc chia_đều/Np được/V thực_hiện/V tương_đương/A bằng/E thao_tác/V và/Cc dịch/N phải/V (shift-right)/Np :/CH Xem/V thêm/V tại/E các/L ./CH\nCó_lẽ/X nhiều/A bạn_đọc/N biết/V một_cách/N chọn/V hàm_băm/Np rất/R phổ_biến/V đó/P là/V ./CH\nNhư/C đã/R nói/V ở/E trên/E ,/CH đây/P là/V một/M ý_tưởng/N tồi_tệ/A vì/E hàm_băm/Np này/P là/V một/M hàm_băm/Np tất_định/Np ./CH\nNếu/C các/L khóa/N đều/R có/V cùng/A đồng/Nu dư/A với/E thì/C đụng_độ/V sẽ/R rất/R lớn/A ./CH\ncủa/E Java/Np jdk-7/Np sử_dụng/V hàm_băm/Np này/P với/E ./CH\nƯu_điểm/N khi/N chọn/V chính/T là/V :/CH ,/CH do_đó/C ,/CH hàm_băm/Np được/V tính/V rất/R hiệu_quả/N bằng/E các/L phép_toán/Np bit/Np ./CH\nĐiểm/N yếu/A ,/CH như/C đã/R nói/V ở/E trên/E ,/CH là/V nếu/C các/L giá_trị/N đầu_vào/N có/V cùng/A bít/V cuối/N (cùng/Np đồng/Nu dư/A với/E )/CH thì/C sẽ/R được/V băm/Np vào/E cùng/A một/M vị_trí/N ./CH\nĐể/E tránh/V điều/N này/P ,/CH trước_khi/Np băm/Np ,/CH HashMap/Np của/E java/Np sẽ/R dùng/V một/M hàm/Np để/E \"băm/Np lại\"/Np hashcode/Np đầu_vào/N ./CH\nMục_đích/N của/E băm/Np lại/R là/V làm_cho/Np đầu_vào/N trông/V giống/N ngẫu_nhiên/A ./CH\nDù/C như_vậy/X thì/C về_mặt/Np lý_thuyết/Np ,/CH đây/P cũng/R không_phải/Np cách/N tốt/A ./CH\nBạn_đọc/N nếu/C có/V sử_dụng/V HashMap/Np của/E Java/Np thì/C cũng_nên/Np biết/V rõ/A những/L vấn_đề/N này/P ./CH\nTóm_lại/Np hai/M điều/N cần/V nhớ/V khi/N thiết_kế/V hàm_băm/Np tốt/A :/CH Giả_sử_ta/Np đã/R có_một/Np hàm_băm/Np tốt/A (thỏa/Np mãn/V )/CH ,/CH sau_đây/Np ta/P sẽ/R thảo_luận/V các/L chiến_lược/N giải_quyết/V xung_đột/V ./CH Ta/P sẽ/R nghiên_cứu/V ba/M phương_pháp/N giải_quyết/V xung_đột/V chủ_yếu/A :/CH xích/V ngăn_cách/V (separate/Np chaining)/Np ,/CH băm/Np địa_chỉ/N mở/V (open/Np addressing)/Np và/Cc băm/Np hoàn_hảo/A (perfect/Np hashing)/Np ./CH\nĐây/P có_lẽ/X là/V cách_thức/N giải_quyết/V xung_đột/V đơn_giản/A nhất/A và/Cc trực_quan/Np nhất/A ./CH\nTa/P sẽ/R dùng/V một/M danh_sách/N liên_kết/V ,/CH gọi_là/V xích/V ngăn_cách/V ,/CH để/E liên_kết/V các/L phần_tử/N có/V cùng/A mã_băm/Np (xem/Np hình/N dưới/E đây)/Np ./CH\nHashMap/Np trong/E Java/Np sử_dụng/V ý_tưởng/N này/P ./CH\nGiả/A mã/N :/CH Code_C/Np :/CH Gọi_là/V biến/V ngẫu_nhiên/A chiều_dài/N của/E danh_sách/N chứa/V khóa/N ./CH\nTrong/E bài/N cơ_sở/N toán_học/N của/E ,/CH ta/P sẽ/R chứng_minh/V :/CH Như_vậy/X ,/CH theo/V ,/CH kì_vọng/V thời_gian/N để/E tìm_kiếm/V một_số/L tỉ_lệ/N với/E hệ_số/N tải/N ./CH\nĐiều/N này/P cũng/R khá/R trực_quan/Np vì/E nếu/C bảng/N càng/R lớn/A thì/C khả_năng/N đụng_độ/V càng/R nhỏ/A ./CH\nHệ_số/N tải/N mặc_định/Np trong/E HashMap/Np của/E Java/Np là/V 0/M ./CH 75/M ./CH\nPhương_trình/Np cho/E chúng_ta/P biết/V kì_vọng/V chiều_dài/N của/E danh_sách/N là/V (giả/Np sử/Np hệ_số/N tải/N là/V )/CH ./CH\nTuy_nhiên/C ,/CH mình/P muốn/V lưu_ý/V bạn_đọc/N ,/CH trong/E tất_cả/P các/L danh_sách/N của/E bảng/N là/V cỡ/N (chứng/Np minh/Np sử_dụng/V mô_hình/N ném/V ,/CH chi_tiết/N bạn_đọc/N xem/V thêm/V tại/E bài/N cơ_sở/N toán_học/N của/E xích/V ngăn/V cách)/Np ./CH\nĐiều/N đó/P cho/E thấy/V trong/E trường_hợp/N xấu/A nhất/A ,/CH ta/P có_thể/R phải/V trả/V một_thời/Np gian/N tìm_kiếm/V xấp_xỉ/A ./CH\nMay_mắn/A là/V sẽ/R không/R có/V nhiều/A danh_sách/N trong/E bảng/N có/V chiều_dài/N lớn/A như_vậy/X vì/E kì_vọng/V chiều_dài/N chỉ/R là/V hằng_số/Np mà_thôi/T ./CH Một/M ý_tưởng/N khác/A để/E giảm/V chiều_dài/N của/E danh_sách/N dài/A nhất/A đó/P là/V sử_dụng/V hai/M hàm_băm/Np để/E băm/Np vào/E hai/M vị_trí/N khác_nhau/Np của/E bảng/N ./CH\nTrong/E hai/M danh_sách/N ,/CH nếu/C danh_sách/N nào/P ngắn/A hơn/A thì/C ta/P sẽ/R đặt/V phần_tử/N vào/E đó/P ./CH\nKhi/N tìm_kiếm/V thì/C ta/P phải/V duyệt/V cả/P hai/M danh_sách/N để/E tìm/V ./CH\nCũng/R theo/V mô_hình/N ném/V bóng/N vào/E rổ/N (phân/Np tích/N phức_tạp/A hơn/A rất/R nhiều/A ,/CH xem/V thêm/V tại/E bài/N cơ_sở/N toán_học/N của/E xích/V ngăn/V cách)/Np ,/CH danh_sách/N dài/A nhất/A có/V kì_vọng/V chiều_dài/N cỡ/N ./CH\nHàm/Np này/P gần_như/R có_thể/R coi/V là/V hằng_số/Np ./CH Trong/E phương_pháp/N giải_quyết/V xung_đột/V bằng/E xích/V ngăn_cách/V ,/CH khá/R nhiều/A ô/N của/E bảng/N rỗng/A trong_khi/Np một_số/L ô/N khác/A lại/R chứa/V khá/R nhiều/A phần_tử/N ./CH\nNgoài_ra/X ,/CH ta/P cần/V duy_trì/V một/M danh_sách/N các/L con_trỏ/Np để/E liên_kết/V các/L phần_tử/N lại/R với_nhau/Np ./CH\nCác/L liên_kết/V này/P đương_nhiên/Np là/V sẽ/R tốn/V thêm/V bộ_nhớ/Np ./CH Ý_tưởng/N của/E (open/Np addressing)/Np là/V mỗi/L ô/N của/E bảng/N chỉ/R lưu/V ,/CH do_đó/C ta/P không/R cần/V danh_sách/N móc_nối/V ./CH\nChú_ý/V :/CH Xung_đột/V sẽ/R được/V băm/Np địa_chỉ/N mở/V giải_quyết/V bằng/E cách/N sử_dụng/V hàm_băm/Np độc_lập/A ,/CH sao_cho/Np :/CH Khi/N băm/Np một/M khóa/N ,/CH ta/P sẽ/R lần_lượt/R kiểm_tra/V từ/E ô/N của/E bảng/N cho_đến/E ./CH\nNếu/C tìm_thấy/Np một/M ô/N trống/A đầu_tiên/A thì/C lưu/V vào/E đó/P ./CH\nDo/E là/V một/M hoán_vị/Np của/E ,/CH quá_trình/N tìm_kiếm/V ô/N trống/A luôn/R kết_thúc/V sau/E tối_đa/A bước/V ./CH\nGiả/A mã/N :/CH Hình/N ví_dụ/C dưới_đây/Np minh_họa/V băm/Np 4/M khóa/N vào/E bảng/N sử_dụng/V địa_chỉ/N mở/V ./CH\nNgay/R lần/N đầu_tiên/A băm/Np khoá/N \"Huy\"/Np sử_dụng/V ,/CH ta/P tìm/V được/V ô/N trống/A ,/CH do_đó/C ,/CH ta/P đặt/V khóa/N \"Huy\"/Np vào/E ô/N trống/A này/P ./CH\nKhi/N băm/Np khóa/N \"Hà\"/Np lần/N đầu_tiên/A (sử/Np dụng/V )/CH vào/E ô/N 7/M ,/CH ta/P thấy/V ô/N này/P đã/R có/V khóa/N ./CH\nDo_đó/C ,/CH ta/P băm/Np lần/N hai/M (sử/Np dụng/V )/CH vào/E ô/N 5/M ./CH\nÔ/N 5/M cũng/R đã/R có/V khóa/N ,/CH do_đó/C ,/CH ta/P phải/V băm/Np lần/N ba/M (sử/Np dụng/V )/CH vào/E ô/N 2/M ./CH\nVì/E ô/N 2/M trống/A ,/CH ta/P đặt/V khóa/N \"Hà\"/Np vào/E đó/P ./CH\nHình/N chính/T là/V trạng_thái/N của/E bảng_băm/Np sau/E khi/N đã/R băm/Np 4/M khóa/N ./CH Để/E tìm_kiếm/V bảng_băm/Np địa_chỉ/N mở_ta/Np sẽ/R thực_hiện/V dò/V bảng/N (probing)/Np :/CH bắt_đầu_từ/Np vị_trí/N cho_đến/E vị_trí/N ./CH\nNếu/C có/V trong/E bảng/N thì/C ta/P sẽ/R tìm/V được/V ở/E một/M ô/N nào_đó/P ./CH\nNếu_không/Np chứa/V trong/E bảng/N ,/CH trong/E quá_trình/N dò/V ,/CH ta/P sẽ/R bắt_gặp/V một/M ô/N rỗng/A hoặc/Cc duyệt/V qua/V đến/E mà/C vẫn/R chưa/R tìm/V được/V ./CH\nGiả/A mã/N :/CH Code_C/Np :/CH Trong/E phần/N cơ_sở/N toán_học/N của/E băm/Np địa_chỉ/N mở/V ()/Np ,/CH ta/P sẽ/R chứng_minh/V hai/M định_lý/Np sau/E :/CH Hai/M định_lý/Np trên/E cho/E chúng_ta/P biết/V thời_gian/N khi/N dò/V một/M khóa/N trong/E bảng/N ./CH\nTuy_nhiên/C ,/CH trong/E trường_hợp/N xấu/A nhất/A ,/CH số/N phép/N dò/V kì_vọng/V là/V ./CH\nChúng_ta/P sẽ/R tìm_hiểu/V thêm/V tại/E phần/N cơ_sở/N toán_học/N ./CH Trong/E thực_tế/N ,/CH việc/N thiết_kế/V hàm_băm/Np ngẫu_nhiên/A thỏa_mãn/V mã_băm/Np đôi/M một/M khác_nhau/Np với/E một/M khóa/N cho/E trước/E là/V việc/N vô_cùng/R khó/A ./CH\nCho_dù/C ta/P có/V thực_hiện/V được/V thì/C chi_phí/N thời_gian/N có_lẽ/X cũng/R không/R nhỏ/A ./CH\nDo_đó/C ,/CH trong/E thực_tế/N ,/CH ta/P chấp_nhận/V các/L hàm_băm/Np \"phụ/Np thuộc\"/Np với_nhau/Np ở/E một_mức/Np độ_nào/Np đó/P ,/CH mỗi/L mức_độ/N cho/E chúng_ta/P một_phép/Np dò/V khác_nhau/Np ./CH\nTa/P sẽ/R nghiên_cứu/V :/CH dò/V tuyến_tính/Np ,/CH dò/V nhị_phân/Np ,/CH dò/V bậc/N hai/M và/Cc băm_kép/Np ./CH Trong/E phép/N dò/V tuyến_tính/Np (linear/Np probing)/Np ,/CH ta/P sẽ/R chỉ/R sử_dụng/V hàm_băm/Np tốt/A để/E định_nghĩa/N hàm_băm/Np như_sau/Np :/CH Điểm/N mạnh_của/Np phương_pháp/N dò/V tuyến_tính/Np này/P là/V thực_thi/V đơn_giản/A ./CH\nTuy_nhiên/C ,/CH các/L giá_trị/N băm/Np sẽ/R có/V xu_hướng/N tụm/V lại/R với_nhau/Np thành/V một/M dãy/Nc con/Nc liên_tục/A của/E ./CH\nNgoài_ra/X ,/CH khi/N hệ_số/N tải/N gần/A bằng/E 1/M thì/C tìm_kiếm/V với/E dò/V tuyến_tính/Np cực_kì/R kém/A hiệu_quả/N ./CH\nDò/V nhị_phân/Np (binary/Np probing)/Np vừa/R lợi_dụng/V điểm/N mạnh_của/Np dò/V tuyến_tính/Np ,/CH vừa/R có_thể/R tính/V nhanh/A được/V trong/E thực_tế/N ./CH\nNhư/C đã/R nhắc/V đến/E ở/E trên/E ,/CH chọn/V cho_phép/V chúng_ta/P chuyển/V các/L thao_tác/V nhân/N ,/CH chia/V ,/CH mod/Np về/E các/L thao_tác/V xử_lí/V bít/V ./CH\nDo_đó/C ,/CH ta/P có_thể/R tính/V được/V hàm_băm/Np rất/R nhanh/A ./CH\nDò/V nhị_phân/Np cũng/R sử_dụng/V tư_tưởng/N này/P ./CH\nChọn/V và/Cc sử_dụng/V một/M hàm_băm/Np tốt/A để/E định_nghĩa/N hàm_băm/Np :/CH Trong/E đó/P là/V phép/N XOR/Np bít/V ./CH Tương_tự/A như/C trong/E phép/N dò/V tuyến_tính/Np ,/CH nhưng/C thay_vì/X sử_dụng/V hàm/Np tuyến_tính/Np ,/CH trong/E phép/N dò/V bậc/N hai/M (quadratic/Np probing)/Np ,/CH ta/P sẽ/R dùng/V hàm/Np bậc/N 2/M để/E thiết_kế/V hàm_băm/Np :/CH Phương_pháp/N dò/V bậc/N hai/M về_mặt/Np lý_thuyết/Np tốt/A hơn/A dò/V tuyến_tính/Np ./CH\nTa/P sẽ/R đi_sâu/V chi_tiết/N trong/E bài/N sau/E ./CH Băm_kép/Np (double/Np hashing)/Np sử_dụng/V hai/M hàm_băm/Np độc_lập/A để/E định_nghĩa/N hàm_băm/Np :/CH Cũng_như/C dò/V bậc/N hai/M ,/CH phương_pháp/N này/P tốt/A hơn/A về_mặt/Np lý_thuyết/Np ./CH\nTuy_nhiên/C ,/CH trong/E thực_tế/N ,/CH phương_pháp/N này/P sẽ/R hơi/R chậm/A hơn/A ./CH Như/C chúng_ta/P thảo_luận/V ở/E phần/N xích/V ngăn_cách/V ,/CH mặc_dù/C kì_vọng/V thời_gian/N tìm_kiếm/V là/V (giả/Np sử/Np hệ_số/N tải/N là/V hằng/R số)/Np ,/CH trong/E trường_hợp/N xấu/A nhất/A ,/CH thời_gian/N tìm_kiếm/V có_thể/R lên/V tới/E gần/A xấp_xỉ/A ./CH\nĐôi_khi/R là/V một/M con_số/N không_hề/Np nhỏ/A ./CH\nTa/P có_thể/R làm/V giảm/V hiệu_ứng/N xấu/A nhất/A đó/P bằng/E cách/N giảm/V hệ_số/N tải/N (tăng/Np kích_thước/N của/E bảng/N băm)/Np ./CH\nGiả_sử/Np chúng_ta/P sử_dụng/V bảng_băm/Np với/E số_lượng/N ô/N ./CH\nTa/P sẽ/R chứng_minh/V ngắn_gọn/A ,/CH nếu/C ta/P chọn/V như_vậy/X ,/CH số_lượng/N đụng_độ/V chỉ/R là/V hằng_số/Np ./CH\nNếu/C số_lượng/N đụng_độ/V là/V hằng_số/Np thì/C đương_nhiên/Np danh_sách/N dài/A nhất/A trong/E bảng/N cũng/R có/V kì_vọng/V chiều_dài/N là/V hằng_số/Np ./CH Gọi_là/V biến/V ngẫu_nhiên/A 0/M trong/E đó/P nếu/C hai/M khóa/N xảy_ra/Np đụng_độ/V ,/CH i/M ./CH e/Ni ,/CH ,/CH và/Cc nếu/C ngược_lại/X ./CH\nTheo/V ,/CH ./CH\nGọi_là/V tổng_số/N đụng_độ/V trong/E bảng_băm/Np ./CH\nTa/P có/V :/CH Do/E là/V biến/V ngẫu_nhiên/A 0/M ,/CH ./CH\nTa/P có/V :/CH Tuy_nhiên/C ,/CH là/V một/M con_số/N quá/R lớn/A và/Cc không/R thực_tế/N ./CH\nTưởng_tượng/V ta/P chỉ/R băm/Np 1000/M phần_tử/N mà/C cần/V tới/E 1/M triệu/M bộ_nhớ/Np ./CH\nBăm/Np hoàn/V kết_hợp/V cả/P nhận_xét/N trên/E và/Cc ý_tưởng/N của/E xích/V ngăn_cách/V để/E làm/V giảm/V thời_gian/N tìm_kiếm/V xấu/A nhất/A xuống/V mà/C bảng/N chỉ_cần/Np bộ_nhớ/Np (nó/Np được/V gọi_là/V băm/Np hoành/Np hảo/Np là_vì/Np thế)/Np ./CH\nBăm/Np hoàn_hảo/A sẽ/R sử_dụng/V hai/M hàm_băm/Np tốt/A và/Cc bảng_băm/Np hai/M chiều/N ./CH\nMỗi/L hàng/N của/E bảng_băm/Np sẽ/R được/V coi_như/Np một/M bảng_băm/Np phụ/V ,/CH có/V kích_thước/N phụ_thuộc/V vào/E đầu_vào/N ./CH\nKhi/N băm/Np vào/E bảng/N ,/CH ta/P thực_hiện/V băm/Np theo/V 2/M pha/V :/CH Pha/V đầu_tiên/A ,/CH sử_dụng/V để/E băm/Np vào/E của/E bảng/N ./CH\nGọi_là/V số_lượng/N phần_tử/N được/V băm/Np cùng/A vào/E hàng/N thứ/N sau/E pha/V đầu_tiên/A ./CH\nTrong/E pha/V thứ/N 2/M ,/CH với/E mỗi/L hàng/N ,/CH ta/P cấp_phát/V một/M bộ_nhớ/Np cho/E hàng/N ./CH\nSau_đó/Np ,/CH ta/P coi/V hàng/N này/P như/C một/M bảng_băm/Np và/Cc dùng/V để/E băm/Np các/L phần_tử/N có/V cùng/A mã_băm/Np vào/E ô/N của/E hàng/N này/P ./CH\nĐụng_độ/V lần/N 2/M này/P sẽ/R được/V giải_quyết/V sử_dụng/V xích/V ngăn_cách/V ./CH\nXem/V hình/N minh_họa/V dưới_đây/Np ./CH\nNhư/C phân_tích/V ở/E trên/E ,/CH do/E bảng_băm/Np phụ/V này/P có/V kích_thước/N là/V bình_phương/Np số_lượng/N phần_tử/N được/V lưu/V trong/E hàng/N ,/CH đụng_độ/V khi/N băm/Np lần/N 2/M này/P là/V ./CH\nDo_đó/C ,/CH tìm_kiếm/V có_thể/R được/V thực_hiện/V trong/E ./CH\nMột/M điểm/N cần/V lưu_ý/V nữa_là/X kích_thước/N của/E các/L bảng_băm/Np con/Nc tương_ứng/V với/E các/L hàng/N khác_nhau/Np có_thể/R khác_nhau/Np ./CH\nCụ_thể/A ,/CH bảng_băm/Np con_thứ/Np (là/Np )/CH có/V kích_thước/N ./CH\nDo_đó/C ,/CH khi/N băm/Np vào/E bảng_băm/Np con/Nc trong/E pha/V 2/M sử_dụng/V hàm_băm/Np ,/CH địa_chỉ/N thực_sự/A trong/E bảng_băm/Np con/Nc là/V ./CH Giả/A mã/N :/CH Để/E tìm/V một/M khóa/N ,/CH theo/V định_nghĩa/N ,/CH khóa/N này/P nằm/V trong/E danh_sách/N ./CH\nDo_đó/C ,/CH ta/P chỉ_cần/Np duyệt/V qua/V danh_sách/N đó/P ./CH\nTheo/V phân_tích/V ở/E trên/E ,/CH thời_gian/N duyệt/V qua/V danh_sách/N trong/E trường_hợp/N xấu/A nhất_là/X ./CH\nCode_C/Np :/CH Vấn_đề/N quan/N tam_còn/Np lại/R của/E chúng_ta/P là/V bảng_băm/Np hoàn_hảo/A sẽ/R cần_dùng/Np đến/E bao_nhiêu/P bộ_nhớ/Np ./CH\nTrong/E phần/N cơ_sở/N toán_học/N của/E băm/Np hoàn_hảo/A ,/CH chúng_ta/P sẽ/R chứng_minh/V kì_vọng/V bộ_nhớ/Np của/E băm/Np hoàn_hảo/A là/V khi/N :/CH Chúng_ta/P đã/R tìm_hiểu/V 3/M phương_pháp/N chính/T để/E giải_quyết/V xung_đột/V :/CH xích/V ngăn_cách/V ,/CH địa_chỉ/N mở/V và/Cc băm/Np hoàn_hảo/A ./CH\nTrong/E thực_tế/N thiết_kế/V bảng_băm/Np ,/CH iên/Np ta/P nên/C chọn/V phương_pháp/N nào/P ?/CH\nSau_đây/Np là/V một_số/L yếu_tố/N có_thể/R giúp/V ta/P chọn/V được/V phương_án/N giải_quyết/V xung_đột/V tốt/A nhất/A ./CH Trong/E các/L ứng_dụng/V mà/C chúng_ta/P phải/V thường_xuyên/A thêm/V và/Cc xóa/V phần_tử/N khỏi/V bảng/N ,/CH xích/V ngăn_cách/V sẽ/R là/V một/M lựa_chọn/V tốt/A ./CH\nBăm/Np hoàn_hảo/A ,/CH bên_cạnh/R việc/N khó/A thực_thi/V ,/CH có_lẽ/X không/R phù_hợp/V với/E các/L ứng_dụng/V này/P ./CH\nNhư/C mô_tả/V ở/E trên/E ,/CH khi/N băm/Np trong/E pha/V 2/M ,/CH chúng_ta/P cần/V phải_biết/N trước_số/Np lượng/N phần_tử/N xung_đột/V trong/E một/M ô/N để/E cấp_phát/V bộ_nhớ/Np ./CH\nViệc/N cấp_phát/V này/P sẽ/R rất/R mất/V thời_gian/N nếu/C ta/P liên_tục/A thêm/V và/Cc xóa/V phần_tử/N khỏi/V bảng/N ./CH\nĐịnh/V địa_chỉ/N mở/V cũng/R khó/A áp_dụng/V trong/E trường_hợp/N này/P vì/E nếu/C hệ_số/N tải/N lên/V tới/E xấp_xỉ/A 1/M thì/C tìm_kiếm/V trong/E định/V địa_chỉ/N mở/V cực_kì/R chậm/A (xem/Np công_thức/N và/Cc )/CH ./CH\nVới/E xích/V ngăn_cách/V ,/CH ngay_cả/Np khi/N ,/CH danh_sách/N dài/A nhất/A cũng/R chỉ/R khoảng/N ./CH\nNgược_lại/X ,/CH trong/E các/L ứng_dụng/V mà/C chúng_ta/P chủ_yếu/A thực_hiện/V tìm_kiếm/V ,/CH ít_khi/Np phải/V thêm/V hay/Cc xóa/V phần_tử/N khỏi/V bảng/N (ví/Np dụ/V ứng_dụng/V từ_điển/Np chẳng/R hạn)/Np thì/C băm/Np hoàn_hảo/A sẽ/R là/V một/M lựa_chọn/V tốt/A ./CH\nNhư/C đã/R nhắc/V đến/E ở/E trên/E ,/CH băm/Np hoàn_hảo/A có/V thời_gian/N kì_vọng/V trong/E trường_hợp/N cũng/R chỉ/R là/V và/Cc bộ_nhớ/Np kì_vọng/V là/V ./CH\nTương_tự/A như/C băm/Np hoàn_hảo/A ,/CH nếu/C ứng_dụng/V của/E chúng_ta/P chủ_yếu/A thực_hiện/V tìm_kiếm/V nhưng/C chúng_ta/P lại/R có/V thêm/V thông_tin/N về/E tần_suất/N truy_nhập/V khóa/N ,/CH thì/C ta/P có_thể/R sử_dụng/V băm/Np địa_chỉ/N mở/V ./CH\nCơ_chế/N của/E băm/Np địa_chỉ/N mở/V cho/E ta/P thấy/V các/L khóa/N băm/Np càng/R sớm/A thì/C số/N bước/V dò/V trong/E tìm_kiếm/V càng/R ngắn/A ./CH\nDo_đó/C ,/CH ta/P có_thể/R băm/Np các/L khóa/N theo/V thứ_tự/N giảm_dần/Np của/E tần_suất/N truy_nhập/V ./CH\nMột/M điểm/N chú_ý/V duy_nhất/A với/E băm/Np địa_chỉ/N mở/V là/V không/R nên/C để/E hệ_số/N tải/N vượt/V qúa/Np ./CH Trong/E code/Np dưới_đây/Np ,/CH mình/P sử_dụng/V hàm_băm/Np nhân/N nhị_phân/Np (họ/Np hàm_băm/Np trong/E ví_dụ/C 2)Code/Np :/CH ,/CH ,/CH ./CH\n1/M Donald_E/Np ./CH\nKnuth/Np ./CH\n,/CH Volume/Np 3/M :/CH (2nd/Np Ed/Np ./CH )/CH Sorting/Np and/Np Searching/Np ./CH\nAddison_Wesley_Longman_Publishing_Co/Np ./CH ,/CH Inc/Np ./CH ,/CH Redwood_City/Np ,/CH CA/N ,/CH USA/Np ,/CH 1998/M ./CH\n2/M Jeff_Erickson/Np ./CH\n./CH\nUIUC/Np ,/CH 2013/M ./CH\n3/M Thomas_H/Np ./CH\nCormen/Np ,/CH Clifford_Stein/Np ,/CH Ronald_L/Np ./CH\nRivest/Np ,/CH and/Np Charles_E/Np ./CH\nLeiserson/Np ./CH\n(2nd/Np ed/Np ./CH )/CH ./CH\nChapter/Np 12/M ./CH\nMcGraw-Hill_Higher_Education/Np ,/CH 2001/M ./CH\n,/CH ,/CH ,/CH ,/CH ,/CH ,/CH ,/CH Trackback/Np link/Np :/CH Powered/Np by/Np and/Np\n", "title": "Bảng băm và các cơ chế giải quyết xung đột cơ bản -- Hashing and  collision  handling\n", "link": "http://www.giaithuatlaptrinh.com/?p=967\n"}