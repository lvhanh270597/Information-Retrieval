{"content": "Mảng Hậu_Tố là một CTDL giúp sort các hậu_tố theo thứ_tự từ_điển .\nMảng này chứa các số_nguyên , khởi_đầu của các hậu_tố .\nCó 2 cách để xây_dựng một mảng hậu_tố : Thuật_toán không xác_định : Sử_dụng thuật_toán Rabin-Karp và kiểm_tra nếu một hậu_tố có thứ_tự từ_điển nhỏ hơn một hậu_tố khác , tìm mảng tiền_tố chung lớn nhất ( LCP ) , sau_đó sử_dụng Tìm_Kiếm Nhị_Phân và hàm_băm ( Hash ) và kiểm_tra ký_tự tiếp_theo sau LCP của chúng .\nCode_C++ : namespace HashSuffixArray const int MAXN = 1 lt;lt; 21 ; typedef unsigned long_long hash ; const hash BASE = 137 ; int N ; char S ; int sa MAXN ; hash h MAXN , hPow MAXN ; define getHash(lo , size) (hlo - h(lo) + (size) hPowsize) inline bool sufCmp ( int i , int j ) int lo = 1 , hi = min ( N - i , N - j ); while ( lo lt;= hi ) int mid = ( lo + hi ) gt;gt; 1 ; if ( getHash ( i , mid ) == getHash ( j , mid )) lo = mid + 1 ; else hi = mid - 1 ; return S i + hi lt; S j + hi ; void buildSA () N = strlen ( S ); hPow 0 = 1 ; for ( int i = 1 ; i lt;= N ; ++ i ) hPow i = hPow i - 1 BASE ; h N = 0 ; for ( int i = N - 1 ; i gt;= 0 ; -- i ) h i = h i + 1 BASE + S i , sa i = i ; stable_sort ( sa , sa + N , sufCmp ); // end namespace HashSuffixArray Thuật_toán xác_định : Sort log(Độ dài lớn nhất) bước , với bước thứ i (tính từ 0) , sort chúng theo 2i ký_tự đầu_tiên và đưa hậu_tố có cùng tiền_tố với 2i ký_tự vào cùng một bucket .\nCode : / Suffix_array O(n lg2 n) LCP table O(n) / include lt;cstdiogt; include lt;algorithmgt; include lt;cstringgt; using namespace std ; define REP(i , n) for (int i = 0; i lt; (int)(n); ++i) namespace SuffixArray const int MAXN = 1 lt;lt; 21 ; char S ; int N , gap ; int sa MAXN , pos MAXN , tmp MAXN , lcp MAXN ; bool sufCmp ( int i , int j ) if ( pos i ! = pos j ) return pos i lt; pos j ; i += gap ; j += gap ; return ( i lt; N amp;amp; j lt; N ) ?\npos i lt; pos j : i gt; j ; void buildSA () N = strlen ( S ); REP ( i , N ) sa i = i , pos i = S i ; for ( gap = 1 ;; gap = 2 ) sort ( sa , sa + N , sufCmp ); REP ( i , N - 1 ) tmp i + 1 = tmp i + sufCmp ( sa i , sa i + 1 ); REP ( i , N ) pos sa i = tmp i ; if ( tmp N - 1 == N - 1 ) break ; void buildLCP () for ( int i = 0 , k = 0 ; i lt; N ; ++ i ) if ( pos i ! = N - 1 ) for ( int j = sa pos i + 1 ; S i + k == S j + k ;) ++ k ; lcp pos i = k ; if ( k ) -- k ; // end namespace SuffixArray_Source : mukel Tài_liệu tham_khảo : Codeforces\n", "tagged": "Mảng/N Hậu_Tố/Np là/V một/M CTDL/Np giúp/V sort/Np các/L hậu_tố/Np theo/V thứ_tự/N từ_điển/Np ./CH\nMảng/N này/P chứa/V các/L số_nguyên/Np ,/CH khởi_đầu/V của/E các/L hậu_tố/Np ./CH\nCó/V 2/M cách/N để/E xây_dựng/V một/M mảng/N hậu_tố/Np :/CH Thuật_toán/N không/R xác_định/V :/CH Sử_dụng/V thuật_toán/N Rabin-Karp/Np và/Cc kiểm_tra/V nếu/C một/M hậu_tố/Np có/V thứ_tự/N từ_điển/Np nhỏ/A hơn/A một/M hậu_tố/Np khác/A ,/CH tìm/V mảng/N tiền_tố/Np chung/A lớn/A nhất/A (/CH LCP/Np )/CH ,/CH sau_đó/Np sử_dụng/V Tìm_Kiếm/V Nhị_Phân/Np và/Cc hàm_băm/Np (/CH Hash/Np )/CH và/Cc kiểm_tra/V ký_tự/Np tiếp_theo/V sau/E LCP/Np của/E chúng/P ./CH\nCode_C++/Np :/CH namespace/Np HashSuffixArray/Np const/Np int/Np MAXN/Np =/CH 1/M lt;lt;/Np 21/M ;/CH typedef/Np unsigned/Np long_long/Np hash/Np ;/CH const/Np hash/Np BASE/Np =/CH 137/Np ;/CH int/Np N/Ny ;/CH char/Np S/Y ;/CH int/Np sa/Np MAXN/Np ;/CH hash/Np h/Ny MAXN/Np ,/CH hPow/Np MAXN/Np ;/CH define/Np getHash(lo/Np ,/CH size)/Np (hlo/Np -/CH h(lo)/Np +/CH (size)/Np hPowsize)/Np inline/Np bool/Np sufCmp/Np (/CH int/Np i/M ,/CH int/Np j/Np )/CH int/Np lo/V =/CH 1/M ,/CH hi/Np =/CH min/Np (/CH N/Ny -/CH i/M ,/CH N/Ny -/CH j/Np );/CH while/Np (/CH lo/V lt;=/Np hi/Np )/CH int/Np mid/Np =/CH (/CH lo/V +/CH hi/Np )/CH gt;gt;/Np 1/M ;/CH if/Np (/CH getHash/Np (/CH i/M ,/CH mid/Np )/CH ==/Np getHash/Np (/CH j/Np ,/CH mid/Np ))/Np lo/V =/CH mid/Np +/CH 1/M ;/CH else/Np hi/Np =/CH mid/Np -/CH 1/M ;/CH return/Np S/Y i/M +/CH hi/Np lt;/Np S/Y j/Np +/CH hi/Np ;/CH void/Np buildSA/Np ()/Np N/Ny =/CH strlen/Np (/CH S/Y );/CH hPow/Np 0/M =/CH 1/M ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np N/Ny ;/CH ++/Np i/M )/CH hPow/Np i/M =/CH hPow/Np i/M -/CH 1/M BASE/Np ;/CH h/Ny N/Ny =/CH 0/M ;/CH for/Np (/CH int/Np i/M =/CH N/Ny -/CH 1/M ;/CH i/M gt;=/Np 0/M ;/CH --/Np i/M )/CH h/Ny i/M =/CH h/Ny i/M +/CH 1/M BASE/Np +/CH S/Y i/M ,/CH sa/Np i/M =/CH i/M ;/CH stable_sort/Np (/CH sa/Np ,/CH sa/Np +/CH N/Ny ,/CH sufCmp/Np );/CH //CH end/Np namespace/Np HashSuffixArray/Np Thuật_toán/N xác_định/V :/CH Sort/Np log(Độ/Np dài/A lớn/A nhất)/Np bước/V ,/CH với/E bước/V thứ/N i/M (tính/Np từ/E 0)/Np ,/CH sort/Np chúng/P theo/V 2i/Np ký_tự/Np đầu_tiên/A và/Cc đưa/V hậu_tố/Np có/V cùng/A tiền_tố/Np với/E 2i/Np ký_tự/Np vào/E cùng/A một/M bucket/Np ./CH\nCode/Np :/CH //CH Suffix_array/Np O(n/Np lg2/Np n)/Np LCP/Np table/Np O(n)/Np //CH include/Np lt;cstdiogt;/Np include/Np lt;algorithmgt;/Np include/Np lt;cstringgt;/Np using/Np namespace/Np std/Np ;/CH define/Np REP(i/Np ,/CH n)/Np for/Np (int/Np i/M =/CH 0;/Np i/M lt;/Np (int)(n);/Np ++i)/Np namespace/Np SuffixArray/Np const/Np int/Np MAXN/Np =/CH 1/M lt;lt;/Np 21/M ;/CH char/Np S/Y ;/CH int/Np N/Ny ,/CH gap/Np ;/CH int/Np sa/Np MAXN/Np ,/CH pos/Np MAXN/Np ,/CH tmp/Np MAXN/Np ,/CH lcp/Np MAXN/Np ;/CH bool/Np sufCmp/Np (/CH int/Np i/M ,/CH int/Np j/Np )/CH if/Np (/CH pos/Np i/M !/CH =/CH pos/Np j/Np )/CH return/Np pos/Np i/M lt;/Np pos/Np j/Np ;/CH i/M +=/Np gap/Np ;/CH j/Np +=/Np gap/Np ;/CH return/Np (/CH i/M lt;/Np N/Ny amp;amp;/Np j/Np lt;/Np N/Ny )/CH ?/CH\npos/Np i/M lt;/Np pos/Np j/Np :/CH i/M gt;/Np j/Np ;/CH void/Np buildSA/Np ()/Np N/Ny =/CH strlen/Np (/CH S/Y );/CH REP/Np (/CH i/M ,/CH N/Ny )/CH sa/Np i/M =/CH i/M ,/CH pos/Np i/M =/CH S/Y i/M ;/CH for/Np (/CH gap/Np =/CH 1/M ;;/Np gap/Np =/CH 2/M )/CH sort/Np (/CH sa/Np ,/CH sa/Np +/CH N/Ny ,/CH sufCmp/Np );/CH REP/Np (/CH i/M ,/CH N/Ny -/CH 1/M )/CH tmp/Np i/M +/CH 1/M =/CH tmp/Np i/M +/CH sufCmp/Np (/CH sa/Np i/M ,/CH sa/Np i/M +/CH 1/M );/CH REP/Np (/CH i/M ,/CH N/Ny )/CH pos/Np sa/Np i/M =/CH tmp/Np i/M ;/CH if/Np (/CH tmp/Np N/Ny -/CH 1/M ==/Np N/Ny -/CH 1/M )/CH break/Np ;/CH void/Np buildLCP/Np ()/Np for/Np (/CH int/Np i/M =/CH 0/M ,/CH k/N =/CH 0/M ;/CH i/M lt;/Np N/Ny ;/CH ++/Np i/M )/CH if/Np (/CH pos/Np i/M !/CH =/CH N/Ny -/CH 1/M )/CH for/Np (/CH int/Np j/Np =/CH sa/Np pos/Np i/M +/CH 1/M ;/CH S/Y i/M +/CH k/N ==/Np S/Y j/Np +/CH k/N ;)/Np ++/Np k/N ;/CH lcp/Np pos/Np i/M =/CH k/N ;/CH if/Np (/CH k/N )/CH --/Np k/N ;/CH //CH end/Np namespace/Np SuffixArray_Source/Np :/CH mukel/Np Tài_liệu/N tham_khảo/V :/CH Codeforces/Np\n", "title": "Mảng hậu tố (Suffix Array)\n", "link": "http://vnoi.info/wiki/algo/data-structures/suffix-array\n"}