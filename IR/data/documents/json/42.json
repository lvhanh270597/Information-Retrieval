{"content": "Tác_giả : Nguyễn_Thành_Trung (RR) Table of_Contents Bài_toán mở_đầu (TSP) Tham_Lam Local_Search_Local_Search dưới cách hiểu của đại_số Bài_tập áp_dụng : Bài_toán mở_đầu (TSP) Cho_N điểm trên mặt_phẳng , đánh_số từ 1 đến N .\nTìm một chu_trình xuất_phát từ điểm thứ 1 , đi_qua tất_cả các điểm , mỗi đỉnh đúng 1 lần và quay trở_về đỉnh ban_đầu .\nBài_toán này là NP , không có thuật_toán tối_ưu với độ phức_tạp đa_thức .\nTên_gọi phổ_biến của bài này là Traveling_Salesman_Problem (TSP) .\nKhi gặp bài NP , ta chỉ_có thể tìm cách đưa_ra một kết_quả càng tối_ưu càng tốt .\nMột_số phương_pháp thường_dùng là tham_lam hoặc local search - sẽ được nói trong bài viết này .\nBạn có_thể nộp thử bài này ở VOJ .\nTham_Lam Một thuật_toán rất hồn_nhiên nhất_là , xuất_phát từ điểm thứ 1 , tại mỗi bước , ta sẽ di_chuyển đến điểm gần nó nhất (mà chưa được di_chuyển đến trước đó) .\nLặp_lại N lần , ta thu được một chu_trình .\nCài_đặt 1 số phần chính : struct Point double x , y ; Point ( double x = 0 , double y = 0 ) : x ( x ) , y ( y ) Point operator - ( Point a ) return Point ( x - a .\nx , y - a .\ny ); double len () return sqrt ( x x + y y ); a MAXN ; bool used MAXN ; // Đánh_dấu điểm đã được đi_qua .\nint id MAXN ; // Lưu chỉ_số của các điểm trong kết_quả tìm được .\nvoid solve () memset ( used , false , sizeof used ); used 1 = true ; id 1 = 1 ; for ( int i = 2 ; i lt;= n ; ++ i ) double bestDist = 1e6 ; int save = - 1 ; for ( int j = 1 ; j lt;= n ; ++ j ) double curDist = ( a current .\nid i - 1 - a j ) .\nlen (); if ( ! used j amp;amp; curDist lt; bestDist ) bestDist = curDist ; save = j ; id i = save ; used save = true ; Dưới_đây là kết_quả khi mình chạy với một bộ test được sinh random gồm 50 đỉnh : Khi quan_sát kết_quả của thuật_toán trên , dễ thấy có rất nhiều cặp cạnh cắt nhau .\nKhi tồn_tại 2 cạnh AB và CD cắt nhau , ta có_thể đảo nó thành AC và BD hoặc AD và BC , và giữ_nguyên phần còn_lại của chu_trình .\nNhư_vậy ta có_thể thu được một kết_quả tốt hơn .\nNhận_xét này đưa ta đến với ý_tưởng thứ 2 : Local_Search_Xét một chu_trình ban_đầu bất_kỳ .\nXét tất_cả N2 cặp cạnh , với mỗi cặp cạnh u , v , ta có chu_trình 1 --gt; u-1 --gt; u --gt; v-1 --gt; v --gt; 1 , ta thử đổi nó thành 1 --gt; u-1 --gt; v-1 --gt; u --gt; v --gt; 1 .\nNếu việc đổi này cho ta một chu_trình có trọng số nhỏ hơn , ta giữ_lại chu_trình mới này .\nCài_đặt : void optimize () while ( true ) bool stop = true ; for ( int u = 2 ; u lt;= n ; ++ u ) for ( int v = n - 1 ; v gt; u ; -- v ) // t1 = (cạnh (u-1) --gt; u) + (cạnh (v --gt; (v+1)) double t1 = ( a id u - 1 - a id u ) .\nlen () + ( a id v - a id v + 1 ) .\nlen (); // t2 = (cạnh (u-1) --gt; v) + (cạnh (u --gt; (v+1)) double t2 = ( a id u - 1 - a id v ) .\nlen () + ( a id u - a id v + 1 ) .\nlen (); if ( t1 gt; t2 ) // Nếu đổi chu_trình cho kết_quả tốt hơn for ( int i = u , j = v ; i lt;= j ; ++ i , -- j ) swap ( id i , id j ); stop = false ; if ( stop ) break ; Minh_họa cho test trên (chú ý rằng mình cài_đặt sai và không xét cạnh nối từ đỉnh cuối đến đỉnh 1 , nên còn một cặp cạnh cắt nhau _) : Ý_tưởng này chính là nền_tảng của Local_Search : Xuất_phát từ một cấu_hình kết_quả , ta tìm cách thay_đổi một phần của cấu_hình để đạt được một cấu_hình tốt hơn .\nThông_thường , cài_đặt local search gồm 3 bước chính : Khởi tạo một cấu_hình kết_quả bất_kỳ Gọi_C là cấu_hình hiện_tại .\nTa xét các cấu_hình \"kề\" với C , chọn ra cấu_hình tốt nhất .\nCập_nhật cấu_hình này cho C .\nLặp_lại đến khi ta không_thể cập_nhật được C .\nTrong các bước trên có đề_cập đến khái_niệm \"kề\" của 2 cấu_hình .\nKhái_niệm này chỉ đơn_giản là tập những cấu_hình mà ta xét đến khi đang ở một cấu_hình nhất_định .\nChẳng_hạn trong bài_toán mở_đầu , với mỗi đường_đi , các cấu_hình kề nó là các đường_đi nhận được khi đổi một cặp cạnh .\nLocal_Search dưới cách hiểu của đại_số Xét một bài_toán tìm giá_trị lớn nhất của một hàm 2 chiều J(theta0 , theta1) .\nHình_vẽ trên mô_tả cách làm của local search : Xuất_phát từ điểm xanh đậm , ta xét các điểm ở gần nó , tìm điểm mà J lớn nhất , rồi di_chuyển đến điểm đó .\nBài_tập áp_dụng : ACM_ICPC_National_Vietnam 2017 - Bài_E_Đây là một bài_tập điển_hình về áp_dụng Local_Search trong lập_trình thi_đấu (Competitive programming) .\nCác bạn nên làm thử bài này trước_khi làm những bài khác .\nLời_giải chi_tiết SPOJ - PANEL_IPSC 2013 - Invisible cats https : //www . facebook . com/note . php ? note_id=10150106829298920\n", "tagged": "Tác_giả/N :/CH Nguyễn_Thành_Trung/Np (RR)/Np Table/Np of_Contents/Np Bài_toán/N mở_đầu/V (TSP)/Np Tham_Lam/Np Local_Search_Local_Search/Np dưới/E cách/N hiểu/V của/E đại_số/Np Bài_tập/Np áp_dụng/V :/CH Bài_toán/N mở_đầu/V (TSP)/Np Cho_N/Np điểm/N trên/E mặt_phẳng/N ,/CH đánh_số/Np từ/E 1/M đến/E N/Ny ./CH\nTìm/V một/M chu_trình/N xuất_phát/V từ/E điểm/N thứ/N 1/M ,/CH đi_qua/Np tất_cả/P các/L điểm/N ,/CH mỗi/L đỉnh/N đúng/A 1/M lần/N và/Cc quay/V trở_về/V đỉnh/N ban_đầu/N ./CH\nBài_toán/N này/P là/V NP/Np ,/CH không/R có/V thuật_toán/N tối_ưu/A với/E độ/N phức_tạp/A đa_thức/Np ./CH\nTên_gọi/Np phổ_biến/V của/E bài/N này/P là/V Traveling_Salesman_Problem/Np (TSP)/Np ./CH\nKhi/N gặp/V bài/N NP/Np ,/CH ta/P chỉ_có/Np thể/N tìm/V cách/N đưa_ra/Np một/M kết_quả/N càng/R tối_ưu/A càng/R tốt/A ./CH\nMột_số/L phương_pháp/N thường_dùng/Np là/V tham_lam/Np hoặc/Cc local/Np search/Np -/CH sẽ/R được/V nói/V trong/E bài/N viết/V này/P ./CH\nBạn/N có_thể/R nộp/V thử/V bài/N này/P ở/E VOJ/Np ./CH\nTham_Lam/Np Một/M thuật_toán/N rất/R hồn_nhiên/A nhất_là/X ,/CH xuất_phát/V từ/E điểm/N thứ/N 1/M ,/CH tại/E mỗi/L bước/V ,/CH ta/P sẽ/R di_chuyển/V đến/E điểm/N gần/A nó/P nhất/A (mà/Np chưa/R được/V di_chuyển/V đến/E trước/E đó)/Np ./CH\nLặp_lại/Np N/Ny lần/N ,/CH ta/P thu/V được/V một/M chu_trình/N ./CH\nCài_đặt/V 1/M số/N phần/N chính/T :/CH struct/Np Point/Np double/Np x/CH ,/CH y/N ;/CH Point/Np (/CH double/Np x/CH =/CH 0/M ,/CH double/Np y/N =/CH 0/M )/CH :/CH x/CH (/CH x/CH )/CH ,/CH y/N (/CH y/N )/CH Point/Np operator/Np -/CH (/CH Point/Np a/Ni )/CH return/Np Point/Np (/CH x/CH -/CH a/Ni ./CH\nx/CH ,/CH y/N -/CH a/Ni ./CH\ny/N );/CH double/Np len/N ()/Np return/Np sqrt/Np (/CH x/CH x/CH +/CH y/N y/N );/CH a/Ni MAXN/Np ;/CH bool/Np used/Np MAXN/Np ;/CH //CH Đánh_dấu/V điểm/N đã/R được/V đi_qua/Np ./CH\nint/Np id/Np MAXN/Np ;/CH //CH Lưu/V chỉ_số/N của/E các/L điểm/N trong/E kết_quả/N tìm/V được/V ./CH\nvoid/Np solve/Np ()/Np memset/Np (/CH used/Np ,/CH false/Np ,/CH sizeof/Np used/Np );/CH used/Np 1/M =/CH true/Np ;/CH id/Np 1/M =/CH 1/M ;/CH for/Np (/CH int/Np i/M =/CH 2/M ;/CH i/M lt;=/Np n/Ny ;/CH ++/Np i/M )/CH double/Np bestDist/Np =/CH 1e6/Np ;/CH int/Np save/Np =/CH -/CH 1/M ;/CH for/Np (/CH int/Np j/Np =/CH 1/M ;/CH j/Np lt;=/Np n/Ny ;/CH ++/Np j/Np )/CH double/Np curDist/Np =/CH (/CH a/Ni current/Np ./CH\nid/Np i/M -/CH 1/M -/CH a/Ni j/Np )/CH ./CH\nlen/N ();/Np if/Np (/CH !/CH used/Np j/Np amp;amp;/Np curDist/Np lt;/Np bestDist/Np )/CH bestDist/Np =/CH curDist/Np ;/CH save/Np =/CH j/Np ;/CH id/Np i/M =/CH save/Np ;/CH used/Np save/Np =/CH true/Np ;/CH Dưới_đây/Np là/V kết_quả/N khi/N mình/P chạy/V với/E một/M bộ/N test/Np được/V sinh/V random/Np gồm/V 50/M đỉnh/N :/CH Khi/N quan_sát/V kết_quả/N của/E thuật_toán/N trên/E ,/CH dễ/A thấy/V có/V rất/R nhiều/A cặp/N cạnh/N cắt/V nhau/N ./CH\nKhi/N tồn_tại/V 2/M cạnh/N AB/Np và/Cc CD/Np cắt/V nhau/N ,/CH ta/P có_thể/R đảo/N nó/P thành/V AC/Np và/Cc BD/Np hoặc/Cc AD/Np và/Cc BC/Np ,/CH và/Cc giữ_nguyên/Np phần/N còn_lại/Np của/E chu_trình/N ./CH\nNhư_vậy/X ta/P có_thể/R thu/V được/V một/M kết_quả/N tốt/A hơn/A ./CH\nNhận_xét/N này/P đưa/V ta/P đến/E với/E ý_tưởng/N thứ/N 2/M :/CH Local_Search_Xét/Np một/M chu_trình/N ban_đầu/N bất_kỳ/A ./CH\nXét/V tất_cả/P N2/Np cặp/N cạnh/N ,/CH với/E mỗi/L cặp/N cạnh/N u/N ,/CH v/Nu ,/CH ta/P có/V chu_trình/N 1/M --gt;/Np u-1/Np --gt;/Np u/N --gt;/Np v-1/Np --gt;/Np v/Nu --gt;/Np 1/M ,/CH ta/P thử/V đổi/V nó/P thành/V 1/M --gt;/Np u-1/Np --gt;/Np v-1/Np --gt;/Np u/N --gt;/Np v/Nu --gt;/Np 1/M ./CH\nNếu/C việc/N đổi/V này/P cho/E ta/P một/M chu_trình/N có/V trọng/Np số/N nhỏ/A hơn/A ,/CH ta/P giữ_lại/Np chu_trình/N mới/R này/P ./CH\nCài_đặt/V :/CH void/Np optimize/Np ()/Np while/Np (/CH true/Np )/CH bool/Np stop/Np =/CH true/Np ;/CH for/Np (/CH int/Np u/N =/CH 2/M ;/CH u/N lt;=/Np n/Ny ;/CH ++/Np u/N )/CH for/Np (/CH int/Np v/Nu =/CH n/Ny -/CH 1/M ;/CH v/Nu gt;/Np u/N ;/CH --/Np v/Nu )/CH //CH t1/M =/CH (cạnh/Np (u-1)/Np --gt;/Np u)/Np +/CH (cạnh/Np (v/Np --gt;/Np (v+1))/Np double/Np t1/M =/CH (/CH a/Ni id/Np u/N -/CH 1/M -/CH a/Ni id/Np u/N )/CH ./CH\nlen/N ()/Np +/CH (/CH a/Ni id/Np v/Nu -/CH a/Ni id/Np v/Nu +/CH 1/M )/CH ./CH\nlen/N ();/Np //CH t2/Ny =/CH (cạnh/Np (u-1)/Np --gt;/Np v)/Np +/CH (cạnh/Np (u/Np --gt;/Np (v+1))/Np double/Np t2/Ny =/CH (/CH a/Ni id/Np u/N -/CH 1/M -/CH a/Ni id/Np v/Nu )/CH ./CH\nlen/N ()/Np +/CH (/CH a/Ni id/Np u/N -/CH a/Ni id/Np v/Nu +/CH 1/M )/CH ./CH\nlen/N ();/Np if/Np (/CH t1/M gt;/Np t2/Ny )/CH //CH Nếu/C đổi/V chu_trình/N cho/E kết_quả/N tốt/A hơn/A for/Np (/CH int/Np i/M =/CH u/N ,/CH j/Np =/CH v/Nu ;/CH i/M lt;=/Np j/Np ;/CH ++/Np i/M ,/CH --/Np j/Np )/CH swap/Np (/CH id/Np i/M ,/CH id/Np j/Np );/CH stop/Np =/CH false/Np ;/CH if/Np (/CH stop/Np )/CH break/Np ;/CH Minh_họa/V cho/E test/Np trên/E (chú/Np ý/N rằng/C mình/P cài_đặt/V sai/A và/Cc không/R xét/V cạnh/N nối/V từ/E đỉnh/N cuối/N đến/E đỉnh/N 1/M ,/CH nên/C còn/R một/M cặp/N cạnh/N cắt/V nhau/N _)/Np :/CH Ý_tưởng/N này/P chính/T là/V nền_tảng/N của/E Local_Search/Np :/CH Xuất_phát/V từ/E một/M cấu_hình/Np kết_quả/N ,/CH ta/P tìm/V cách/N thay_đổi/V một/M phần/N của/E cấu_hình/Np để/E đạt/V được/V một/M cấu_hình/Np tốt/A hơn/A ./CH\nThông_thường/A ,/CH cài_đặt/V local/Np search/Np gồm/V 3/M bước/V chính/T :/CH Khởi/V tạo/V một/M cấu_hình/Np kết_quả/N bất_kỳ/A Gọi_C/Np là/V cấu_hình/Np hiện_tại/N ./CH\nTa/P xét/V các/L cấu_hình/Np \"kề\"/Np với/E C/Ni ,/CH chọn/V ra/V cấu_hình/Np tốt/A nhất/A ./CH\nCập_nhật/V cấu_hình/Np này/P cho/E C/Ni ./CH\nLặp_lại/Np đến/E khi/N ta/P không_thể/R cập_nhật/V được/V C/Ni ./CH\nTrong/E các/L bước/V trên/E có/V đề_cập/V đến/E khái_niệm/N \"kề\"/Np của/E 2/M cấu_hình/Np ./CH\nKhái_niệm/N này/P chỉ/R đơn_giản/A là/V tập/V những/L cấu_hình/Np mà/C ta/P xét/V đến/E khi/N đang/R ở/E một/M cấu_hình/Np nhất_định/R ./CH\nChẳng_hạn/X trong/E bài_toán/N mở_đầu/V ,/CH với/E mỗi/L đường_đi/Np ,/CH các/L cấu_hình/Np kề/V nó/P là/V các/L đường_đi/Np nhận/V được/V khi/N đổi/V một/M cặp/N cạnh/N ./CH\nLocal_Search/Np dưới/E cách/N hiểu/V của/E đại_số/Np Xét/V một/M bài_toán/N tìm/V giá_trị/N lớn/A nhất/A của/E một/M hàm/Np 2/M chiều/N J(theta0/Np ,/CH theta1)/Np ./CH\nHình_vẽ/Np trên/E mô_tả/V cách/N làm/V của/E local/Np search/Np :/CH Xuất_phát/V từ/E điểm/N xanh/A đậm/A ,/CH ta/P xét/V các/L điểm/N ở/E gần/A nó/P ,/CH tìm/V điểm/N mà/C J/Np lớn/A nhất/A ,/CH rồi/C di_chuyển/V đến/E điểm/N đó/P ./CH\nBài_tập/Np áp_dụng/V :/CH ACM_ICPC_National_Vietnam/Np 2017/Np -/CH Bài_E_Đây/Np là/V một/M bài_tập/Np điển_hình/N về/E áp_dụng/V Local_Search/Np trong/E lập_trình/V thi_đấu/V (Competitive/Np programming)/Np ./CH\nCác/L bạn/N nên/C làm/V thử/V bài/N này/P trước_khi/Np làm/V những/L bài/N khác/A ./CH\nLời_giải/Np chi_tiết/N SPOJ/Np -/CH PANEL_IPSC/Np 2013/M -/CH Invisible/Np cats/Np https/Np :/CH //CH ./CH facebook/Np ./CH com/Np ./CH php/Np ?/CH note_id=10150106829298920/Np\n", "title": "Local Search\n", "link": "http://vnoi.info/wiki/algo/search/Local-Search\n"}