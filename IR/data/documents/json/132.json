{"content": "Nguồn bài : Codeforces_Table of_Contents Bài_toán Thuật_toán Độ phức_tạp : Cài_đặt : Áp_dụng Trước_khi đọc_bài này , các bạn có_thể đọc_bài Xử_lý xâu để nắm được các thuật_ngữ cơ_bản .\nZ_Algorithm hay còn gọi_là Z_Function là thuật_toán áp_dụng cho các bài so khớp chuỗi .\nBài_toán Cho một chuỗi S có độ_dài n , thuật_toán_Z Function tạo ra một mảng Z mà tại mỗi vị_trí i , ta có Z_i là độ_dài chuỗi con dài nhất_là tiền_tố của S bắt_đầu tại_vị trí S_i , hay nói một_cách khác Z_i là một_số nguyên k lớn nhất mà S_j=S_i + j với mọi 0 \\le j lt; k .\nTrường_hợp S_i \\ne S_0 thì Z_i = 0 .\nThuật_toán Ta duyệt qua tất_cả các ký_tự của S (chỉ số i từ 1 đến n - 1) .\nTrong quá_trình duyệt , ta duy_trì một đoạn L , R với R là một_số lớn nhất thỏa 1 \\le L \\le i \\le R và L , R là một tiền_tố của S (Nếu không xuất_hiện các đoạn như_vậy thì đặt L = R = -1) .\nVới i = 1 ta có_thể dễ_dàng tính L và R bằng phép so_sánh S0 . .\nvới S1 . . .\nĐồng_thời , ta có_thể tính giá_trị Z_1 .\nGiả_sử_ta đã xây_dựng được đoạn L , R và các giá_trị Z1 . . i - 1 , ta sẽ tính Z_i và cập_nhật đoạn L , R mới như_sau : Nếu i gt; R , khi đấy không tồn_tại một chuỗi con là tiền_tố của S bắt_đầu tại một vị_trí trước i và kết_thúc tại ví trí i hoặc sau i .\nBởi nếu_như có_một tiền_tố như_vậy , thì đoạn L , i sẽ là chuỗi tiền_tố tối_ưu chứ không_phải L , R .\nDo_đó , ta sẽ cập_nhật lại đoạn L , R bằng cách so_sánh S0 . .\nvới Si . .\nvà lấy giá_trị Z_i hiện_tại (Z_i = R - L + 1) .\nNgược_lại , i \\le R thì đoạn L , R hiện_tại kéo_dài ít_nhất đến i .\nĐặt k = i - L .\nTa biết rằng Z_i \\ge min(Z_k , R - i + 1) bởi_vì Si . .\nbằng với Sk . .\nít_nhất_là R - i + 1 ký_tự .\nXét các trường_hợp sau : Nếu Z_k lt; R - i + 1 thì sẽ không có chuỗi con nào_là tiền_tố của S dài hơn Z_k bắt_đầu tại S_i .\nNghĩa_là Z_i = Z_k và đoạn L , R vẫn giữ_nguyên (do đoạn L , R chỉ thay_đổi nếu chuỗi tiền_tố bắt_đầu tại S_i vượt ra khỏi đoạn L , R) .\nNếu Z_k \\ge R - i + 1 thì chuỗi Si . .\nlà tiền_tố của S và có nhiều hơn R - i + 1 ký_tự (tức là kết_thúc sau vị_trí R) .\nNhư_vậy ta cần cập_nhật đoạn L , R bằng cách đặt lại L = i và so_sánh từ_vị trí SR + 1 trở_đi để được một vị_trí R mới .\nĐồng_thời , ta tính được_giá trị của Z_i .\nĐộ phức_tạp : Tại mỗi bước trong_vòng lặp , chúng_ta không cần so_sánh ký_tự tại các_vị trí nhỏ hơn R , và mỗi lần ký_tự R phù_hợp thì ta tăng R lên một , vì_thế ta sẽ tốn nhiều nhất n phép so_sánh .\nNgoài_ra , với mỗi giá_trị i , ta chỉ tìm_thấy một ký_tự không phù_hợp (điều kiện tăng R) .\nVì_thế không_thể có nhiều hơn n phép so_sánh cho kết_quả sai .\nĐưa đến độ phức_tạp thuật_toán là O(n) .\nCài_đặt : Có_thể dễ_dàng cài_đặt .\nChú_ý việc tối_ưu_hóa L = R = i được sử_dụng khi S_0 \\ne S_i (Điều đó không làm ảnh_hưởng đến thuật_toán kể_từ giá_trị kế_tiếp i gt; R không phân biệt) .\nint L = 0 , R = 0 ; Z 0 = n ; for ( int i = 1 ; i lt; n ; i ++ ) if ( i gt; R ) L = R = i ; while ( R lt; n amp;amp; S_R == S_R - L ) R ++ ; Z i = R - L ; R -- ; else int k = i - L ; if ( Z k lt; R - i + 1 ) Z i = Z k ; else L = i ; while ( R lt; n amp;amp; S_R == S_R - L ) R ++ ; Z i = R - L ; R -- ; Áp_dụng VOJ - SUBSTR Có_thể dùng ZFuntion để giải bài này .\nTa tạo ra một chuỗi S=B+A , sao đó xây_dựng mảng Z .\nNhững vị_trí có Z_i \\ge Length(B) (Với Length(B) \\le i lt; Length(A)+Length(B)) là vị_trí tương_ứng của B trong A .\n\n", "tagged": "Nguồn/N bài/N :/CH Codeforces_Table/Np of_Contents/Np Bài_toán/N Thuật_toán/N Độ/N phức_tạp/A :/CH Cài_đặt/V :/CH Áp_dụng/V Trước_khi/Np đọc_bài/Np này/P ,/CH các/L bạn/N có_thể/R đọc_bài/Np Xử_lý/V xâu/Np để/E nắm/V được/V các/L thuật_ngữ/N cơ_bản/A ./CH\nZ_Algorithm/Np hay/Cc còn/R gọi_là/V Z_Function/Np là/V thuật_toán/N áp_dụng/V cho/E các/L bài/N so/V khớp/N chuỗi/N ./CH\nBài_toán/N Cho/E một/M chuỗi/N S/Y có/V độ_dài/Np n/Ny ,/CH thuật_toán_Z/Np Function/Np tạo/V ra/V một/M mảng/N Z/Y mà/C tại/E mỗi/L vị_trí/N i/M ,/CH ta/P có/V Z_i/Np là/V độ_dài/Np chuỗi/N con/Nc dài/A nhất_là/X tiền_tố/Np của/E S/Y bắt_đầu/V tại_vị/Np trí/Np S_i/Np ,/CH hay/Cc nói/V một_cách/N khác/A Z_i/Np là/V một_số/L nguyên/A k/N lớn/A nhất/A mà/C S_j=S_i/Np +/CH j/Np với/E mọi/L 0/M \\le/Np j/Np lt;/Np k/N ./CH\nTrường_hợp/N S_i/Np \\ne/Np S_0/Np thì/C Z_i/Np =/CH 0/M ./CH\nThuật_toán/N Ta/P duyệt/V qua/V tất_cả/P các/L ký_tự/Np của/E S/Y (chỉ/Np số/N i/M từ/E 1/M đến/E n/Ny -/CH 1)/Np ./CH\nTrong/E quá_trình/N duyệt/V ,/CH ta/P duy_trì/V một/M đoạn/Nc L/Ny ,/CH R/Np với/E R/Np là/V một_số/L lớn/A nhất/A thỏa/V 1/M \\le/Np L/Ny \\le/Np i/M \\le/Np R/Np và/Cc L/Ny ,/CH R/Np là/V một/M tiền_tố/Np của/E S/Y (Nếu/Np không/R xuất_hiện/V các/L đoạn/Nc như_vậy/X thì/C đặt/V L/Ny =/CH R/Np =/CH -1)/Np ./CH\nVới/E i/M =/CH 1/M ta/P có_thể/R dễ_dàng/A tính/V L/Ny và/Cc R/Np bằng/E phép/N so_sánh/V S0/Np ./CH ./CH\nvới/E S1/Np ./CH ./CH ./CH\nĐồng_thời/R ,/CH ta/P có_thể/R tính/V giá_trị/N Z_1/Np ./CH\nGiả_sử_ta/Np đã/R xây_dựng/V được/V đoạn/Nc L/Ny ,/CH R/Np và/Cc các/L giá_trị/N Z1/Np ./CH ./CH i/M -/CH 1/M ,/CH ta/P sẽ/R tính/V Z_i/Np và/Cc cập_nhật/V đoạn/Nc L/Ny ,/CH R/Np mới/R như_sau/Np :/CH Nếu/C i/M gt;/Np R/Np ,/CH khi/N đấy/P không/R tồn_tại/V một/M chuỗi/N con/Nc là/V tiền_tố/Np của/E S/Y bắt_đầu/V tại/E một/M vị_trí/N trước/E i/M và/Cc kết_thúc/V tại/E ví/N trí/Np i/M hoặc/Cc sau/E i/M ./CH\nBởi/E nếu_như/C có_một/Np tiền_tố/Np như_vậy/X ,/CH thì/C đoạn/Nc L/Ny ,/CH i/M sẽ/R là/V chuỗi/N tiền_tố/Np tối_ưu/A chứ/C không_phải/Np L/Ny ,/CH R/Np ./CH\nDo_đó/C ,/CH ta/P sẽ/R cập_nhật/V lại/R đoạn/Nc L/Ny ,/CH R/Np bằng/E cách/N so_sánh/V S0/Np ./CH ./CH\nvới/E Si/Ny ./CH ./CH\nvà/Cc lấy/V giá_trị/N Z_i/Np hiện_tại/N (Z_i/Np =/CH R/Np -/CH L/Ny +/CH 1)/Np ./CH\nNgược_lại/X ,/CH i/M \\le/Np R/Np thì/C đoạn/Nc L/Ny ,/CH R/Np hiện_tại/N kéo_dài/V ít_nhất/A đến/E i/M ./CH\nĐặt/V k/N =/CH i/M -/CH L/Ny ./CH\nTa/P biết/V rằng/C Z_i/Np \\ge/Np min(Z_k/Np ,/CH R/Np -/CH i/M +/CH 1)/Np bởi_vì/E Si/Ny ./CH ./CH\nbằng/E với/E Sk/Np ./CH ./CH\nít_nhất_là/Np R/Np -/CH i/M +/CH 1/M ký_tự/Np ./CH\nXét/V các/L trường_hợp/N sau/E :/CH Nếu/C Z_k/Np lt;/Np R/Np -/CH i/M +/CH 1/M thì/C sẽ/R không/R có/V chuỗi/N con/Nc nào_là/T tiền_tố/Np của/E S/Y dài/A hơn/A Z_k/Np bắt_đầu/V tại/E S_i/Np ./CH\nNghĩa_là/V Z_i/Np =/CH Z_k/Np và/Cc đoạn/Nc L/Ny ,/CH R/Np vẫn/R giữ_nguyên/Np (do/Np đoạn/Nc L/Ny ,/CH R/Np chỉ/R thay_đổi/V nếu/C chuỗi/N tiền_tố/Np bắt_đầu/V tại/E S_i/Np vượt/V ra/V khỏi/V đoạn/Nc L/Ny ,/CH R)/Np ./CH\nNếu/C Z_k/Np \\ge/Np R/Np -/CH i/M +/CH 1/M thì/C chuỗi/N Si/Ny ./CH ./CH\nlà/V tiền_tố/Np của/E S/Y và/Cc có/V nhiều/A hơn/A R/Np -/CH i/M +/CH 1/M ký_tự/Np (tức/Np là/V kết_thúc/V sau/E vị_trí/N R)/Np ./CH\nNhư_vậy/X ta/P cần/V cập_nhật/V đoạn/Nc L/Ny ,/CH R/Np bằng/E cách/N đặt/V lại/R L/Ny =/CH i/M và/Cc so_sánh/V từ_vị/Np trí/Np SR/Np +/CH 1/M trở_đi/Np để/E được/V một/M vị_trí/N R/Np mới/R ./CH\nĐồng_thời/R ,/CH ta/P tính/V được_giá/Np trị/V của/E Z_i/Np ./CH\nĐộ/N phức_tạp/A :/CH Tại/E mỗi/L bước/V trong_vòng/Np lặp/V ,/CH chúng_ta/P không/R cần/V so_sánh/V ký_tự/Np tại/E các_vị/Np trí/Np nhỏ/A hơn/A R/Np ,/CH và/Cc mỗi/L lần/N ký_tự/Np R/Np phù_hợp/V thì/C ta/P tăng/V R/Np lên/V một/M ,/CH vì_thế/C ta/P sẽ/R tốn/V nhiều/A nhất/A n/Ny phép/N so_sánh/V ./CH\nNgoài_ra/X ,/CH với/E mỗi/L giá_trị/N i/M ,/CH ta/P chỉ/R tìm_thấy/Np một/M ký_tự/Np không/R phù_hợp/V (điều/Np kiện/V tăng/V R)/Np ./CH\nVì_thế/C không_thể/R có/V nhiều/A hơn/A n/Ny phép/N so_sánh/V cho/E kết_quả/N sai/A ./CH\nĐưa/V đến/E độ/N phức_tạp/A thuật_toán/N là/V O(n)/Np ./CH\nCài_đặt/V :/CH Có_thể/R dễ_dàng/A cài_đặt/V ./CH\nChú_ý/V việc/N tối_ưu_hóa/Np L/Ny =/CH R/Np =/CH i/M được/V sử_dụng/V khi/N S_0/Np \\ne/Np S_i/Np (Điều/Np đó/P không/R làm/V ảnh_hưởng/V đến/E thuật_toán/N kể_từ/Np giá_trị/N kế_tiếp/V i/M gt;/Np R/Np không/R phân/V biệt)/Np ./CH\nint/Np L/Ny =/CH 0/M ,/CH R/Np =/CH 0/M ;/CH Z/Y 0/M =/CH n/Ny ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;/Np n/Ny ;/CH i/M ++/Np )/CH if/Np (/CH i/M gt;/Np R/Np )/CH L/Ny =/CH R/Np =/CH i/M ;/CH while/Np (/CH R/Np lt;/Np n/Ny amp;amp;/Np S_R/Np ==/Np S_R/Np -/CH L/Ny )/CH R/Np ++/Np ;/CH Z/Y i/M =/CH R/Np -/CH L/Ny ;/CH R/Np --/Np ;/CH else/Np int/Np k/N =/CH i/M -/CH L/Ny ;/CH if/Np (/CH Z/Y k/N lt;/Np R/Np -/CH i/M +/CH 1/M )/CH Z/Y i/M =/CH Z/Y k/N ;/CH else/Np L/Ny =/CH i/M ;/CH while/Np (/CH R/Np lt;/Np n/Ny amp;amp;/Np S_R/Np ==/Np S_R/Np -/CH L/Ny )/CH R/Np ++/Np ;/CH Z/Y i/M =/CH R/Np -/CH L/Ny ;/CH R/Np --/Np ;/CH Áp_dụng/V VOJ/Np -/CH SUBSTR/Np Có_thể/R dùng/V ZFuntion/Np để/E giải/N bài/N này/P ./CH\nTa/P tạo/V ra/V một/M chuỗi/N S=B+A/Np ,/CH sao/P đó/P xây_dựng/V mảng/N Z/Y ./CH\nNhững/L vị_trí/N có/V Z_i/Np \\ge/Np Length(B)/Np (Với/Np Length(B)/Np \\le/Np i/M lt;/Np Length(A)+Length(B))/Np là/V vị_trí/N tương_ứng/V của/E B/Ni trong/E A/Ni ./CH\n\n", "title": "Z Algorithm\n", "link": "http://vnoi.info/wiki/translate/codeforces/z-algo\n"}