{"content": "Tác_giả : Lê_Khắc_Minh_Tuệ Chỉnh_sửa : Nguyễn_RR Thành_Trung , Phạm_Văn_Hạnh Table of_Contents Giới_thiệu Hoàn_cảnh Phát_biểu bài_toán Thuật_toán : Mục_đích bài viết Thuật_toán Hash Ký_hiệu Mô_tả thuật_toán Mã chương_trình Đánh_giá Chi_tiết cài_đặt 1 .\nChọn số_nguyên_tố cho hệ cơ_số và modulo 2 .\nChọn hệ cơ_số 3 .\nChọn modulo 4 .\nHash tràn số và Hash có MOD 5 .\nMột_số lời_khuyên nho_nhỏ Ứng_dụng Longest palindrome substring k-th alphabetical cyclic Longest substring and appear at least k times Đánh_giá độ_chính_xác Trường_hợp 1 Trường_hợp 2 Tổng_kết Thuật_toán Cài_đặt Ưu_điểm Nhược_điểm Bài_tập áp_dụng Các nguồn tham_khảo Giới_thiệu Hoàn_cảnh Một lớp những bài_toán rất được quan_tâm trong khoa_học máy_tính nói_chung và lập_trình thi_cử nói_riêng , đó là xử_lý xâu_chuỗi .\nTrong lớp bài_toán này , người_ta thường rất hay phải đối_mặt với một bài_toán : tìm_kiếm xâu_chuỗi .\nPhát_biểu bài_toán Cho một đoạn văn_bản , gồm m ký_tự .\nCho một đoạn mẫu , gồm n ký_tự .\nMáy_tính cần trả_lời câu_hỏi : đoạn mẫu xuất_hiện bao_nhiêu lần trong đoạn văn_bản và chỉ ra các_vị trí xuất_hiện đó .\nThuật_toán : Có rất nhiều thuật_toán có_thể giải_quyết bài_toán này .\nNgười viết xin tóm_tắt 2 thuật_toán phổ_biến được dùng trong các kì_thi lập_trình : Brute-force : Với một_cách tiếp_cận trực_tiếp , chúng_ta có_thể thu được thuật_toán để giải .\nTuy_nhiên độ phực tạp của nó là rất lớn trong trường_hợp xấu nhất .\nThuật_toán brute-force so khớp tất_cả các_vị trí xuất_hiện của đoạn mẫu trong đoạn văn_bản .\nCụ_thể độ phức_tạp cho thuật_toán này là O(mn) .\nKnuth-Morris-Pratt : Hay còn được viết tắt là KMP , được phát_minh vào năm 1974 , bởi Donald_Knuth , Vaughan_Pratt và James_H .\nMorris .\nThuật_toán này sử_dụng một correction-array , là một thuật_toán rất hiệu_quả , có độ phức_tạp là O(m + n) .\nMục_đích bài viết Trong bài viết này , người viết chỉ tập_trung vào thuật_toán Hash (Tên chuẩn của thuật_toán này là Rabin–Karp hoặc Rolling_Hash , tuy_nhiên ở Việt_Nam thường được gọi_là Hash) .\nTheo_như bản_thân người viết đánh_giá , đây là thuật_toán rất hiệu_quả đặc_biệt là trong thi_cử .\nNó hiệu_quả bởi 3 yếu_tố : tốc_độ thực_thi , linh_động trong việc sử_dụng (ứng dụng hiệu quả) và sự đơn_giản trong cài_đặt .\nĐầu_tiên , người viết xin được trình_bày về thuật_toán này .\nSau_đó , người viết sẽ trình_bày một_vài ứng_dụng , cách sử_dụng và phát_triển thuật_toán Hash trong các bài_toán tin_học .\nThuật_toán Hash Ký_hiệu Tập_hợp các chữ_cái được sử_dụng : \\Sigma Đoạn con từ i đến j của một xâu s : si . . j Đoạn văn_bản : T1 . . m Đoạn mẫu : P1 . . n Chúng_ta cần tìm_ra tất_cả các_vị trí i (1 \\le i \\le m − n + 1) thỏa_mãn : Ti . . i+n−1 = P .\nMô_tả thuật_toán Để đơn_giản , giả_sử rằng \\Sigma = a , b , . . . , z (nói cách khác , \\Sigma chỉ gồm các chữ_cái in thường) .\nĐể biểu_diễn một xâu , thay_vì dùng chữ_cái , chúng_ta sẽ chuyển sang biểu_diễn dạng số .\nVí_dụ : xâu aczd được viết dưới dạng số_là một dãy gồm 4 số : (1 , 3 , 26 , 4) .\nNhư_vậy , một xâu được biểu_diễn dưới dạng một_số ở hệ cơ_số base với base gt; 26 .\nTừ_đây suy ra , 2 xâu bằng_nhau khi và chỉ khi biểu_diễn của 2 xâu ở hệ cơ_số 10 giống nhau .\nLưu_ý : Ở đây mình đổi chữ a thành số 1 chứ không_phải số 0 .\nĐây là chi_tiết vô_cùng quan_trọng , để tránh 2 xâu : abc và bc bằng_nhau khi đổi ra số .\nBạn có_thể đọc thêm chi_tiết ở phần Chi_tiết cài_đặt .\nThông_thường ta chọn base là một_số nguyên_tố .\nMình sẽ giải_thích thêm trong phần Chi_tiết cài_đặt .\nĐây chính là tư_tưởng của thuật_toán : đổi 2 xâu từ hệ cơ_số base ra hệ cơ_số 10 , rồi đem so_sánh ở hệ cơ_số 10 .\nTuy_nhiên , chúng_ta nhận_thấy rằng , khi đổi 1 xâu ra biểu_diễn ở hệ cơ_số 10 , biểu_diễn này có_thể rất lớn và nằm ngoài phạm_vi lưu_trữ số_nguyên của máy_tính .\nĐể khắc_phục điều này , chúng_ta chuyển sang so_sánh 2 biểu_diễn của 2 xâu ở hệ cơ_số 10 sau khi lấy phần dư cho một_số nguyên đủ lớn .\nCụ_thể hơn : nếu biểu_diễn trong hệ_thập_phân của xâu a là x và biểu_diễn trong hệ_thập_phân của xâu b là y , chúng_ta sẽ coi a bằng b ‘khi và chỉ khi’ x \\bmod MOD = y \\bmod MOD trong đó MOD là một_số nguyên đủ lớn .\nLưu_ý : Lý_do chọn MOD là số_nguyên_tố được giải_thích thêm trong phần Chi_tiết cài_đặt .\nDễ_dàng nhận_thấy việc so_sánh x \\bmod MOD với y \\bmod MOD rồi kết_luận a có bằng với b hay_không là sai .\nx \\bmod MOD = y \\bmod MOD chỉ là điều_kiện_cần để a bằng b chứ chưa phải_điều kiện đủ .\nTuy_nhiên , chúng_ta sẽ chấp_nhận lập_luận sai này trong thuật_toán Hash .\nVà coi điều_kiện_cần như điều_kiện_đủ .\nTrên thực_tế , lập_luận sai này có_thể dẫn đến kết_quả sai nếu bạn không hiểu rõ mình đang làm_gì .\nĐể hiểu rõ về tỉ_lệ sai của thuật_toán Hash , các bạn_đọc thêm phần Đánh_giá độ_chính_xác .\nPhần Chi_tiết cài_đặt cũng nói thêm về cách tránh bị sai_số khi cài_đặt Hash .\nĐể đơn_giản trong việc trình_bày tiếp thuật_toán , chúng_ta sẽ gọi biểu_diễn của một xâu trong hệ_thập_phân sau khi lấy phần dư cho MOD là mã_Hash của xâu đó .\nNhắc_lại , 2 xâu bằng_nhau ‘khi và chỉ khi’ mã_Hash của 2 xâu bằng_nhau .\nTrở_lại bài_toán ban_đầu , chúng_ta cần chỉ ra P xuất_hiện ở những vị_trí nào trong T .\nĐể làm được_việc này , chúng_ta chỉ_cần duyệt qua mọi vị_trí xuất_phát có_thể của P trong T .\nGiả_sử vị_trí đó là i , chúng_ta sẽ kiểm_tra Ti . . i+n−1 có bằng với P hay_không .\nĐể kiểm_tra điều này , chúng_ta cần tính được mã_Hash của đoạn Ti . . i+n−1 và mã_Hash của xâu P .\nĐể tính mã_Hash của xâu P chúng_ta chỉ_cần làm đơn_giản như_sau : const base = 31; hashP = 0 for (i : 1 . .\nn) hashP = (hashP base + Pi - a + 1) mod MOD_Phần khó hơn của thuật_toán Hash là : Tính mã_Hash của một đoạn con Ti . . j của xâu T (1 \\le i \\le j \\le N) .\nĐể hình_dung cho_đơn giản , xét ví_dụ sau : Xét xâu s và biểu_diễn của nó dưới cơ_số base : (4 , 1 , 2 , 5 , 1 , 7 , 8) .\nChúng_ta cần lấy mã_Hash của đoạn con từ phần_tử thứ 3 đến phần_tử thứ 6 , nghĩa_là cần lấy mã_Hash của xâu (2 , 5 , 1 , 7) .\nNhận_thấy , để lấy_được xâu s3 . . 6 , chỉ_cần lấy số s1 . . 6 là (4 , 1 , 2 , 5 , 1 , 7) trừ cho số (s1 . . 2 nhân với base4) là (4 , 1 , 0 , 0 , 0 , 0) ta sẽ thu được (2 , 5 , 1 , 7) .\nĐể cài_đặt ý_tưởng này , chúng_ta cần khởi tạo basex \\bmod MOD với (0 \\le x \\le m) và mã_Hash của tất_cả những tiền_tố của s , cụ_thể là mã_Hash của những xâu s1 . . i với (1 \\le i \\le m) .\npow0 = 1 for (i : 1 . .\nm) powi = (powi-1 base) mod MOD hashT0 = 0 for (i : 1 . .\nm) hashTi = (hashTi-1 base + Ti - a) mod MOD_Trong đoạn code trên , chúng_ta thu được mảng powi (lưu lại basei \\bmod MOD) và mảng hashTi (lưu lại mã_Hash của T1 . . i) .\nĐể lấy mã_Hash của Ti . . j ta viết hàm sau : function getHashT(i , j) : return (hashTj - hashTi - 1 powj - i + 1 + MOD_MOD) mod MOD Bài_toán chính đã được giải_quyết , và đây là chương_trình chính : for (i : 1 . .\nm - n +1) if hashP = getHashT(i , i + n - 1) : print(\"Match position : \" , i) Mã chương_trình Chương_trình sau , tôi viết_bằng ngôn_ngữ C++ , là lời_giải cho bài SUBSTR : typedef long_long ll ; const int base = 31 ; const ll MOD = 1000000003 ; const ll maxn = 1000111 ; using namespace std ; ll POW maxn , hashT maxn ; ll getHashT ( int i , int j ) return ( hashT j - hashT i - 1 POW j - i + 1 + MOD_MOD ) % MOD ; int main () // Input string T , P ; cin gt;gt; T gt;gt; P ; // Initialize int lenT = T .\nsize () , lenP = P .\nsize (); T = \" \" + T ; P = \" \" + P ; POW 0 = 1 ; // Precalculate basei for ( int i = 1 ; i lt;= lenT ; i ++ ) POW i = ( POW i - 1 base ) % MOD ; // Calculate hash value of T1 . . i for ( int i = 1 ; i lt;= lenT ; i ++ ) hashT i = ( hashT i - 1 base + T i - a + 1 ) % MOD ; // Calculate hash value of P ll hashP = 0 ; for ( int i = 1 ; i lt;= lenP ; i ++ ) hashP = ( hashP base + P i - a + 1 ) % MOD ; // Finding substrings of T equal to string P for ( int i = 1 ; i lt;= lenT - lenP + 1 ; i ++ ) if ( hashP == getHashT ( i , i + lenP - 1 )) printf ( \"%d \" , i ); Đánh_giá Độ phức_tạp của thuật_toán là O(m + n) .\nNhưng điều quan_trọng là : chúng_ta có_thể kiểm_tra 2 xâu có giống nhau hay_không trong O(1) .\nĐây là điều tạo nên sự linh_động cho thuật_toán Hash .\nNgoài sự linh_động và tốc_độ thực_thi , chúng_ta có_thể thấy cài_đặt thuật_toán này thực_sự rất đơn_giản nếu so_với các thuật_toán xử_lý xâu khác .\nChi_tiết cài_đặt Trong thuật_toán hash , có hai yếu_tố cần quan_tâm là hệ cơ_số (base) và modulo (mod) .\n1 .\nChọn số_nguyên_tố cho hệ cơ_số và modulo Ý_tưởng của thuật_toán Hash là dựa trên một ngộ_nhận sai_lầm nhưng xảy_ra sai_sót với xác_suất vô_cùng nhỏ : a \\bmod M = b \\bmod M lt;=gt; a = b .\nĐể xác_suất xảy_ra sai là 1/M cho một truy_vấn , các bạn cần chọn hệ cơ_số và modulo thỏa_mãn đồng_thời : base là số_nguyên_tố lớn hơn các chữ_cái của xâu S .\nMOD là số_nguyên_tố .\nPhần chứng_minh sai_số bạn có_thể đọc thêm trong blog rng_58 , tuy_nhiên phần chứng_minh rất phức_tạp nên mình sẽ không trình_bày ở đây .\n2 .\nChọn hệ cơ_số Mình khuyến_khích các bạn chọn hệ cơ_số gt; 256 (Mình thường chọn là số_nguyên_tố 311) .\nNếu bạn chọn hệ cơ_số là 31 , bạn chỉ làm_việc với xâu gồm toàn các kí_tự in thường , và phải \"mã hóa\" các kí_tự từ a đến z thành các số_từ 1 đến 26 .\nĐiều này khiến code của bạn bị dài .\nNếu bài_toán cho xâu có các kí_tự A . . . Z , a . . z và 0 . . . 9 , việc bạn mã_hóa chúng thành các số_từ 1 đến 64 là phức_tạp và không cần_thiết .\nChưa kể , nếu bạn quên mất không +1 và mã_hoá a thành 0 là hành_động tự treo_cổ vì rất dễ bị hack .\nNếu bạn chọn hệ cơ_số gt; 256 , bạn chỉ_cần dùng mã ASCII của các kí_tự là xong , và lại tránh bị hack .\n3 .\nChọn modulo Nếu bạn không hiểu rõ về cách đánh_giá độ_chính_xác của thuật Hash (trình bày ở mục Đánh_giá độ_chính_xác ) , bạn chỉ_cần chọn 3-4 số_nguyên_tố khác_nhau làm MOD .\nBạn có_thể tham_khảo code của Phạm_Văn_Hạnh .\nTuy_nhiên các bạn cũng_nên lưu_ý là dùng nhiều MOD quá cũng làm chương_trình chạy chậm đi .\n4 .\nHash tràn số và Hash có MOD_Trên thực_tế , khi cài_đặt Hash sử_dụng nhiều phép mod sẽ làm chương_trình chạy chậm .\nVì_vậy , để tăng_tốc_độ , người_ta thường cài_đặt với MOD = 264 .\nDo_đó , nếu sử_dụng kiểu dữ_liệu số 64-bit , ta không cần_dùng phép mod mà cứ để các phép_tính tràn số .\nKĩ_thuật này được gọi_là Hash tràn số .\nTuy_nhiên khi cài_đặt như_vậy có_một vài chú_ý : Việc sử_dụng MOD không_phải là số_nguyên_tố (và hơn_nữa lại là 1 số cố định) khiến cho hàm Hash không đủ tốt .\nNếu test được sinh ngẫu_nhiên , thì nó không có_vấn_đề gì cả .\nNhưng ở trên Codeforces , vì những người thi cùng có_thể \"hack\" code của bạn bằng test tự_sinh , nên bạn hầu_như_không thể AC các bài Hash với Hash tràn số .\nBạn có_thể đọc thêm về cách sinh test giết Hash tràn số ở đây .\nCách giải_quyết là dùng hash tràn số kết_hợp với một MOD khác .\nNếu dùng Pascal , cần tắt báo tràn số ( Q- ) , nếu_không chương_trình sẽ chạy bị lỗi .\n5 .\nMột_số lời_khuyên nho_nhỏ Chỉ so_sánh mã_hash của hai xâu có cùng độ_dài .\nHiển_nhiên , hai xâu kí_tự không_cùng độ_dài thì không_bằng nhau .\nĐiều này có_thể giảm xác_suất rủi_ro khi hash một modulo đáng_kể .\nỨng_dụng Như đã đề_cập ở trên , thuật_toán này sẽ có trường_hợp chạy sai .\nTất_nhiên , bên_cạnh việc sử_dụng Hash , còn có nhiều thuật_toán xử_lý xâu_chuỗi khác , mang_lại sự chính_xác tuyệt_đối .\nTôi tạm gọi những thuật_toán đó là ‘thuật toán chuẩn’ .\nViệc cài_đặt ‘thuật toán chuẩn’ có_thể mang_lại một tốc_độ chạy chương_trình cao hơn , độ_chính_xác của chương_trình lớn hơn .\nTuy_nhiên , người_làm bài sẽ phải trả_giá là sự phức_tạp khi cài_đặt các ‘thuật toán chuẩn’ đó .\nSử_dụng Hash không chỉ giúp người_làm bài dễ_dàng cài_đặt hơn mà quan_trọng ở chỗ : Hash có_thể làm được những việc mà ‘thuật toán chuẩn’ không làm được .\nSau_đây , tôi sẽ xét một_vài ví_dụ để chứng_minh điều này .\nLongest palindrome substring Bài_toán đặt ra như_sau : Bạn được cho một xâu s độ_dài n (n \\le 50 , 000) .\nBạn cần tìm độ_dài của xâu đối_xứng dài nhất gồm các kí_tự liên_tiếp trong s .\n(Xâu đối_xứng là xâu đọc từ 2 chiều giống nhau) .\nMột ‘thuật toán chuẩn’ không_thể áp_dụng vào bài_toán này đó là thuật_toán KMP .\nNgoài_KMP ra , có 2 ‘thuật toán chuẩn’ có_thể áp_dụng được .\nThuật_toán thứ nhất đó là sử_dụng thuật_toán Manacher để tính bán_kính đối_xứng tại tất_cả vị_trí trong xâu .\nThuật_toán thứ 2 đó là sử_dụng Suffix_Array và LCP (Longest Common_Prefix) cho xâu được nối bởi s và xâu s viết theo thứ_tự ngược_lại .\n2 thuật_toán này đều không dễ , và nằm ngoài phạm_vi bài viết , nên tôi chỉ nêu sơ_qua mà không đi_vào chi_tiết .\nBây_giờ , chúng_ta sẽ xét thuật_toán ‘không chuẩn’ là thuật_toán Hash .\nĐể đơn_giản , chúng_ta xét trường_hợp độ_dài của xâu đối_xứng là lẻ (trường hợp chẵn xử_lý hoàn_toàn tương tự) .\nGiả_sử xâu đối_xứng độ_dài lẻ dài nhất có độ_dài là l .\nDễ thấy , trong xâu s tồn_tại xâu đối_xứng độ_dài l−2 , l−4 , . . .\nTuy_nhiên , xâu s không tồn tài xâu đối_xứng độ_dài l+2 , l+4 , . . .\nNhư_vậy , s thỏa_mãn tính_chất chia nhị_phân .\nChúng_ta sẽ chia nhị_phân để tìm độ_dài lớn nhất có_thể .\nVới mỗi độ_dài l , chúng_ta cần kiểm_tra xem trong xâu có tồn_tại một xâu con là xâu đối_xứng độ_dài l hay_không .\nĐể làm_việc này , ta duyệt qua tất_cả tất_cả các xâu con độ_dài l trong s .\nBài_toán còn_lại là : kiểm_tra xem si . . j với (1 \\le i \\le j \\le m; (j−i+1) \\bmod 2 = 1) có_phải là xâu đối_xứng hay_không .\nCách làm như_sau .\nGọi t là xâu s viết theo thứ_tự ngược_lại .\nBằng thuật_toán Hash , chúng_ta có_thể kiểm_tra được một xâu con nào_đó của t có bằng một xâu con nào_đó của s hay_không .\nNhư_vậy , chúng_ta cần kiểm_tra si . . k có bằng tn−j+1 . . n−k+1 hay_không với k là tâm_đối_xứng , nói_cách_khác k = (i+j)/2 .\nNhư_vậy bài_toán đã được giải .\nĐộ phức_tạp cho cách làm này là O(n log(n)) .\nk-th alphabetical cyclic Bài_toán đặt ra như_sau : Bạn được cho một dãy a_1 , a_2 , . . .\n, a_n (n \\le 50 , 000) .\nSắp_xếp n hoán_vị vòng_tròn của dãy này theo thứ_tự từ_điển .\nCụ_thể , các hoán_vị vòng_quanh của dãy này là (a_1 , a_2 , . . .\n, a_n) , (a_2 , a_3 , . . . , a_n , a_1) , (a_3 , a_4 , . . . , a_n , a_1 , a_2) , . . .\nDãy này có thứ_tự từ_điển nhỏ hơn dãy kia nếu số đầu_tiên khác_nhau của dãy này nhỏ hơn dãy kia .\nYêu_cầu bài_toán là : In ra dãy có thứ_tự từ_điển lớn thứ k .\nBài_toán này có_thể được giải bằng Suffix_Array , tuy_nhiên cách cài_đặt phức_tạp và không_phải trọng_tâm của bài viết nên tôi sẽ không nêu ra ở đây .\nNếu tiếp_cận một_cách trực_tiếp , chúng_ta sẽ sinh_ra tất_cả các dãy hoán_vị vòng_quanh , rồi sau_đó dùng một thuật_toán sắp_xếp để sắp_xếp lại chúng theo thứ_tự từ_điển , cuối_cùng chỉ việc in ra dãy thứ k sau khi sắp_xếp .\nTuy_nhiên độ phức_tạp của thuật_toán này là rất lớn và không_thể đáp_ứng được yêu_cầu về thời_gian .\nCụ_thể , cách này có độ phức_tạp là O(n2 log(n)) , đây là tích của độ phức_tạp của sắp_xếp và độ phức_tạp của mỗi phép so_sánh dãy .\nVẫn giữ tư_tưởng là sắp_xếp lại tất_cả các dãy hoán_vị vòng_quanh rồi in ra dãy đứng ở vị_trí thứ k , chúng_ta cố_gắng cải_tiến_độ phức_tạp của việc so_sánh thứ_tự từ_điển của 2 dãy .\nNhắc_lại định_nghĩa về thứ_tự từ_điển của 2 dãy : Xét 2 dãy a và b có cùng số phần_tử .\nGọi ví trí thứ i là vị_trí_đầu tiên từ trái sang mà a_i \\ne b_i .\na lt; b \\Leftrightarrow a_i lt; b_i .\nNhư_vậy , ta phải tìm đoạn tiền_tố giống nhau dài nhất của a và b , rồi so_sánh kí_tự tiếp_theo .\nĐể tìm được đoạn tiền_tố giống nhau dài nhất , ta có_thể sử_dụng Hash kết_hợp với chia nhị_phân .\nĐể giải được bài này , cần sử_dụng thêm một kỹ_thuật nhỏ nữa : Thay_vì sinh_ra tất_cả các hoán_vị vòng_quanh , chúng_ta chỉ_cần nhân đôi dãy a lên , dãy mới sẽ có 2n phần_tử : (a_1 , a_2 , . . . , a_n , a_1 , a_2 , . . . , a_n) .\nMột hoán_vị vòng_quanh sẽ là một dãy con liên_tiếp độ_dài n của dãy nhân đôi này .\nTừ_đó ta thu được thuật_toán với độ phức_tạp O(nlog2(n))_Longest substring and appear at least k times Bài_toán đặt ra như_sau : Bạn được cho xâu s độ_dài n (n \\le 50 , 000) , bạn cần tìm_ra xâu con của s có độ_dài lớn nhất , và xâu con này xuất_hiện ít_nhất k lần .\nBài_toán này có_thể được giải bằng Suffix_Array , tuy_nhiên cách cài_đặt phức_tạp và không_phải trọng_tâm của bài viết nên tôi sẽ không nêu ra ở đây .\nTiếp_tục bàn đến thuật_toán Hash để thay_thế thuật_toán chuẩn .\nNhận_xét rằng , giả_sử độ_dài lớn nhất tìm được là l , thì với mọi l′ \\le l , luôn tồn_tại xâu có độ_dài l′ xuất_hiện ít_nhất k lần .\nTuy_nhiên , với mọi l′ gt; l , không tồn_tại xâu có độ_dài l′ xuất_hiện ít_nhất k lần (do l đã_là lớn nhất) .\nNhư_vậy , l thỏa_mãn tính_chất chia nhị_phân .\nChúng_ta có_thể áp_dụng thuật_toán tìm_kiếm nhị_phân để tìm_ra l lớn nhất .\nBây_giờ , với mỗi l khi đang chia nhị_phân , chúng_ta sẽ phải kiểm_tra liệu có tồn_tại xâu con nào xuất_hiện ít_nhất k lần hay_không .\nĐiều này được làm rất đơn_giản , bằng cách sinh mọi mã_Hash của các xâu con độ_dài k trong s .\nSau_đó sắp_xếp lại các mã_Hash này theo chiều tăng dần , rồi kiếm tra xem có_một đoạn liên_tiếp các mã_Hash nào giống nhau độ_dài l hay_không .\nNhư_vậy , độ phức_tạp để chia nhị_phân là O(log(n)) , độ phức_tạp của sắp_xếp là O(n log(n)) , vậy độ phức_tạp của cả bài_toán là O(n log2(n) ) .\nĐánh_giá độ_chính_xác Thông_thường , khi sử_dụng Hash , ta thường gặp_phải 2 trường_hợp như_sau : Trả_lời Q truy_vấn , mỗi truy_vấn có dạng kiểm_tra 2 đoạn con của 2 xâu có bằng_nhau hay_không Cho_N xâu , kiểm_tra tất_cả các xâu có phân_biệt hay_không .\nGiả_sử_ta chọn MOD là một_số nguyên_tố khoảng 109 , và giả_sử dữ_liệu được sinh ngẫu_nhiên và hàm hash của chúng_ta đủ tốt để Hash của các xâu được phân_bố đều và ngẫu_nhiên .\nTrường_hợp 1 Giả_sử Q khoảng 105 , và bộ test có T = 100 test .\nVới 2 xâu khác_nhau , xác_suất để nó có cùng Hash là xấp_xỉ 1 / 109 .\nNhư_vậy , xác_suất để trả_lời đúng 1 truy_vấn là : 1 - 1 / 109 .\nỞ trường_hợp xấu nhất , ta có Q truy_vấn mà mỗi truy_vấn là một cặp_xâu khác_nhau .\nXác_suất để ta trả_lời đúng tất_cả các truy_vấn là : (1 - 1 / 109)Q .\nXác_suất để ta trả_lời đúng tất_cả các truy_vấn của tất_cả các test là : (1 - 1 / 109)Q T .\nThay số vào , xác_suất để trả_lời đúng tất_cả các truy_vấn là 0 . 9900 , đủ lớn để ta yên_tâm qua tất_cả các test , với điều_kiện test không được sinh dựa trên P .\n(Chú ý nếu bạn đang thi những contest như Topcoder/Codeforces , người khác có_thể đọc được P của bạn và sinh test để challenge code của bạn) .\nTrường_hợp 2 Theo_Birthday_Paradox , ta dễ_dàng thấy rằng , nếu có \\sqrtP = 3104 xâu , xác_suất để 2 xâu bằng_nhau là rất lớn .\nThật_vậy , xác_suất để tất_cả các xâu khác_nhau là : (1 - 1 / 109) (1 - 2 / 109) (1 - 3 / 109) . . .\n(1 - N / 109) .\nVới_N = 30 , 000 , tích trên là 0 . 6376 , nghĩa_là bạn có gần 0 . 40 xác_suất trả_lời sai .\nDo_vậy , bạn bắt_buộc phải dùng nhiều MOD khác_nhau .\nTổng_kết Thuật_toán Ý_tưởng thuật_toán Hash dựa trên việc đổi từ hệ cơ_số lớn sang hệ_thập_phân , so_sánh hai số_thập_phân lớn bằng cách so_sánh phần dư của chúng với một_số đủ lớn .\nCài_đặt Khi cài_đặt Hash , ta cần chọn : Hệ cơ_số MOD_Với những trang_web mà người khác có_thể đọc code bạn rồi tìm test sai (như Codeforces , Topcoder) , nếu Hash tràn số hoặc MOD là 1 số_nguyên biết trước , có_thể sinh test để làm code bạn sai .\nVới những kỳ thi như HSG_QG , IOI , ACM , và các Online_Judge , thông_thường sẽ không có những test như_vậy .\nTóm_lại , khi chọn MOD và hệ cơ_số ta làm như_sau : Chọn hệ cơ_số là số_nguyên_tố lớn hơn số_lượng ký_tự (ví dụ 31 , 71) .\nChọn_MOD đủ lớn theo nguyên_tắc đã phân_tích ở phần Đánh_giá độ_chính_xác .\nNếu là Topcoder hoặc Codeforces , dùng kết_hợp Hash tràn số và 1 MOD đủ lớn .\nNếu_không phải Topcoder hay Codeforces , có_thể dùng Hash tràn số .\nNếu_MOD = 264 chưa đủ lớn thì dùng thêm 1 MOD nữa .\nƯu_điểm Ưu_điểm của thuật_toán Hash là cài_đặt rất dễ_dàng .\nLinh_động trong ứng_dụng và có_thể thay_thế các thuật_toán chuẩn ‘hầm hố’ khác .\nNhược_điểm Nhược_điểm của thuật_toán Hash là tính chính_xác .\nMặc_dù rất khó sinh test để có_thể làm_cho thuật_toán chạy sai , nhưng không_phải là không_thể .\nVì_vậy , để nâng_cao tính chính_xác của thuật_toán , người_ta thường_dùng nhiều modulo khác_nhau để so_sánh mã_Hash (ví dụ như dùng 3 modulo một lúc) .\nBài_tập áp_dụng VOJ - SUBSTR_VOJ - PALINY_VOJ - DTKSUB_VOJ - DTCSTR_VOJ - TWOOPERS_VOJ - VOSTR_SGU 426 Các nguồn tham_khảo Wikipedia - String_Searching_Algorithm_Wikipedia - KMP_Wikipedia - Rabin_Karp_Wikipedia - Alphabetical_Order\n", "tagged": "Tác_giả/N :/CH Lê_Khắc_Minh_Tuệ/Np Chỉnh_sửa/V :/CH Nguyễn_RR/Np Thành_Trung/Np ,/CH Phạm_Văn_Hạnh/Np Table/Np of_Contents/Np Giới_thiệu/V Hoàn_cảnh/N Phát_biểu/V bài_toán/N Thuật_toán/N :/CH Mục_đích/N bài/N viết/V Thuật_toán/N Hash/Np Ký_hiệu/Np Mô_tả/V thuật_toán/N Mã/N chương_trình/N Đánh_giá/V Chi_tiết/N cài_đặt/V 1/M ./CH\nChọn/V số_nguyên_tố/Np cho/E hệ/N cơ_số/N và/Cc modulo/Np 2/M ./CH\nChọn/V hệ/N cơ_số/N 3/M ./CH\nChọn/V modulo/Np 4/M ./CH\nHash/Np tràn/V số/N và/Cc Hash/Np có/V MOD/Np 5/M ./CH\nMột_số/L lời_khuyên/Np nho_nhỏ/A Ứng_dụng/V Longest/Np palindrome/Np substring/Np k-th/Np alphabetical/Np cyclic/Np Longest/Np substring/Np and/Np appear/Np at/Np least/Np k/N times/Np Đánh_giá/V độ_chính_xác/Np Trường_hợp/N 1/M Trường_hợp/N 2/M Tổng_kết/V Thuật_toán/N Cài_đặt/V Ưu_điểm/N Nhược_điểm/N Bài_tập/Np áp_dụng/V Các/L nguồn/N tham_khảo/V Giới_thiệu/V Hoàn_cảnh/N Một/M lớp/N những/L bài_toán/N rất/R được/V quan_tâm/V trong/E khoa_học/N máy_tính/N nói_chung/X và/Cc lập_trình/V thi_cử/V nói_riêng/X ,/CH đó/P là/V xử_lý/V xâu_chuỗi/V ./CH\nTrong/E lớp/N bài_toán/N này/P ,/CH người_ta/P thường/R rất/R hay/Cc phải/V đối_mặt/V với/E một/M bài_toán/N :/CH tìm_kiếm/V xâu_chuỗi/V ./CH\nPhát_biểu/V bài_toán/N Cho/E một/M đoạn/Nc văn_bản/N ,/CH gồm/V m/Nu ký_tự/Np ./CH\nCho/E một/M đoạn/Nc mẫu/N ,/CH gồm/V n/Ny ký_tự/Np ./CH\nMáy_tính/N cần/V trả_lời/V câu_hỏi/N :/CH đoạn/Nc mẫu/N xuất_hiện/V bao_nhiêu/P lần/N trong/E đoạn/Nc văn_bản/N và/Cc chỉ/R ra/V các_vị/Np trí/Np xuất_hiện/V đó/P ./CH\nThuật_toán/N :/CH Có/V rất/R nhiều/A thuật_toán/N có_thể/R giải_quyết/V bài_toán/N này/P ./CH\nNgười/N viết/V xin/V tóm_tắt/V 2/M thuật_toán/N phổ_biến/V được/V dùng/V trong/E các/L kì_thi/Np lập_trình/V :/CH Brute-force/Np :/CH Với/E một_cách/N tiếp_cận/V trực_tiếp/A ,/CH chúng_ta/P có_thể/R thu/V được/V thuật_toán/N để/E giải/N ./CH\nTuy_nhiên/C độ/N phực/Np tạp/A của/E nó/P là/V rất/R lớn/A trong/E trường_hợp/N xấu/A nhất/A ./CH\nThuật_toán/N brute-force/Np so/V khớp/N tất_cả/P các_vị/Np trí/Np xuất_hiện/V của/E đoạn/Nc mẫu/N trong/E đoạn/Nc văn_bản/N ./CH\nCụ_thể/A độ/N phức_tạp/A cho/E thuật_toán/N này/P là/V O(mn)/Np ./CH\nKnuth-Morris-Pratt/Np :/CH Hay/Cc còn/R được/V viết/V tắt/V là/V KMP/Np ,/CH được/V phát_minh/V vào/E năm/N 1974/M ,/CH bởi/E Donald_Knuth/Np ,/CH Vaughan_Pratt/Np và/Cc James_H/Np ./CH\nMorris/Np ./CH\nThuật_toán/N này/P sử_dụng/V một/M correction-array/Np ,/CH là/V một/M thuật_toán/N rất/R hiệu_quả/N ,/CH có/V độ/N phức_tạp/A là/V O(m/Np +/CH n)/Np ./CH\nMục_đích/N bài/N viết/V Trong/E bài/N viết/V này/P ,/CH người/N viết/V chỉ/R tập_trung/V vào/E thuật_toán/N Hash/Np (Tên/Np chuẩn/N của/E thuật_toán/N này/P là/V Rabin–Karp/Np hoặc/Cc Rolling_Hash/Np ,/CH tuy_nhiên/C ở/E Việt_Nam/N thường/R được/V gọi_là/V Hash)/Np ./CH\nTheo_như/Np bản_thân/N người/N viết/V đánh_giá/V ,/CH đây/P là/V thuật_toán/N rất/R hiệu_quả/N đặc_biệt/A là/V trong/E thi_cử/V ./CH\nNó/P hiệu_quả/N bởi/E 3/M yếu_tố/N :/CH tốc_độ/N thực_thi/V ,/CH linh_động/Np trong/E việc/N sử_dụng/V (ứng/Np dụng/V hiệu/N quả)/Np và/Cc sự/N đơn_giản/A trong/E cài_đặt/V ./CH\nĐầu_tiên/A ,/CH người/N viết/V xin/V được/V trình_bày/V về/E thuật_toán/N này/P ./CH\nSau_đó/Np ,/CH người/N viết/V sẽ/R trình_bày/V một_vài/L ứng_dụng/V ,/CH cách/N sử_dụng/V và/Cc phát_triển/V thuật_toán/N Hash/Np trong/E các/L bài_toán/N tin_học/N ./CH\nThuật_toán/N Hash/Np Ký_hiệu/Np Tập_hợp/N các/L chữ_cái/Np được/V sử_dụng/V :/CH \\Sigma/Np Đoạn/Nc con/Nc từ/E i/M đến/E j/Np của/E một/M xâu/Np s/Y :/CH si/Ny ./CH ./CH j/Np Đoạn/Nc văn_bản/N :/CH T1/M ./CH ./CH m/Nu Đoạn/Nc mẫu/N :/CH P1/Np ./CH ./CH n/Ny Chúng_ta/P cần/V tìm_ra/Np tất_cả/P các_vị/Np trí/Np i/M (1/Np \\le/Np i/M \\le/Np m/Nu −/Np n/Ny +/CH 1)/Np thỏa_mãn/V :/CH Ti/Ny ./CH ./CH i+n−1/Np =/CH P/Ny ./CH\nMô_tả/V thuật_toán/N Để/E đơn_giản/A ,/CH giả_sử/Np rằng/C \\Sigma/Np =/CH a/Ni ,/CH b/Ni ,/CH ./CH ./CH ./CH ,/CH z/Y (nói/Np cách/N khác/A ,/CH \\Sigma/Np chỉ/R gồm/V các/L chữ_cái/Np in/V thường)/Np ./CH\nĐể/E biểu_diễn/V một/M xâu/Np ,/CH thay_vì/X dùng/V chữ_cái/Np ,/CH chúng_ta/P sẽ/R chuyển/V sang/V biểu_diễn/V dạng/N số/N ./CH\nVí_dụ/C :/CH xâu/Np aczd/Np được/V viết/V dưới/E dạng/N số_là/C một/M dãy/Nc gồm/V 4/M số/N :/CH (1/Np ,/CH 3/M ,/CH 26/M ,/CH 4)/Np ./CH\nNhư_vậy/X ,/CH một/M xâu/Np được/V biểu_diễn/V dưới/E dạng/N một_số/L ở/E hệ/N cơ_số/N base/Np với/E base/Np gt;/Np 26/M ./CH\nTừ_đây/Np suy/V ra/V ,/CH 2/M xâu/Np bằng_nhau/Np khi/N và/Cc chỉ/R khi/N biểu_diễn/V của/E 2/M xâu/Np ở/E hệ/N cơ_số/N 10/M giống/N nhau/N ./CH\nLưu_ý/V :/CH Ở/E đây/P mình/P đổi/V chữ/N a/Ni thành/V số/N 1/M chứ/C không_phải/Np số/N 0/M ./CH\nĐây/P là/V chi_tiết/N vô_cùng/R quan_trọng/A ,/CH để/E tránh/V 2/M xâu/Np :/CH abc/Ny và/Cc bc/Np bằng_nhau/Np khi/N đổi/V ra/V số/N ./CH\nBạn/N có_thể/R đọc/V thêm/V chi_tiết/N ở/E phần/N Chi_tiết/N cài_đặt/V ./CH\nThông_thường/A ta/P chọn/V base/Np là/V một_số/L nguyên_tố/N ./CH\nMình/P sẽ/R giải_thích/V thêm/V trong/E phần/N Chi_tiết/N cài_đặt/V ./CH\nĐây/P chính/T là/V tư_tưởng/N của/E thuật_toán/N :/CH đổi/V 2/M xâu/Np từ/E hệ/N cơ_số/N base/Np ra/V hệ/N cơ_số/N 10/M ,/CH rồi/C đem/V so_sánh/V ở/E hệ/N cơ_số/N 10/M ./CH\nTuy_nhiên/C ,/CH chúng_ta/P nhận_thấy/Np rằng/C ,/CH khi/N đổi/V 1/M xâu/Np ra/V biểu_diễn/V ở/E hệ/N cơ_số/N 10/M ,/CH biểu_diễn/V này/P có_thể/R rất/R lớn/A và/Cc nằm/V ngoài/E phạm_vi/N lưu_trữ/Np số_nguyên/Np của/E máy_tính/N ./CH\nĐể/E khắc_phục/V điều/N này/P ,/CH chúng_ta/P chuyển/V sang/V so_sánh/V 2/M biểu_diễn/V của/E 2/M xâu/Np ở/E hệ/N cơ_số/N 10/M sau/E khi/N lấy/V phần/N dư/A cho/E một_số/L nguyên/A đủ/A lớn/A ./CH\nCụ_thể/A hơn/A :/CH nếu/C biểu_diễn/V trong/E hệ_thập_phân/Np của/E xâu/Np a/Ni là/V x/CH và/Cc biểu_diễn/V trong/E hệ_thập_phân/Np của/E xâu/Np b/Ni là/V y/N ,/CH chúng_ta/P sẽ/R coi/V a/Ni bằng/E b/Ni ‘khi/Np và/Cc chỉ/R khi’/Np x/CH \\bmod/Np MOD/Np =/CH y/N \\bmod/Np MOD/Np trong/E đó/P MOD/Np là/V một_số/L nguyên/A đủ/A lớn/A ./CH\nLưu_ý/V :/CH Lý_do/N chọn/V MOD/Np là/V số_nguyên_tố/Np được/V giải_thích/V thêm/V trong/E phần/N Chi_tiết/N cài_đặt/V ./CH\nDễ_dàng/A nhận_thấy/Np việc/N so_sánh/V x/CH \\bmod/Np MOD/Np với/E y/N \\bmod/Np MOD/Np rồi/C kết_luận/V a/Ni có/V bằng/E với/E b/Ni hay_không/Np là/V sai/A ./CH\nx/CH \\bmod/Np MOD/Np =/CH y/N \\bmod/Np MOD/Np chỉ/R là/V điều_kiện_cần/Np để/E a/Ni bằng/E b/Ni chứ/C chưa/R phải_điều/Np kiện/V đủ/A ./CH\nTuy_nhiên/C ,/CH chúng_ta/P sẽ/R chấp_nhận/V lập_luận/N sai/A này/P trong/E thuật_toán/N Hash/Np ./CH\nVà/Cc coi/V điều_kiện_cần/Np như/C điều_kiện_đủ/Np ./CH\nTrên/E thực_tế/N ,/CH lập_luận/N sai/A này/P có_thể/R dẫn/V đến/E kết_quả/N sai/A nếu/C bạn/N không/R hiểu/V rõ/A mình/P đang/R làm_gì/X ./CH\nĐể/E hiểu/V rõ/A về/E tỉ_lệ/N sai/A của/E thuật_toán/N Hash/Np ,/CH các/L bạn_đọc/N thêm/V phần/N Đánh_giá/V độ_chính_xác/Np ./CH\nPhần/N Chi_tiết/N cài_đặt/V cũng/R nói/V thêm/V về/E cách/N tránh/V bị/V sai_số/Np khi/N cài_đặt/V Hash/Np ./CH\nĐể/E đơn_giản/A trong/E việc/N trình_bày/V tiếp/V thuật_toán/N ,/CH chúng_ta/P sẽ/R gọi/V biểu_diễn/V của/E một/M xâu/Np trong/E hệ_thập_phân/Np sau/E khi/N lấy/V phần/N dư/A cho/E MOD/Np là/V mã_Hash/Np của/E xâu/Np đó/P ./CH\nNhắc_lại/Np ,/CH 2/M xâu/Np bằng_nhau/Np ‘khi/Np và/Cc chỉ/R khi’/Np mã_Hash/Np của/E 2/M xâu/Np bằng_nhau/Np ./CH\nTrở_lại/V bài_toán/N ban_đầu/N ,/CH chúng_ta/P cần/V chỉ/R ra/V P/Ny xuất_hiện/V ở/E những/L vị_trí/N nào/P trong/E T/Nu ./CH\nĐể/E làm/V được_việc/Np này/P ,/CH chúng_ta/P chỉ_cần/Np duyệt/V qua/V mọi/L vị_trí/N xuất_phát/V có_thể/R của/E P/Ny trong/E T/Nu ./CH\nGiả_sử/Np vị_trí/N đó/P là/V i/M ,/CH chúng_ta/P sẽ/R kiểm_tra/V Ti/Ny ./CH ./CH i+n−1/Np có/V bằng/E với/E P/Ny hay_không/Np ./CH\nĐể/E kiểm_tra/V điều/N này/P ,/CH chúng_ta/P cần/V tính/V được/V mã_Hash/Np của/E đoạn/Nc Ti/Ny ./CH ./CH i+n−1/Np và/Cc mã_Hash/Np của/E xâu/Np P/Ny ./CH\nĐể/E tính/V mã_Hash/Np của/E xâu/Np P/Ny chúng_ta/P chỉ_cần/Np làm/V đơn_giản/A như_sau/Np :/CH const/Np base/Np =/CH 31;/Np hashP/Np =/CH 0/M for/Np (i/Np :/CH 1/M ./CH ./CH\nn)/Np hashP/Np =/CH (hashP/Np base/Np +/CH Pi/Np -/CH a/Ni +/CH 1)/Np mod/Np MOD_Phần/Np khó/A hơn/A của/E thuật_toán/N Hash/Np là/V :/CH Tính/V mã_Hash/Np của/E một/M đoạn/Nc con/Nc Ti/Ny ./CH ./CH j/Np của/E xâu/Np T/Nu (1/Np \\le/Np i/M \\le/Np j/Np \\le/Np N)/Np ./CH\nĐể/E hình_dung/V cho_đơn/Np giản/Np ,/CH xét/V ví_dụ/C sau/E :/CH Xét/V xâu/Np s/Y và/Cc biểu_diễn/V của/E nó/P dưới/E cơ_số/N base/Np :/CH (4/Np ,/CH 1/M ,/CH 2/M ,/CH 5/M ,/CH 1/M ,/CH 7/M ,/CH 8)/Np ./CH\nChúng_ta/P cần/V lấy/V mã_Hash/Np của/E đoạn/Nc con/Nc từ/E phần_tử/N thứ/N 3/M đến/E phần_tử/N thứ/N 6/M ,/CH nghĩa_là/V cần/V lấy/V mã_Hash/Np của/E xâu/Np (2/Np ,/CH 5/M ,/CH 1/M ,/CH 7)/Np ./CH\nNhận_thấy/Np ,/CH để/E lấy_được/X xâu/Np s3/Np ./CH ./CH 6/M ,/CH chỉ_cần/Np lấy/V số/N s1/Np ./CH ./CH 6/M là/V (4/Np ,/CH 1/M ,/CH 2/M ,/CH 5/M ,/CH 1/M ,/CH 7)/Np trừ/V cho/E số/N (s1/Np ./CH ./CH 2/M nhân/N với/E base4)/Np là/V (4/Np ,/CH 1/M ,/CH 0/M ,/CH 0/M ,/CH 0/M ,/CH 0)/Np ta/P sẽ/R thu/V được/V (2/Np ,/CH 5/M ,/CH 1/M ,/CH 7)/Np ./CH\nĐể/E cài_đặt/V ý_tưởng/N này/P ,/CH chúng_ta/P cần/V khởi/V tạo/V basex/Np \\bmod/Np MOD/Np với/E (0/Np \\le/Np x/CH \\le/Np m)/Np và/Cc mã_Hash/Np của/E tất_cả/P những/L tiền_tố/Np của/E s/Y ,/CH cụ_thể/A là/V mã_Hash/Np của/E những/L xâu/Np s1/Np ./CH ./CH i/M với/E (1/Np \\le/Np i/M \\le/Np m)/Np ./CH\npow0/Np =/CH 1/M for/Np (i/Np :/CH 1/M ./CH ./CH\nm)/Np powi/Np =/CH (powi-1/Np base)/Np mod/Np MOD/Np hashT0/Np =/CH 0/M for/Np (i/Np :/CH 1/M ./CH ./CH\nm)/Np hashTi/Np =/CH (hashTi-1/Np base/Np +/CH Ti/Ny -/CH a)/Np mod/Np MOD_Trong/Np đoạn/Nc code/Np trên/E ,/CH chúng_ta/P thu/V được/V mảng/N powi/Np (lưu/Np lại/R basei/Np \\bmod/Np MOD)/Np và/Cc mảng/N hashTi/Np (lưu/Np lại/R mã_Hash/Np của/E T1/M ./CH ./CH i)/Np ./CH\nĐể/E lấy/V mã_Hash/Np của/E Ti/Ny ./CH ./CH j/Np ta/P viết/V hàm/Np sau/E :/CH function/Np getHashT(i/Np ,/CH j)/Np :/CH return/Np (hashTj/Np -/CH hashTi/Np -/CH 1/M powj/Np -/CH i/M +/CH 1/M +/CH MOD_MOD)/Np mod/Np MOD/Np Bài_toán/N chính/T đã/R được/V giải_quyết/V ,/CH và/Cc đây/P là/V chương_trình/N chính/T :/CH for/Np (i/Np :/CH 1/M ./CH ./CH\nm/Nu -/CH n/Ny +1)/Np if/Np hashP/Np =/CH getHashT(i/Np ,/CH i/M +/CH n/Ny -/CH 1)/Np :/CH print(\"Match/Np position/Np :/CH \"/CH ,/CH i)/Np Mã/N chương_trình/N Chương_trình/N sau/E ,/CH tôi/P viết_bằng/Np ngôn_ngữ/N C++/Np ,/CH là/V lời_giải/Np cho/E bài/N SUBSTR/Np :/CH typedef/Np long_long/Np ll/Np ;/CH const/Np int/Np base/Np =/CH 31/M ;/CH const/Np ll/Np MOD/Np =/CH 1000000003/Np ;/CH const/Np ll/Np maxn/Np =/CH 1000111/Np ;/CH using/Np namespace/Np std/Np ;/CH ll/Np POW/Np maxn/Np ,/CH hashT/Np maxn/Np ;/CH ll/Np getHashT/Np (/CH int/Np i/M ,/CH int/Np j/Np )/CH return/Np (/CH hashT/Np j/Np -/CH hashT/Np i/M -/CH 1/M POW/Np j/Np -/CH i/M +/CH 1/M +/CH MOD_MOD/Np )/CH %/CH MOD/Np ;/CH int/Np main/Np ()/Np //CH Input/Np string/Np T/Nu ,/CH P/Ny ;/CH cin/Np gt;gt;/Np T/Nu gt;gt;/Np P/Ny ;/CH //CH Initialize/Np int/Np lenT/Np =/CH T/Nu ./CH\nsize/Nb ()/Np ,/CH lenP/Np =/CH P/Ny ./CH\nsize/Nb ();/Np T/Nu =/CH \"/CH \"/CH +/CH T/Nu ;/CH P/Ny =/CH \"/CH \"/CH +/CH P/Ny ;/CH POW/Np 0/M =/CH 1/M ;/CH //CH Precalculate/Np basei/Np for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np lenT/Np ;/CH i/M ++/Np )/CH POW/Np i/M =/CH (/CH POW/Np i/M -/CH 1/M base/Np )/CH %/CH MOD/Np ;/CH //CH Calculate/Np hash/Np value/Np of/E T1/M ./CH ./CH i/M for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np lenT/Np ;/CH i/M ++/Np )/CH hashT/Np i/M =/CH (/CH hashT/Np i/M -/CH 1/M base/Np +/CH T/Nu i/M -/CH a/Ni +/CH 1/M )/CH %/CH MOD/Np ;/CH //CH Calculate/Np hash/Np value/Np of/E P/Ny ll/Np hashP/Np =/CH 0/M ;/CH for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np lenP/Np ;/CH i/M ++/Np )/CH hashP/Np =/CH (/CH hashP/Np base/Np +/CH P/Ny i/M -/CH a/Ni +/CH 1/M )/CH %/CH MOD/Np ;/CH //CH Finding/Np substrings/Np of/E T/Nu equal/Np to/A string/Np P/Ny for/Np (/CH int/Np i/M =/CH 1/M ;/CH i/M lt;=/Np lenT/Np -/CH lenP/Np +/CH 1/M ;/CH i/M ++/Np )/CH if/Np (/CH hashP/Np ==/Np getHashT/Np (/CH i/M ,/CH i/M +/CH lenP/Np -/CH 1/M ))/Np printf/Np (/CH \"%d/Np \"/CH ,/CH i/M );/CH Đánh_giá/V Độ/N phức_tạp/A của/E thuật_toán/N là/V O(m/Np +/CH n)/Np ./CH\nNhưng/C điều/N quan_trọng/A là/V :/CH chúng_ta/P có_thể/R kiểm_tra/V 2/M xâu/Np có/V giống/N nhau/N hay_không/Np trong/E O(1)/Np ./CH\nĐây/P là/V điều/N tạo/V nên/C sự/N linh_động/Np cho/E thuật_toán/N Hash/Np ./CH\nNgoài/E sự/N linh_động/Np và/Cc tốc_độ/N thực_thi/V ,/CH chúng_ta/P có_thể/R thấy/V cài_đặt/V thuật_toán/N này/P thực_sự/A rất/R đơn_giản/A nếu/C so_với/Np các/L thuật_toán/N xử_lý/V xâu/Np khác/A ./CH\nChi_tiết/N cài_đặt/V Trong/E thuật_toán/N hash/Np ,/CH có/V hai/M yếu_tố/N cần/V quan_tâm/V là/V hệ/N cơ_số/N (base)/Np và/Cc modulo/Np (mod)/Np ./CH\n1/M ./CH\nChọn/V số_nguyên_tố/Np cho/E hệ/N cơ_số/N và/Cc modulo/Np Ý_tưởng/N của/E thuật_toán/N Hash/Np là/V dựa/V trên/E một/M ngộ_nhận/V sai_lầm/N nhưng/C xảy_ra/Np sai_sót/N với/E xác_suất/N vô_cùng/R nhỏ/A :/CH a/Ni \\bmod/Np M/Nu =/CH b/Ni \\bmod/Np M/Nu lt;=gt;/Np a/Ni =/CH b/Ni ./CH\nĐể/E xác_suất/N xảy_ra/Np sai/A là/V 1/M cho/E một/M truy_vấn/Np ,/CH các/L bạn/N cần/V chọn/V hệ/N cơ_số/N và/Cc modulo/Np thỏa_mãn/V đồng_thời/R :/CH base/Np là/V số_nguyên_tố/Np lớn/A hơn/A các/L chữ_cái/Np của/E xâu/Np S/Y ./CH\nMOD/Np là/V số_nguyên_tố/Np ./CH\nPhần/N chứng_minh/V sai_số/Np bạn/N có_thể/R đọc/V thêm/V trong/E blog/Np rng_58/Np ,/CH tuy_nhiên/C phần/N chứng_minh/V rất/R phức_tạp/A nên/C mình/P sẽ/R không/R trình_bày/V ở/E đây/P ./CH\n2/M ./CH\nChọn/V hệ/N cơ_số/N Mình/P khuyến_khích/V các/L bạn/N chọn/V hệ/N cơ_số/N gt;/Np 256/Np (Mình/Np thường/R chọn/V là/V số_nguyên_tố/Np 311)/Np ./CH\nNếu/C bạn/N chọn/V hệ/N cơ_số/N là/V 31/M ,/CH bạn/N chỉ/R làm_việc/V với/E xâu/Np gồm/V toàn/R các/L kí_tự/Np in/V thường/R ,/CH và/Cc phải/V \"mã/Np hóa\"/Np các/L kí_tự/Np từ/E a/Ni đến/E z/Y thành/V các/L số_từ/Np 1/M đến/E 26/M ./CH\nĐiều/N này/P khiến/V code/Np của/E bạn/N bị/V dài/A ./CH\nNếu/C bài_toán/N cho/E xâu/Np có/V các/L kí_tự/Np A/Ni ./CH ./CH ./CH Z/Y ,/CH a/Ni ./CH ./CH z/Y và/Cc 0/M ./CH ./CH ./CH 9/M ,/CH việc/N bạn/N mã_hóa/Np chúng/P thành/V các/L số_từ/Np 1/M đến/E 64/M là/V phức_tạp/A và/Cc không/R cần_thiết/A ./CH\nChưa/R kể/V ,/CH nếu/C bạn/N quên/V mất/V không/R +1/Np và/Cc mã_hoá/Np a/Ni thành/V 0/M là/V hành_động/V tự/P treo_cổ/Np vì/E rất/R dễ/A bị/V hack/Np ./CH\nNếu/C bạn/N chọn/V hệ/N cơ_số/N gt;/Np 256/Np ,/CH bạn/N chỉ_cần/Np dùng/V mã/N ASCII/Np của/E các/L kí_tự/Np là/V xong/V ,/CH và/Cc lại/R tránh/V bị/V hack/Np ./CH\n3/M ./CH\nChọn/V modulo/Np Nếu/C bạn/N không/R hiểu/V rõ/A về/E cách/N đánh_giá/V độ_chính_xác/Np của/E thuật/Np Hash/Np (trình/Np bày/V ở/E mục/N Đánh_giá/V độ_chính_xác/Np )/CH ,/CH bạn/N chỉ_cần/Np chọn/V 3-4/Np số_nguyên_tố/Np khác_nhau/Np làm/V MOD/Np ./CH\nBạn/N có_thể/R tham_khảo/V code/Np của/E Phạm_Văn_Hạnh/Np ./CH\nTuy_nhiên/C các/L bạn/N cũng_nên/Np lưu_ý/V là/V dùng/V nhiều/A MOD/Np quá/R cũng/R làm/V chương_trình/N chạy/V chậm/A đi/V ./CH\n4/M ./CH\nHash/Np tràn/V số/N và/Cc Hash/Np có/V MOD_Trên/Np thực_tế/N ,/CH khi/N cài_đặt/V Hash/Np sử_dụng/V nhiều/A phép/N mod/Np sẽ/R làm/V chương_trình/N chạy/V chậm/A ./CH\nVì_vậy/C ,/CH để/E tăng_tốc_độ/Np ,/CH người_ta/P thường/R cài_đặt/V với/E MOD/Np =/CH 264/Np ./CH\nDo_đó/C ,/CH nếu/C sử_dụng/V kiểu/N dữ_liệu/N số/N 64-bit/Np ,/CH ta/P không/R cần_dùng/Np phép/N mod/Np mà/C cứ/R để/E các/L phép_tính/Np tràn/V số/N ./CH\nKĩ_thuật/N này/P được/V gọi_là/V Hash/Np tràn/V số/N ./CH\nTuy_nhiên/C khi/N cài_đặt/V như_vậy/X có_một/Np vài/L chú_ý/V :/CH Việc/N sử_dụng/V MOD/Np không_phải/Np là/V số_nguyên_tố/Np (và/Np hơn_nữa/C lại/R là/V 1/M số/N cố/V định)/Np khiến/V cho/E hàm/Np Hash/Np không/R đủ/A tốt/A ./CH\nNếu/C test/Np được/V sinh/V ngẫu_nhiên/A ,/CH thì/C nó/P không/R có_vấn_đề/Np gì/P cả/P ./CH\nNhưng/C ở/E trên/E Codeforces/Np ,/CH vì/E những/L người/N thi/V cùng/A có_thể/R \"hack\"/Np code/Np của/E bạn/N bằng/E test/Np tự_sinh/Np ,/CH nên/C bạn/N hầu_như_không/Np thể/N AC/Np các/L bài/N Hash/Np với/E Hash/Np tràn/V số/N ./CH\nBạn/N có_thể/R đọc/V thêm/V về/E cách/N sinh/V test/Np giết/V Hash/Np tràn/V số/N ở/E đây/P ./CH\nCách/N giải_quyết/V là/V dùng/V hash/Np tràn/V số/N kết_hợp/V với/E một/M MOD/Np khác/A ./CH\nNếu/C dùng/V Pascal/Np ,/CH cần/V tắt/V báo/N tràn/V số/N (/CH Q-/Np )/CH ,/CH nếu_không/Np chương_trình/N sẽ/R chạy/V bị/V lỗi/N ./CH\n5/M ./CH\nMột_số/L lời_khuyên/Np nho_nhỏ/A Chỉ/R so_sánh/V mã_hash/Np của/E hai/M xâu/Np có/V cùng/A độ_dài/Np ./CH\nHiển_nhiên/Np ,/CH hai/M xâu/Np kí_tự/Np không_cùng/Np độ_dài/Np thì/C không_bằng/Np nhau/N ./CH\nĐiều/N này/P có_thể/R giảm/V xác_suất/N rủi_ro/A khi/N hash/Np một/M modulo/Np đáng_kể/A ./CH\nỨng_dụng/V Như/C đã/R đề_cập/V ở/E trên/E ,/CH thuật_toán/N này/P sẽ/R có/V trường_hợp/N chạy/V sai/A ./CH\nTất_nhiên/A ,/CH bên_cạnh/R việc/N sử_dụng/V Hash/Np ,/CH còn/R có/V nhiều/A thuật_toán/N xử_lý/V xâu_chuỗi/V khác/A ,/CH mang_lại/Np sự/N chính_xác/A tuyệt_đối/A ./CH\nTôi/P tạm/A gọi/V những/L thuật_toán/N đó/P là/V ‘thuật/Np toán/N chuẩn’/Np ./CH\nViệc/N cài_đặt/V ‘thuật/Np toán/N chuẩn’/Np có_thể/R mang_lại/Np một/M tốc_độ/N chạy/V chương_trình/N cao/A hơn/A ,/CH độ_chính_xác/Np của/E chương_trình/N lớn/A hơn/A ./CH\nTuy_nhiên/C ,/CH người_làm/N bài/N sẽ/R phải/V trả_giá/V là/V sự/N phức_tạp/A khi/N cài_đặt/V các/L ‘thuật/Np toán/N chuẩn’/Np đó/P ./CH\nSử_dụng/V Hash/Np không/R chỉ/R giúp/V người_làm/N bài/N dễ_dàng/A cài_đặt/V hơn/A mà/C quan_trọng/A ở/E chỗ/N :/CH Hash/Np có_thể/R làm/V được/V những/L việc/N mà/C ‘thuật/Np toán/N chuẩn’/Np không/R làm/V được/V ./CH\nSau_đây/Np ,/CH tôi/P sẽ/R xét/V một_vài/L ví_dụ/C để/E chứng_minh/V điều/N này/P ./CH\nLongest/Np palindrome/Np substring/Np Bài_toán/N đặt/V ra/V như_sau/Np :/CH Bạn/N được/V cho/E một/M xâu/Np s/Y độ_dài/Np n/Ny (n/Np \\le/Np 50/M ,/CH 000)/Np ./CH\nBạn/N cần/V tìm/V độ_dài/Np của/E xâu/Np đối_xứng/Np dài/A nhất/A gồm/V các/L kí_tự/Np liên_tiếp/A trong/E s/Y ./CH\n(Xâu/Np đối_xứng/Np là/V xâu/Np đọc/V từ/E 2/M chiều/N giống/N nhau)/Np ./CH\nMột/M ‘thuật/Np toán/N chuẩn’/Np không_thể/R áp_dụng/V vào/E bài_toán/N này/P đó/P là/V thuật_toán/N KMP/Np ./CH\nNgoài_KMP/Np ra/V ,/CH có/V 2/M ‘thuật/Np toán/N chuẩn’/Np có_thể/R áp_dụng/V được/V ./CH\nThuật_toán/N thứ/N nhất/A đó/P là/V sử_dụng/V thuật_toán/N Manacher/Np để/E tính/V bán_kính/Np đối_xứng/Np tại/E tất_cả/P vị_trí/N trong/E xâu/Np ./CH\nThuật_toán/N thứ/N 2/M đó/P là/V sử_dụng/V Suffix_Array/Np và/Cc LCP/Np (Longest/Np Common_Prefix)/Np cho/E xâu/Np được/V nối/V bởi/E s/Y và/Cc xâu/Np s/Y viết/V theo/V thứ_tự/N ngược_lại/X ./CH\n2/M thuật_toán/N này/P đều/R không/R dễ/A ,/CH và/Cc nằm/V ngoài/E phạm_vi/N bài/N viết/V ,/CH nên/C tôi/P chỉ/R nêu/V sơ_qua/Np mà/C không/R đi_vào/Np chi_tiết/N ./CH\nBây_giờ/P ,/CH chúng_ta/P sẽ/R xét/V thuật_toán/N ‘không/Np chuẩn’/Np là/V thuật_toán/N Hash/Np ./CH\nĐể/E đơn_giản/A ,/CH chúng_ta/P xét/V trường_hợp/N độ_dài/Np của/E xâu/Np đối_xứng/Np là/V lẻ/A (trường/Np hợp/V chẵn/Np xử_lý/V hoàn_toàn/A tương/Np tự)/Np ./CH\nGiả_sử/Np xâu/Np đối_xứng/Np độ_dài/Np lẻ/A dài/A nhất/A có/V độ_dài/Np là/V l/Ny ./CH\nDễ/A thấy/V ,/CH trong/E xâu/Np s/Y tồn_tại/V xâu/Np đối_xứng/Np độ_dài/Np l−2/Np ,/CH l−4/Np ,/CH ./CH ./CH ./CH\nTuy_nhiên/C ,/CH xâu/Np s/Y không/R tồn/Np tài/N xâu/Np đối_xứng/Np độ_dài/Np l+2/Np ,/CH l+4/Np ,/CH ./CH ./CH ./CH\nNhư_vậy/X ,/CH s/Y thỏa_mãn/V tính_chất/N chia/V nhị_phân/Np ./CH\nChúng_ta/P sẽ/R chia/V nhị_phân/Np để/E tìm/V độ_dài/Np lớn/A nhất/A có_thể/R ./CH\nVới/E mỗi/L độ_dài/Np l/Ny ,/CH chúng_ta/P cần/V kiểm_tra/V xem/V trong/E xâu/Np có/V tồn_tại/V một/M xâu/Np con/Nc là/V xâu/Np đối_xứng/Np độ_dài/Np l/Ny hay_không/Np ./CH\nĐể/E làm_việc/V này/P ,/CH ta/P duyệt/V qua/V tất_cả/P tất_cả/P các/L xâu/Np con/Nc độ_dài/Np l/Ny trong/E s/Y ./CH\nBài_toán/N còn_lại/Np là/V :/CH kiểm_tra/V xem/V si/Ny ./CH ./CH j/Np với/E (1/Np \\le/Np i/M \\le/Np j/Np \\le/Np m;/Np (j−i+1)/Np \\bmod/Np 2/M =/CH 1)/Np có_phải/Np là/V xâu/Np đối_xứng/Np hay_không/Np ./CH\nCách/N làm/V như_sau/Np ./CH\nGọi/V t/Nu là/V xâu/Np s/Y viết/V theo/V thứ_tự/N ngược_lại/X ./CH\nBằng/E thuật_toán/N Hash/Np ,/CH chúng_ta/P có_thể/R kiểm_tra/V được/V một/M xâu/Np con/Nc nào_đó/P của/E t/Nu có/V bằng/E một/M xâu/Np con/Nc nào_đó/P của/E s/Y hay_không/Np ./CH\nNhư_vậy/X ,/CH chúng_ta/P cần/V kiểm_tra/V si/Ny ./CH ./CH k/N có/V bằng/E tn−j+1/Np ./CH ./CH n−k+1/Np hay_không/Np với/E k/N là/V tâm_đối_xứng/Np ,/CH nói_cách_khác/Np k/N =/CH (i+j)/Np ./CH\nNhư_vậy/X bài_toán/N đã/R được/V giải/N ./CH\nĐộ/N phức_tạp/A cho/E cách/N làm/V này/P là/V O(n/Np log(n))/Np ./CH\nk-th/Np alphabetical/Np cyclic/Np Bài_toán/N đặt/V ra/V như_sau/Np :/CH Bạn/N được/V cho/E một/M dãy/Nc a_1/Np ,/CH a_2/Np ,/CH ./CH ./CH ./CH\n,/CH a_n/Np (n/Np \\le/Np 50/M ,/CH 000)/Np ./CH\nSắp_xếp/V n/Ny hoán_vị/Np vòng_tròn/N của/E dãy/Nc này/P theo/V thứ_tự/N từ_điển/Np ./CH\nCụ_thể/A ,/CH các/L hoán_vị/Np vòng_quanh/V của/E dãy/Nc này/P là/V (a_1/Np ,/CH a_2/Np ,/CH ./CH ./CH ./CH\n,/CH a_n)/Np ,/CH (a_2/Np ,/CH a_3/Np ,/CH ./CH ./CH ./CH ,/CH a_n/Np ,/CH a_1)/Np ,/CH (a_3/Np ,/CH a_4/Np ,/CH ./CH ./CH ./CH ,/CH a_n/Np ,/CH a_1/Np ,/CH a_2)/Np ,/CH ./CH ./CH ./CH\nDãy/Nc này/P có/V thứ_tự/N từ_điển/Np nhỏ/A hơn/A dãy/Nc kia/P nếu/C số/N đầu_tiên/A khác_nhau/Np của/E dãy/Nc này/P nhỏ/A hơn/A dãy/Nc kia/P ./CH\nYêu_cầu/V bài_toán/N là/V :/CH In/V ra/V dãy/Nc có/V thứ_tự/N từ_điển/Np lớn/A thứ/N k/N ./CH\nBài_toán/N này/P có_thể/R được/V giải/N bằng/E Suffix_Array/Np ,/CH tuy_nhiên/C cách/N cài_đặt/V phức_tạp/A và/Cc không_phải/Np trọng_tâm/A của/E bài/N viết/V nên/C tôi/P sẽ/R không/R nêu/V ra/V ở/E đây/P ./CH\nNếu/C tiếp_cận/V một_cách/N trực_tiếp/A ,/CH chúng_ta/P sẽ/R sinh_ra/V tất_cả/P các/L dãy/Nc hoán_vị/Np vòng_quanh/V ,/CH rồi/C sau_đó/Np dùng/V một/M thuật_toán/N sắp_xếp/V để/E sắp_xếp/V lại/R chúng/P theo/V thứ_tự/N từ_điển/Np ,/CH cuối_cùng/A chỉ/R việc/N in/V ra/V dãy/Nc thứ/N k/N sau/E khi/N sắp_xếp/V ./CH\nTuy_nhiên/C độ/N phức_tạp/A của/E thuật_toán/N này/P là/V rất/R lớn/A và/Cc không_thể/R đáp_ứng/V được/V yêu_cầu/V về/E thời_gian/N ./CH\nCụ_thể/A ,/CH cách/N này/P có/V độ/N phức_tạp/A là/V O(n2/Np log(n))/Np ,/CH đây/P là/V tích/N của/E độ/N phức_tạp/A của/E sắp_xếp/V và/Cc độ/N phức_tạp/A của/E mỗi/L phép/N so_sánh/V dãy/Nc ./CH\nVẫn/R giữ/V tư_tưởng/N là/V sắp_xếp/V lại/R tất_cả/P các/L dãy/Nc hoán_vị/Np vòng_quanh/V rồi/C in/V ra/V dãy/Nc đứng/V ở/E vị_trí/N thứ/N k/N ,/CH chúng_ta/P cố_gắng/V cải_tiến_độ/Np phức_tạp/A của/E việc/N so_sánh/V thứ_tự/N từ_điển/Np của/E 2/M dãy/Nc ./CH\nNhắc_lại/Np định_nghĩa/N về/E thứ_tự/N từ_điển/Np của/E 2/M dãy/Nc :/CH Xét/V 2/M dãy/Nc a/Ni và/Cc b/Ni có/V cùng/A số/N phần_tử/N ./CH\nGọi/V ví/N trí/Np thứ/N i/M là/V vị_trí_đầu/Np tiên/N từ/E trái/Nc sang/V mà/C a_i/Np \\ne/Np b_i/Np ./CH\na/Ni lt;/Np b/Ni \\Leftrightarrow/Np a_i/Np lt;/Np b_i/Np ./CH\nNhư_vậy/X ,/CH ta/P phải/V tìm/V đoạn/Nc tiền_tố/Np giống/N nhau/N dài/A nhất/A của/E a/Ni và/Cc b/Ni ,/CH rồi/C so_sánh/V kí_tự/Np tiếp_theo/V ./CH\nĐể/E tìm/V được/V đoạn/Nc tiền_tố/Np giống/N nhau/N dài/A nhất/A ,/CH ta/P có_thể/R sử_dụng/V Hash/Np kết_hợp/V với/E chia/V nhị_phân/Np ./CH\nĐể/E giải/N được/V bài/N này/P ,/CH cần/V sử_dụng/V thêm/V một/M kỹ_thuật/N nhỏ/A nữa/R :/CH Thay_vì/X sinh_ra/V tất_cả/P các/L hoán_vị/Np vòng_quanh/V ,/CH chúng_ta/P chỉ_cần/Np nhân/N đôi/M dãy/Nc a/Ni lên/V ,/CH dãy/Nc mới/R sẽ/R có/V 2n/Np phần_tử/N :/CH (a_1/Np ,/CH a_2/Np ,/CH ./CH ./CH ./CH ,/CH a_n/Np ,/CH a_1/Np ,/CH a_2/Np ,/CH ./CH ./CH ./CH ,/CH a_n)/Np ./CH\nMột/M hoán_vị/Np vòng_quanh/V sẽ/R là/V một/M dãy/Nc con/Nc liên_tiếp/A độ_dài/Np n/Ny của/E dãy/Nc nhân/N đôi/M này/P ./CH\nTừ_đó/Np ta/P thu/V được/V thuật_toán/N với/E độ/N phức_tạp/A O(nlog2(n))_Longest/Np substring/Np and/Np appear/Np at/Np least/Np k/N times/Np Bài_toán/N đặt/V ra/V như_sau/Np :/CH Bạn/N được/V cho/E xâu/Np s/Y độ_dài/Np n/Ny (n/Np \\le/Np 50/M ,/CH 000)/Np ,/CH bạn/N cần/V tìm_ra/Np xâu/Np con/Nc của/E s/Y có/V độ_dài/Np lớn/A nhất/A ,/CH và/Cc xâu/Np con/Nc này/P xuất_hiện/V ít_nhất/A k/N lần/N ./CH\nBài_toán/N này/P có_thể/R được/V giải/N bằng/E Suffix_Array/Np ,/CH tuy_nhiên/C cách/N cài_đặt/V phức_tạp/A và/Cc không_phải/Np trọng_tâm/A của/E bài/N viết/V nên/C tôi/P sẽ/R không/R nêu/V ra/V ở/E đây/P ./CH\nTiếp_tục/V bàn/N đến/E thuật_toán/N Hash/Np để/E thay_thế/V thuật_toán/N chuẩn/N ./CH\nNhận_xét/N rằng/C ,/CH giả_sử/Np độ_dài/Np lớn/A nhất/A tìm/V được/V là/V l/Ny ,/CH thì/C với/E mọi/L l′/Np \\le/Np l/Ny ,/CH luôn/R tồn_tại/V xâu/Np có/V độ_dài/Np l′/Np xuất_hiện/V ít_nhất/A k/N lần/N ./CH\nTuy_nhiên/C ,/CH với/E mọi/L l′/Np gt;/Np l/Ny ,/CH không/R tồn_tại/V xâu/Np có/V độ_dài/Np l′/Np xuất_hiện/V ít_nhất/A k/N lần/N (do/Np l/Ny đã_là/Np lớn/A nhất)/Np ./CH\nNhư_vậy/X ,/CH l/Ny thỏa_mãn/V tính_chất/N chia/V nhị_phân/Np ./CH\nChúng_ta/P có_thể/R áp_dụng/V thuật_toán/N tìm_kiếm/V nhị_phân/Np để/E tìm_ra/Np l/Ny lớn/A nhất/A ./CH\nBây_giờ/P ,/CH với/E mỗi/L l/Ny khi/N đang/R chia/V nhị_phân/Np ,/CH chúng_ta/P sẽ/R phải/V kiểm_tra/V liệu/V có/V tồn_tại/V xâu/Np con/Nc nào/P xuất_hiện/V ít_nhất/A k/N lần/N hay_không/Np ./CH\nĐiều/N này/P được/V làm/V rất/R đơn_giản/A ,/CH bằng/E cách/N sinh/V mọi/L mã_Hash/Np của/E các/L xâu/Np con/Nc độ_dài/Np k/N trong/E s/Y ./CH\nSau_đó/Np sắp_xếp/V lại/R các/L mã_Hash/Np này/P theo/V chiều/N tăng/V dần/R ,/CH rồi/C kiếm/V tra/V xem/V có_một/Np đoạn/Nc liên_tiếp/A các/L mã_Hash/Np nào/P giống/N nhau/N độ_dài/Np l/Ny hay_không/Np ./CH\nNhư_vậy/X ,/CH độ/N phức_tạp/A để/E chia/V nhị_phân/Np là/V O(log(n))/Np ,/CH độ/N phức_tạp/A của/E sắp_xếp/V là/V O(n/Np log(n))/Np ,/CH vậy/P độ/N phức_tạp/A của/E cả/P bài_toán/N là/V O(n/Np log2(n)/Np )/CH ./CH\nĐánh_giá/V độ_chính_xác/Np Thông_thường/A ,/CH khi/N sử_dụng/V Hash/Np ,/CH ta/P thường/R gặp_phải/Np 2/M trường_hợp/N như_sau/Np :/CH Trả_lời/V Q/Ny truy_vấn/Np ,/CH mỗi/L truy_vấn/Np có/V dạng/N kiểm_tra/V 2/M đoạn/Nc con/Nc của/E 2/M xâu/Np có/V bằng_nhau/Np hay_không/Np Cho_N/Np xâu/Np ,/CH kiểm_tra/V tất_cả/P các/L xâu/Np có/V phân_biệt/V hay_không/Np ./CH\nGiả_sử_ta/Np chọn/V MOD/Np là/V một_số/L nguyên_tố/N khoảng/N 109/M ,/CH và/Cc giả_sử/Np dữ_liệu/N được/V sinh/V ngẫu_nhiên/A và/Cc hàm/Np hash/Np của/E chúng_ta/P đủ/A tốt/A để/E Hash/Np của/E các/L xâu/Np được/V phân_bố/V đều/R và/Cc ngẫu_nhiên/A ./CH\nTrường_hợp/N 1/M Giả_sử/Np Q/Ny khoảng/N 105/Np ,/CH và/Cc bộ/N test/Np có/V T/Nu =/CH 100/M test/Np ./CH\nVới/E 2/M xâu/Np khác_nhau/Np ,/CH xác_suất/N để/E nó/P có/V cùng/A Hash/Np là/V xấp_xỉ/A 1/M //CH 109/M ./CH\nNhư_vậy/X ,/CH xác_suất/N để/E trả_lời/V đúng/A 1/M truy_vấn/Np là/V :/CH 1/M -/CH 1/M //CH 109/M ./CH\nỞ/E trường_hợp/N xấu/A nhất/A ,/CH ta/P có/V Q/Ny truy_vấn/Np mà/C mỗi/L truy_vấn/Np là/V một/M cặp_xâu/Np khác_nhau/Np ./CH\nXác_suất/N để/E ta/P trả_lời/V đúng/A tất_cả/P các/L truy_vấn/Np là/V :/CH (1/Np -/CH 1/M //CH 109)Q/Np ./CH\nXác_suất/N để/E ta/P trả_lời/V đúng/A tất_cả/P các/L truy_vấn/Np của/E tất_cả/P các/L test/Np là/V :/CH (1/Np -/CH 1/M //CH 109)Q/Np T/Nu ./CH\nThay/V số/N vào/E ,/CH xác_suất/N để/E trả_lời/V đúng/A tất_cả/P các/L truy_vấn/Np là/V 0/M ./CH 9900/Np ,/CH đủ/A lớn/A để/E ta/P yên_tâm/A qua/V tất_cả/P các/L test/Np ,/CH với/E điều_kiện/N test/Np không/R được/V sinh/V dựa/V trên/E P/Ny ./CH\n(Chú/Np ý/N nếu/C bạn/N đang/R thi/V những/L contest/Np như/C Topcoder/Np ,/CH người/N khác/A có_thể/R đọc/V được/V P/Ny của/E bạn/N và/Cc sinh/V test/Np để/E challenge/Np code/Np của/E bạn)/Np ./CH\nTrường_hợp/N 2/M Theo_Birthday_Paradox/Np ,/CH ta/P dễ_dàng/A thấy/V rằng/C ,/CH nếu/C có/V \\sqrtP/Np =/CH 3104/Np xâu/Np ,/CH xác_suất/N để/E 2/M xâu/Np bằng_nhau/Np là/V rất/R lớn/A ./CH\nThật_vậy/Np ,/CH xác_suất/N để/E tất_cả/P các/L xâu/Np khác_nhau/Np là/V :/CH (1/Np -/CH 1/M //CH 109)/Np (1/Np -/CH 2/M //CH 109)/Np (1/Np -/CH 3/M //CH 109)/Np ./CH ./CH ./CH\n(1/Np -/CH N/Ny //CH 109)/Np ./CH\nVới_N/Np =/CH 30/M ,/CH 000/Np ,/CH tích/N trên/E là/V 0/M ./CH 6376/Np ,/CH nghĩa_là/V bạn/N có/V gần/A 0/M ./CH 40/M xác_suất/N trả_lời/V sai/A ./CH\nDo_vậy/C ,/CH bạn/N bắt_buộc/V phải/V dùng/V nhiều/A MOD/Np khác_nhau/Np ./CH\nTổng_kết/V Thuật_toán/N Ý_tưởng/N thuật_toán/N Hash/Np dựa/V trên/E việc/N đổi/V từ/E hệ/N cơ_số/N lớn/A sang/V hệ_thập_phân/Np ,/CH so_sánh/V hai/M số_thập_phân/Np lớn/A bằng/E cách/N so_sánh/V phần/N dư/A của/E chúng/P với/E một_số/L đủ/A lớn/A ./CH\nCài_đặt/V Khi/N cài_đặt/V Hash/Np ,/CH ta/P cần/V chọn/V :/CH Hệ/N cơ_số/N MOD_Với/Np những/L trang_web/N mà/C người/N khác/A có_thể/R đọc/V code/Np bạn/N rồi/C tìm/V test/Np sai/A (như/Np Codeforces/Np ,/CH Topcoder)/Np ,/CH nếu/C Hash/Np tràn/V số/N hoặc/Cc MOD/Np là/V 1/M số_nguyên/Np biết/V trước/E ,/CH có_thể/R sinh/V test/Np để/E làm/V code/Np bạn/N sai/A ./CH\nVới/E những/L kỳ/N thi/V như/C HSG_QG/Np ,/CH IOI/Np ,/CH ACM/Np ,/CH và/Cc các/L Online_Judge/Np ,/CH thông_thường/A sẽ/R không/R có/V những/L test/Np như_vậy/X ./CH\nTóm_lại/Np ,/CH khi/N chọn/V MOD/Np và/Cc hệ/N cơ_số/N ta/P làm/V như_sau/Np :/CH Chọn/V hệ/N cơ_số/N là/V số_nguyên_tố/Np lớn/A hơn/A số_lượng/N ký_tự/Np (ví/Np dụ/V 31/M ,/CH 71)/Np ./CH\nChọn_MOD/Np đủ/A lớn/A theo/V nguyên_tắc/N đã/R phân_tích/V ở/E phần/N Đánh_giá/V độ_chính_xác/Np ./CH\nNếu/C là/V Topcoder/Np hoặc/Cc Codeforces/Np ,/CH dùng/V kết_hợp/V Hash/Np tràn/V số/N và/Cc 1/M MOD/Np đủ/A lớn/A ./CH\nNếu_không/Np phải/V Topcoder/Np hay/Cc Codeforces/Np ,/CH có_thể/R dùng/V Hash/Np tràn/V số/N ./CH\nNếu_MOD/Np =/CH 264/Np chưa/R đủ/A lớn/A thì/C dùng/V thêm/V 1/M MOD/Np nữa/R ./CH\nƯu_điểm/N Ưu_điểm/N của/E thuật_toán/N Hash/Np là/V cài_đặt/V rất/R dễ_dàng/A ./CH\nLinh_động/Np trong/E ứng_dụng/V và/Cc có_thể/R thay_thế/V các/L thuật_toán/N chuẩn/N ‘hầm/Np hố’/Np khác/A ./CH\nNhược_điểm/N Nhược_điểm/N của/E thuật_toán/N Hash/Np là/V tính/V chính_xác/A ./CH\nMặc_dù/C rất/R khó/A sinh/V test/Np để/E có_thể/R làm_cho/Np thuật_toán/N chạy/V sai/A ,/CH nhưng/C không_phải/Np là/V không_thể/R ./CH\nVì_vậy/C ,/CH để/E nâng_cao/Np tính/V chính_xác/A của/E thuật_toán/N ,/CH người_ta/P thường_dùng/Np nhiều/A modulo/Np khác_nhau/Np để/E so_sánh/V mã_Hash/Np (ví/Np dụ/V như/C dùng/V 3/M modulo/Np một/M lúc)/Np ./CH\nBài_tập/Np áp_dụng/V VOJ/Np -/CH SUBSTR_VOJ/Np -/CH PALINY_VOJ/Np -/CH DTKSUB_VOJ/Np -/CH DTCSTR_VOJ/Np -/CH TWOOPERS_VOJ/Np -/CH VOSTR_SGU/Np 426/Np Các/L nguồn/N tham_khảo/V Wikipedia/Np -/CH String_Searching_Algorithm_Wikipedia/Np -/CH KMP_Wikipedia/Np -/CH Rabin_Karp_Wikipedia/Np -/CH Alphabetical_Order/Np\n", "title": "Hash: A String Matching Algorithm\n", "link": "http://vnoi.info/wiki/algo/string/hash\n"}