Nơi tổng_hợp và chia_sẻ những kiến_thức liên_quan tới giải_thuật nói_chung và lý_thuyết khoa_học máy_tính nói_riêng .
in Trong bài này chúng_ta thảo_luận giải_thuật quy_hoạch_động để giải bài_toán Người Du_Lịch (Traveling Salesman_Problem - TSP) .
Giải_thuật này được đề_xuất bởi và cũng được đề_xuất độc_lập bởi Bellman vào năm 1962 .
Bài_toán như_sau : Ví_dụ : Các thành_phố và chi_phí giữa chúng được cho bởi hình bên trái của hình dưới_đây .
Một hành_trình tối_ưu với tổng_chi_phí 18 được cho bởi hình bên phải .
Bài_toán này có_thể được giải bằng phương_pháp với thời_gian .
Trong bài này mình sẽ giới_thiệu lời_giải bằng quy_hoạc động với thời_gian và thảo_luận một phương_pháp thực_thi bằng C . Giả_sử , , là một hành_trình tối_ưu đi từ thành_phố đến thành_phố qua thành_phố khác và quay_lại .
Vì hành_trình là tối_ưu , hành_trình đi từ tới qua các thành_phố cũng phải là hành_trình tối_ưu .
Như_vậy , nếu gọi_là chi_phí nhỏ nhất đi từ tới qua các thành_phố trong tập_hợp (không chứa ) , ta có_công thức đệ_quy sau : Do_đó , để tính , ta chỉ_cần đảm_bảo các giá_trị với đã được tính trước .
Giả mã như_sau : Hàm tính chi_phí của hành_trình từ đến qua mỗi thành_phố trong (không chứa ) chính_xác 1 lần và được tính theo công_thức đệ_quy .
Giả mã như_sau : Thời_gian tính của thuật_toán trên có_thể được quy về thời_gian cập_nhật bảng Cost có kíc thước .
Mỗi phần từ của bảng được cập_nhật theo thủ_tục và mất thời_gian .
Do_đó tổng thời_gian tính_toán của thuật_toán là .
Thuật_toán quy_hoạch_động của bài_toán TSP cho bởi giả mã không quá phức_tạp .
Tuy_nhiên khi thực_thi thuật_toán bằng C hay một_số ngôn_ngữ khác khi mà các phép_toán liên_quan đến tập_hợp chưa sẵn_có thì_có một_số vấn_đề chúng_ta cần phải giả quyết : Trong phần này mình thảo_luận một_cách để thực_thi bằng với và giới_thiệu một_số kĩ_thuật xử_lí bit .
Trước_hết đối_với vấn_đề số 2 , chúng_ta có_thể mã_hóa bằng cách gán cho mỗi tập_con của một_số duy_nhất , gọi_là , để việc truy_xuất hay cập_nhật được hiệu qủa .
Ta có_thể mã_hóa một_tập con của tập phần_tử bằng một_số nguyên bít , trong đó nếu phần_tử và nếu .
của chính là giá_trị của số_nguyên đó .
Ví_dụ : , tập_con có_thể được biểu_diễn bởi số_nguyên ở hình dưới_đây , và có .
Việc chứng_minh không có hai tập_con khác_nhau nào có cùng một coi_như bài_tập cho bạn_đọc .
. Như_vậy chúng_ta đã có cách để mã_hóa mỗi_một tập_con thành một_số nguyên duy_nhất tương_ứng .
Phần tiếp_theo của bài viết dùng một_số các phép_toán xử_lí bít .
Các phép_toán cơ_bản gồm có : AND () , OR () , XOR () , NOT (~) , SHIFT_LEFT ( ) .
Ví_dụ một_số cách xử_lí bít để tính các hàm_cơ_bản như : Bạn_đọc có_thể tham_khảo thêm ở Bây_giờ ta giải_quyết bài_toán sinh các tập_con kích_thước của tập_hợp có kích_thước .
Ở đây ta sẽ sinh tập_con theo thứ_tự từ_điển .
Như_vậy ta có_thể quy về bài_toán cho một_tập con , tìm tập_con tiếp_theo có phần_tử theo thứ_tự từ_điển .
Giả_sử tập_con đó được cho dưới dạng mã_hóa bit như_trên , ta quy về bài_toán : Ví_dụ : , số_nguyên tiếp_theo sẽ là .
Ta có_thể nhận_thấy là nếu có ( có_thể bằng 0) bít cuối_cùng là 0 , trước đó là bít 1 (như ở hình bên trái của hình dưới đây) , thì sẽ có bít cuối là 1 , trước đó là bít 0 và trước bít 0 đó là 1 bít 1 (như hình bên phải của hình dưới đây) .
Như_vậy để giải bài_toán trên , ta tìm cách chuyển thành giống_như trong hình trên .
Giả mã (gần giống với C) như_sau : Để bạn_đọc không mất tập_trung vào giải_thuật chính , mình sẽ giải_thích đoạn code này ở cuối bài .
Code_bằng C của giả mã như_sau : Bài_toán tiếp_theo chúng_ta phải giải đó là liệt_kê các tập_con : Với mỗi tập , mình dùng danh_sách liên_kết để lưu các tập_con của có kích_thước .
Đầu của danh_sách lưu .
Mỗi mắt_xích gồm hai trường : trường lưu mã của tập_con và trường lưu phần_tử .
Giả mã được cho ở dưới , seed là của tập_con .
Code_bằng C của giả mã : Dựa vào thủ_tục ( seed , ) , ta có_thể tính trước_mảng Subsets , trong đó mỗi phần_tử của mảng Subsets là một danh_sách liên_kết lưu các tập_con có kích_thước của tập có là .
Giả mã như_sau : Code của giả mã bằng C : Như_vậy , chúng_ta đã giải_quyết xong bài_toán mã_hóa các tập_con và sinh các tập_con của một_tập có kích_thước .
Vấn_đề còn_lại chỉ là ghép các phần lại với_nhau để giải_quyết bài_toán .
Giả mã của thuật_toán như_sau : Code_bằng C của giả mã : Thủ_tục (S , i) Code của giả mã bằng C : Các thao_tác trong hàm ( , ) được minh_hoạ bởi hình sau : Code : , 1 Sanjoy_Dasgupta , Christos_Papadimitriou , and Umesh_Vazirani .
.
1st Edition) .
McGraw-Hill_Higher_Education , (2008) .
.
, , , Trackback link : on Ad giải_thích hộ mình đoạn công_thức đệ_quy với .
đoạn minj thuộc s ấy .
minj là gì và tính thế_nào vậy ?
on Hi bạn Hòa , Cám_ơn bạn đã đặt_câu hỏi .
Theo_như định_nghĩa của hàm_Cost : là chi_phí nhỏ nhất đi từ tới i qua các thành_phố trong tập_hợp (không chứa i) .
Do đường_đi với chi_phí nhỏ nhất đi từ tới i chỉ qua S , đường_đi này phải đi_qua một đỉnh nào_đó thuộc trước_khi đến i .
Tức_là đường_đi có dạng .
Do_đó .
Tuy_nhiên ở đây ta không biết cụ_thể mà chỉ biết thuộc .
Do_đó , ta phải duyệt qua tất_cả các có_thể thuộc và lấy min .
Hi_vọng đoạn này giải_đáp thắc_mắc của bạn . Hùng on Mình hiểu rồi .
Cảm_ơn bạn nhiều lắm on Không có gì đâu .
Cám_ơn bạn đã ghé thăm . Powered by and
